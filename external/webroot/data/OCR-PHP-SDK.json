{
  "html": "<h1 id=\"15026e65\">PHP SDK文档</h1><p>本文档主要介绍OCR PHP SDK的安装和使用。在使用本文档前，您需要先了解Optical Character Recognition(OCR)的基础知识，并已经开通了OCR服务。</p><h1 id=\"fb171c40\">安装OCR PHP SDK</h1><p><strong>OCR PHP SDK目录结构</strong></p><pre>\n<code class=\"hljs\" lang=\"\">ocr\n       ├── AipOcr                          <span class=\"hljs-comment\">//Ocr识别类</span>\n       ├── lib\n       │      ├── AipHttpClient<span class=\"hljs-selector-class\">.php</span>        <span class=\"hljs-comment\">//内部http请求类</span>\n       │      ├── AipBCEUtil<span class=\"hljs-selector-class\">.php</span>           <span class=\"hljs-comment\">//内部工具类</span>\n       │      ├── AipBase                  <span class=\"hljs-comment\">//Aip基类</span>\n       └── demo\n              ├── DemoAipOcr<span class=\"hljs-selector-class\">.php</span>           <span class=\"hljs-comment\">//OCR服务示例</span>\n              ├── idcard<span class=\"hljs-selector-class\">.jpg</span>               <span class=\"hljs-comment\">//身份证图片示例</span>\n              ├── bankcard<span class=\"hljs-selector-class\">.jpg</span>             <span class=\"hljs-comment\">//银行卡图片示例</span>\n              └── general<span class=\"hljs-selector-class\">.png</span>              <span class=\"hljs-comment\">//文字图片示例</span></code>\n</pre><p><strong>支持 PHP版本：5.3+</strong></p><p><strong>使用SDK步骤如下：</strong></p><p>1.在<a href=\"http://ai.baidu.com/sdk\" target=\"_blank\">官方网站</a>下载PHP SDK压缩工具包。</p><p>2.将下载的<pre>\n<code class=\"hljs\" lang=\"\">aip-ocr-php-sdk-<span class=\"hljs-keyword\">version</span>.<span class=\"hljs-keyword\">zip</span></code>\n</pre>解压后，复制AipOrc.php以及lib/*到工程文件夹中。</p><p>3.引入AipOcr.php。</p><h1 id=\"d372093a\">快速入门</h1><h2 id=\"3e76af76\">初始化一个AipOcr对象</h2><p>AipOcr类是Optical Character Recognition的PHP SDK客户端，为使用Optical Character Recognition的开发人员提供了一系列的交互方法。</p><p>用户可以参考如下代码初始化一个AipOcr对象：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 引入文字识别OCR SDK</span>\n<span class=\"hljs-keyword\">require_once</span> <span class=\"hljs-string\">'AipOcr.php'</span>;\n\n<span class=\"hljs-comment\">// 定义常量</span>\n<span class=\"hljs-keyword\">const</span> APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n<span class=\"hljs-keyword\">const</span> API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>;\n<span class=\"hljs-keyword\">const</span> SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>;\n\n<span class=\"hljs-comment\">// 初始化ApiOcr对象</span>\n$aipOcr = <span class=\"hljs-keyword\">new</span> AipOcr(APP_ID, API_KEY, SECRET_KEY);</code>\n</pre><p>在上面代码中，常量<pre>\n<code class=\"hljs\" lang=\"\">APP_ID</code>\n</pre>在百度云控制台中创建，常量<pre>\n<code class=\"hljs\" lang=\"\">API_KEY</code>\n</pre>与<pre>\n<code class=\"hljs\" lang=\"\">SECRET_KEY</code>\n</pre>是在创建完毕应用后，系统分配给用户的，均为字符串，用于标识用户，为访问做签名验证，可在AI服务控制台中的<strong>应用列表</strong>中查看。</p><p><strong>注意：</strong>如您以前是百度云的老用户，其中<pre>\n<code class=\"hljs\" lang=\"\">API_KEY</code>\n</pre>对应百度云的“Access Key ID”，<pre>\n<code class=\"hljs\" lang=\"\">SECRET_KEY</code>\n</pre>对应百度云的“Access Key Secret”。</p><h1 id=\"d3b528de\">通用文字识别</h1><p>通用文字识别可以接受任意图片，并识别出图片中的文字。</p><p>图片参数仅支持图片文件内容。</p><p>举例，要对一张图片进行文字识别：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 引入文字识别OCR SDK</span>\n<span class=\"hljs-keyword\">require_once</span> <span class=\"hljs-string\">'AipOcr.php'</span>;\n\n<span class=\"hljs-comment\">// 定义常量</span>\n<span class=\"hljs-keyword\">const</span> APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n<span class=\"hljs-keyword\">const</span> API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>;\n<span class=\"hljs-keyword\">const</span> SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>;\n\n<span class=\"hljs-comment\">// 初始化ApiOcr</span>\n$apiOcr = <span class=\"hljs-keyword\">new</span> AipOcr(APP_ID, API_KEY, SECRET_KEY);\n\n<span class=\"hljs-comment\">// 调用通用文字识别接口</span>\n$result = $apiOcr-&gt;general(file_get_contents(<span class=\"hljs-string\">'general.jpg'</span>));</code>\n</pre><p>传入图片时还想增加一些自定义参数配置：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 引入文字识别OCR SDK</span>\n<span class=\"hljs-keyword\">require_once</span> <span class=\"hljs-string\">'AipOcr.php'</span>;\n\n<span class=\"hljs-comment\">// 定义常量</span>\n<span class=\"hljs-keyword\">const</span> APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n<span class=\"hljs-keyword\">const</span> API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>;\n<span class=\"hljs-keyword\">const</span> SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>;\n\n<span class=\"hljs-comment\">// 初始化ApiOcr</span>\n$apiOcr = <span class=\"hljs-keyword\">new</span> AipOcr(APP_ID, API_KEY, SECRET_KEY);\n\n<span class=\"hljs-comment\">// 定义参数变量</span>\n$option = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">'detect_direction'</span> =&gt; <span class=\"hljs-keyword\">false</span>, <span class=\"hljs-string\">'language_type'</span> =&gt; <span class=\"hljs-string\">\"CHN_ENG\"</span>);\n\n<span class=\"hljs-comment\">// 调用通用文字识别接口</span>\n$result = $apiOcr-&gt;general(file_get_contents(<span class=\"hljs-string\">'general.jpg'</span>), $option);</code>\n</pre><p><strong>通用文字识别 请求参数详情</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码</td></tr><tr><td>recognize_granularity</td><td>false</td><td>string</td><td>big、small</td><td>是否定位单字符位置，big：不定位单字符位置，默认值；small：定位单字符位置</td></tr><tr><td>mask</td><td>false</td><td>string</td><td>-</td><td>表示mask区域的黑白灰度图片，白色代表选中, base64编码</td></tr><tr><td>language_type</td><td>false</td><td>string</td><td>CHN_ENG、ENG、POR、FRE、GER、ITA、SPA、RUS、JAP</td><td>识别语言类型，默认为CHN_ENG。可选值包括：<br>- CHN_ENG：中英文混合；<br>- ENG：英文；<br>- POR：葡萄牙语；<br>- FRE：法语；<br>- GER：德语；<br>- ITA：意大利语；<br>- SPA：西班牙语；<br>- RUS：俄语；<br>- JAP：日语</td></tr><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>detect_language</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否检测语言，默认不检测。当前支持（中文、英语、日语、韩语）</td></tr><tr><td>classify_dimension</td><td>FALSE</td><td>string</td><td>lottery</td><td>分类维度（根据OCR结果进行分类），逗号分隔，当前只支持lottery。<br>lottery：彩票分类，设置detect_direction有助于提升精度</td></tr><tr><td>vertexes_location</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否返回文字外接多边形顶点位置，不支持单字位置。默认为false</td></tr></tbody></table><p><strong>通用文字识别 返回数据参数详情</strong></p><table><thead><tr><th>字段</th><th>必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>定位和识别结果数组</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>+vertexes_location</td><td>否</td><td>array()</td><td>当前为四个顶点: 左上，右上，右下，左下。当vertexes_location=true时存在</td></tr><tr><td>++x</td><td>是</td><td>uint32</td><td>水平坐标（坐标0点为左上角）</td></tr><tr><td>++y</td><td>是</td><td>uint32</td><td>垂直坐标（坐标0点为左上角）</td></tr><tr><td>+location</td><td>是</td><td>array()</td><td>位置数组（坐标0点为左上角）</td></tr><tr><td>++left</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td>++top</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td>++width</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的宽度</td></tr><tr><td>++height</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的高度</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr><tr><td>+chars</td><td>否</td><td>array()</td><td>单字符结果，recognize_granularity=small时存在</td></tr><tr><td>++location</td><td>是</td><td>array()</td><td>位置数组（坐标0点为左上角）</td></tr><tr><td>+++left</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td>+++top</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td>+++width</td><td>是</td><td>uint32</td><td>表示定位定位位置的长方形的宽度</td></tr><tr><td>+++height</td><td>是</td><td>uint32</td><td>表示位置的长方形的高度</td></tr><tr><td>++char</td><td>是</td><td>string</td><td>单字符识别结果</td></tr></tbody></table><h1 id=\"f5c36858\">银行卡识别</h1><p>银行卡文字识别需要接受银行卡正面带数字的清晰图片，能识别出对应的银行卡号。</p><p>图片参数仅支持图片文件内容。</p><p>举例，要对一张银行卡进行文字识别：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 引入文字识别OCR SDK</span>\n<span class=\"hljs-keyword\">require_once</span> <span class=\"hljs-string\">'AipOcr.php'</span>;\n\n<span class=\"hljs-comment\">// 定义常量</span>\n<span class=\"hljs-keyword\">const</span> APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n<span class=\"hljs-keyword\">const</span> API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>;\n<span class=\"hljs-keyword\">const</span> SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>;\n\n<span class=\"hljs-comment\">// 初始化ApiOcr</span>\n$apiOcr = <span class=\"hljs-keyword\">new</span> AipOcr(APP_ID, API_KEY, SECRET_KEY);\n\n<span class=\"hljs-comment\">// 调用银行卡识别接口</span>\n$result = $apiOcr-&gt;bankcard(file_get_contents(<span class=\"hljs-string\">'bankcard.jpg'</span>));</code>\n</pre><p><strong>银行卡识别 请求参数详情</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">描述</th><th style=\"text-align:left\">是否必须</th></tr></thead><tbody><tr><td style=\"text-align:left\">image</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">图像数据，仅支持图像文件流</td><td style=\"text-align:left\">是</td></tr></tbody></table><p><strong>银行卡识别 返回数据参数详情</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">描述</th></tr></thead><tbody><tr><td style=\"text-align:left\">log_id</td><td style=\"text-align:left\">Uint64</td><td style=\"text-align:left\">唯一的log id，用于问题定位</td></tr><tr><td style=\"text-align:left\">result</td><td style=\"text-align:left\">Object</td><td style=\"text-align:left\">定位和识别结果数组</td></tr><tr><td style=\"text-align:left\">+bank_card_number</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">银行卡识别结果</td></tr><tr><td style=\"text-align:left\">+bank_name</td><td style=\"text-align:left\">string</td><td style=\"text-align:left\">银行名，不能识别时为空</td></tr><tr><td style=\"text-align:left\">+bank_card_type</td><td style=\"text-align:left\">uint32</td><td style=\"text-align:left\">银行卡类型，0:不能识别; 1: 借记卡; 2: 信用卡</td></tr></tbody></table><h1 id=\"ce76bfd7\">身份证识别</h1><p>身份证识别一次只能接受身份证正面或反面的清晰图片，能识别出证件上的文字。</p><p>图片参数仅支持图片文件内容。</p><p>举例，要对一张身份证进行文字识别，可以仅传入图片信息和注明正面/反面： 返回的result记录了信息， 正面支持：住址、公民身份号码、出生、姓名、性别、民族， 背面支持：签发日期、失效日期</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 引入文字识别OCR SDK</span>\n<span class=\"hljs-keyword\">require_once</span> <span class=\"hljs-string\">'AipOcr.php'</span>;\n\n<span class=\"hljs-comment\">// 定义常量</span>\n<span class=\"hljs-keyword\">const</span> APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n<span class=\"hljs-keyword\">const</span> API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>;\n<span class=\"hljs-keyword\">const</span> SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>;\n\n<span class=\"hljs-comment\">// 初始化ApiOcr</span>\n$apiOcr = <span class=\"hljs-keyword\">new</span> AipOcr(APP_ID, API_KEY, SECRET_KEY);\n\n<span class=\"hljs-comment\">// 设置识别身份证正面参数</span>\n$isFront = <span class=\"hljs-keyword\">false</span>;\n\n<span class=\"hljs-comment\">// 调用身份证识别接口</span>\n$result = $apiOcr-&gt;idcard(file_get_contents(<span class=\"hljs-string\">'idcard.jpg'</span>), $isFront);</code>\n</pre><p>传入图片时还想增加一些自定义参数配置：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 引入文字识别OCR SDK</span>\n<span class=\"hljs-keyword\">require_once</span> <span class=\"hljs-string\">'AipOcr.php'</span>;\n\n<span class=\"hljs-comment\">// 定义常量</span>\n<span class=\"hljs-keyword\">const</span> APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n<span class=\"hljs-keyword\">const</span> API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>;\n<span class=\"hljs-keyword\">const</span> SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>;\n\n<span class=\"hljs-comment\">// 初始化ApiOcr</span>\n$apiOcr = <span class=\"hljs-keyword\">new</span> AipOcr(APP_ID, API_KEY, SECRET_KEY);\n\n<span class=\"hljs-comment\">// 设置识别身份证正面参数</span>\n$isFront = <span class=\"hljs-keyword\">false</span>;\n\n<span class=\"hljs-comment\">// 定义参数变量</span>\n$options = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">'detectDirection'</span> =&gt; <span class=\"hljs-keyword\">false</span>, <span class=\"hljs-string\">'accuracy'</span> =&gt; <span class=\"hljs-string\">'high'</span>);\n\n<span class=\"hljs-comment\">// 调用身份证识别接口</span>\n$result = $apiOcr-&gt;idcard(file_get_contents(<span class=\"hljs-string\">'idcard.jpg'</span>), $isFront, $options);</code>\n</pre><p><strong>身份证识别 请求参数详情</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">描述</th><th style=\"text-align:left\">是否必须</th></tr></thead><tbody><tr><td style=\"text-align:left\">id_card_side</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">front：身份证正面，back：身份证背面</td><td style=\"text-align:left\">是</td></tr><tr><td style=\"text-align:left\">image</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">图像数据，仅支持图像文件流</td><td style=\"text-align:left\">是</td></tr><tr><td style=\"text-align:left\">accuracy</td><td style=\"text-align:left\">string</td><td style=\"text-align:left\">auto、normal、high</td><td style=\"text-align:left\">精准度，精度越高，速度越慢。default：auto</td></tr><tr><td style=\"text-align:left\">detect_direction</td><td style=\"text-align:left\">Boolean</td><td style=\"text-align:left\">检测图像朝向(指输入图像是正常方向、逆时针旋转90/180/270度)，有效值：true、false，默认值: false。</td><td style=\"text-align:left\">否</td></tr></tbody></table><p><strong>身份证识别 返回数据参数详情</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">描述</th></tr></thead><tbody><tr><td style=\"text-align:left\">direction</td><td style=\"text-align:left\">Int32</td><td style=\"text-align:left\">图像方向，当detect_direction=true时存在。-1:未定义，0:正向，1: 逆时针90度， 2:逆时针180度， 3:逆时针270度</td></tr><tr><td style=\"text-align:left\">log_id</td><td style=\"text-align:left\">Uint64</td><td style=\"text-align:left\">唯一的log id，用于问题定位</td></tr><tr><td style=\"text-align:left\">words_result</td><td style=\"text-align:left\">Array</td><td style=\"text-align:left\">定位和识别结果数组，数组元素的key是身份证的主体字段（正面支持：住址、公民身份号码、出生、姓名、性别、民族，背面支持：签发日期、失效日期）。只返回识别出的字段。</td></tr><tr><td style=\"text-align:left\">words_result_num</td><td style=\"text-align:left\">Uint32</td><td style=\"text-align:left\">识别结果数，表示words_result的元素个数</td></tr><tr><td style=\"text-align:left\">+location</td><td style=\"text-align:left\">Array</td><td style=\"text-align:left\">位置数组（坐标0点为左上角）</td></tr><tr><td style=\"text-align:left\">++left</td><td style=\"text-align:left\">Uint32</td><td style=\"text-align:left\">表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td style=\"text-align:left\">++top</td><td style=\"text-align:left\">Uint32</td><td style=\"text-align:left\">表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td style=\"text-align:left\">++width</td><td style=\"text-align:left\">Uint32</td><td style=\"text-align:left\">表示定位位置的长方形的宽度</td></tr><tr><td style=\"text-align:left\">++height</td><td style=\"text-align:left\">Uint32</td><td style=\"text-align:left\">表示定位位置的长方形的高度</td></tr><tr><td style=\"text-align:left\">+words</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">识别结果字符串</td></tr></tbody></table>",
  "headings": [
    {
      "level": 1,
      "text": "PHP SDK文档",
      "id": "15026e65"
    },
    {
      "level": 1,
      "text": "安装OCR PHP SDK",
      "id": "fb171c40"
    },
    {
      "level": 1,
      "text": "快速入门",
      "id": "d372093a"
    },
    {
      "level": 2,
      "text": "初始化一个AipOcr对象",
      "id": "3e76af76"
    },
    {
      "level": 1,
      "text": "通用文字识别",
      "id": "d3b528de"
    },
    {
      "level": 1,
      "text": "银行卡识别",
      "id": "f5c36858"
    },
    {
      "level": 1,
      "text": "身份证识别",
      "id": "ce76bfd7"
    }
  ]
}
