{
  "html": "<h1 id=\"8a61ca9e\">简介</h1><p>Hi，您好，欢迎使用百度人脸识别API服务。</p><p>本文档主要针对API开发者，描述百度人脸识别接口服务的相关技术内容。如果您对文档内容有任何疑问，可以通过以下几种方式联系我们：</p><ul><li>在百度云控制台内<strong>提交工单</strong>，咨询问题类型请选择<strong>人工智能服务</strong>；</li><li>加入<strong>开发者QQ群</strong>：224994340；</li></ul><h2 id=\"829acf26\">接口能力</h2><table><thead><tr><th style=\"text-align:left\">接口名称</th><th style=\"text-align:left\">接口能力简要描述</th></tr></thead><tbody><tr><td style=\"text-align:left\">人脸检测</td><td style=\"text-align:left\">检测人脸并定位，返回五官关键点，及人脸各属性值</td></tr><tr><td style=\"text-align:left\">人脸比对</td><td style=\"text-align:left\">返回两两比对的人脸相似值</td></tr><tr><td style=\"text-align:left\">人脸识别</td><td style=\"text-align:left\">在人脸库中查找相似的人脸</td></tr><tr><td style=\"text-align:left\">人脸认证</td><td style=\"text-align:left\">识别上传的图片是否为指定用户</td></tr><tr><td style=\"text-align:left\">人脸库设置</td><td style=\"text-align:left\">对人脸库的相关操作，如注册、删除、更新、查找用户信息等</td></tr></tbody></table><h2 id=\"65b8dc39\">请求格式</h2><p>POST方式调用</p><p><strong>注意：</strong>要求使用JSON格式的结构体来描述一个请求的具体内容。<strong>发送时需要对body整体进行GBK编码。</strong></p><h2 id=\"cf769fec\">返回格式</h2><p>JSON格式，<strong>返回内容为GBK编码</strong></p><h1 id=\"e77d2cf7\">调用方式</h1><p>调用AI服务相关的API接口有两种调用方式，两种不同的调用方式采用相同的接口URL。</p><p>区别在于<strong>请求方式</strong>和<strong>鉴权方法</strong>不一样，请求参数和返回结果一致。</p><h2 id=\"86c882d3\">调用方式一</h2><p>向API服务地址使用POST发送请求，必须在URL中带上参数：</p><p><strong>access_token:</strong> 必须参数，参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>。</p><p>POST中参数按照API接口说明调用即可。</p><p>例如自然语言处理API，使用HTTPS POST发送：</p><pre>\n<code class=\"hljs\" lang=\"\">https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rpc/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/nlp/</span>v1<span class=\"hljs-regexp\">/wordseg?access_token=24.f9ba9c5241b67688bb4adbed8bc91dec.2592000.1485570332.282335-8574074</span></code>\n</pre><p><strong>获取access_token示例代码</strong></p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=A0nyraL7kGXrDhfDf33UyGvX&amp;client_secret=4IGLoGQqeq8svpocetiBgzTLDlkVfhG1'</span>\n</code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/oauth/2.0/token'</span>;\n    $post_data[<span class=\"hljs-string\">'grant_type'</span>]       = <span class=\"hljs-string\">'client_credentials'</span>;\n    $post_data[<span class=\"hljs-string\">'client_id'</span>]      = <span class=\"hljs-string\">'A0nyraL7kGXrDhfDf33UyGvX'</span>;\n    $post_data[<span class=\"hljs-string\">'client_secret'</span>] = <span class=\"hljs-string\">'4IGLoGQqeq8svpocetiBgzTLDlkVfhG1'</span>;\n    $o = <span class=\"hljs-string\">\"\"</span>;\n    <span class=\"hljs-keyword\">foreach</span> ( $post_data <span class=\"hljs-keyword\">as</span> $k =&gt; $v ) \n    {\n    \t$o.= <span class=\"hljs-string\">\"$k=\"</span> . urlencode( $v ). <span class=\"hljs-string\">\"&amp;\"</span> ;\n    }\n    $post_data = substr($o,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">-1</span>);\n    \n    $res = request_post($url, $post_data);\n\n    var_dump($res);\n\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.auth;\n\n<span class=\"hljs-keyword\">import</span> org.json.JSONObject;\n\n<span class=\"hljs-keyword\">import</span> java.io.BufferedReader;\n<span class=\"hljs-keyword\">import</span> java.io.InputStreamReader;\n<span class=\"hljs-keyword\">import</span> java.net.HttpURLConnection;\n<span class=\"hljs-keyword\">import</span> java.net.URL;\n<span class=\"hljs-keyword\">import</span> java.util.List;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * 获取token类\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AuthService</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 获取权限token\n     *\n     * <span class=\"hljs-doctag\">@return</span> 返回示例：\n     * {\n     * \"access_token\": \"24.460da4889caad24cccdb1fea17221975.2592000.1491995545.282335-9261443\",\n     * \"session_key\": \"9mzdDxLPLXYfhlmFRBSGI8jOy19HNzFT6cle3RWf2m9HL8LdLxyVhEETkPS8gQtLbhw1TP/ly3+l59n4wknbmwPk6NC1\",\n     * \"scope\": \"public vis-faceverify_faceverify vis-ocr_ocr vis-faceattribute_faceattribute vis-ocr_bankcard nlp_wordseg nlp_simnet nlp_wordemb nlp_comtag nlp_wordpos nlp_dnnlm_cn vis-antiporn_antiporn_v2 brain_ocr_scope wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian wangrantest_test wangrantest_test1 bnstest_test1 bnstest_test2 ApsMisTest_Test权限 vis-classify_flower\",\n     * \"refresh_token\": \"25.bf1ec1814779878486cb9ba68f7defe5.315360000.1804763545.282335-9261443\",\n     * \"session_secret\": \"b292e183bb394fb8d8065e7f8b137757\",\n     * \"expires_in\": 2592000\n     * }\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">getAuth</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-comment\">// 获取token地址</span>\n        String authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token?\"</span>;\n        <span class=\"hljs-comment\">// 官网获取的 API Key 更新为你注册的</span>\n        String clientId = <span class=\"hljs-string\">\"nElok3H1CINAdEsTuzwyxO9U\"</span>;\n        <span class=\"hljs-comment\">// 官网获取的 Secret Key 更新为你注册的</span>\n        String clientSecret = <span class=\"hljs-string\">\"kg1vwhls4LO5h91YZkfG58qpRWgFHFCl\"</span>;\n        String getAccessTokenUrl = authHost\n                <span class=\"hljs-comment\">// 1. grant_type为固定参数</span>\n                + <span class=\"hljs-string\">\"grant_type=client_credentials\"</span>\n                <span class=\"hljs-comment\">// 2. 官网获取的 API Key</span>\n                + <span class=\"hljs-string\">\"&amp;client_id=\"</span> + clientId\n                <span class=\"hljs-comment\">// 3. 官网获取的 Secret Key</span>\n                + <span class=\"hljs-string\">\"&amp;client_secret=\"</span> + clientSecret;\n        <span class=\"hljs-keyword\">try</span> {\n            URL realUrl = <span class=\"hljs-keyword\">new</span> URL(getAccessTokenUrl);\n            <span class=\"hljs-comment\">// 打开和URL之间的连接</span>\n            HttpURLConnection connection = (HttpURLConnection) realUrl.openConnection();\n            connection.setRequestMethod(<span class=\"hljs-string\">\"GET\"</span>);\n            connection.connect();\n            <span class=\"hljs-comment\">// 获取所有响应头字段</span>\n            Map&lt;String, List&lt;String&gt;&gt; map = connection.getHeaderFields();\n            <span class=\"hljs-comment\">// 遍历所有的响应头字段</span>\n            <span class=\"hljs-keyword\">for</span> (String key : map.keySet()) {\n                System.out.println(key + <span class=\"hljs-string\">\"---&gt;\"</span> + map.get(key));\n            }\n            <span class=\"hljs-comment\">// 定义 BufferedReader输入流来读取URL的响应</span>\n            BufferedReader in = <span class=\"hljs-keyword\">new</span> BufferedReader(<span class=\"hljs-keyword\">new</span> InputStreamReader(connection.getInputStream()));\n            String result = <span class=\"hljs-string\">\"\"</span>;\n            String line;\n            <span class=\"hljs-keyword\">while</span> ((line = in.readLine()) != <span class=\"hljs-keyword\">null</span>) {\n                result += line;\n            }\n            <span class=\"hljs-comment\">/**\n             * 返回结果示例\n             */</span>\n            System.out.println(<span class=\"hljs-string\">\"result:\"</span> + result);\n            JSONObject jsonObject = <span class=\"hljs-keyword\">new</span> JSONObject(result);\n            String access_token = jsonObject.getString(<span class=\"hljs-string\">\"access_token\"</span>);\n            <span class=\"hljs-keyword\">return</span> access_token;\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            System.out.printf(<span class=\"hljs-string\">\"获取token失败！\"</span>);\n            e.printStackTrace();\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n<span class=\"hljs-keyword\">import</span> json\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">AuthService</span><span class=\"hljs-params\">()</span>:</span>\n    <span class=\"hljs-comment\"># 获取token地址</span>\n    authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token?\"</span>\n    <span class=\"hljs-comment\"># 官网获取的 API Key</span>\n    clientId = <span class=\"hljs-string\">\"\"</span>\n    <span class=\"hljs-comment\"># 官网获取的 Secret Key</span>\n    clientSecret = <span class=\"hljs-string\">\"\"</span>\n    getAccessTokenUrl = authHost + <span class=\"hljs-string\">\"grant_type=client_credentials\"</span> + <span class=\"hljs-string\">\"&amp;client_id=\"</span> + clientId + <span class=\"hljs-string\">\"&amp;client_secret=\"</span> + clientSecret\n    request = urllib2.Request(getAccessTokenUrl)\n    response_data = urllib2.urlopen(request)\n    params = json.loads(response_data.read())\n    <span class=\"hljs-keyword\">return</span> params[<span class=\"hljs-string\">\"access_token\"</span>]\n\n\nAuthService()\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\">#include &lt;iostream&gt;\n#include &lt;curl/curl.h&gt;\n#include &lt;json/json.h&gt;\n#include \"access_token.h\"\n// libcurl库下载链接：https://curl.haxx.se/download.html\n// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/\n// 获取access_token所需要的url\nconst std::string access_token_url = \"https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials\";\n// 回调函数获取到的access_token存放变量\nstatic std::string access_token_result;\n/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在result中\n * @param 参数定义见libcurl库文档\n * @return 返回值定义见libcurl库文档\n */\nstatic size_t callback(void *ptr, size_t size, size_t nmemb, void *stream) {\n    // 获取到的body存放在ptr中，先将其转换为string格式\n    std::string s((char *) ptr, size * nmemb);\n    // 开始获取json中的access token项目\n    Json::Reader reader;\n    Json::Value root;\n    // 使用boost库解析json\n    reader.parse(s,root);\n    access_token_result = root[\"access_token\"].asString();\n    return size * nmemb;\n}\n\n/**\n * 用以获取access_token的函数，使用时需要先在百度云控制台申请相应功能的应用，获得对应的API Key和Secret Key\n * @param access_token 获取得到的access token，调用函数时需传入该参数\n * @param AK 应用的API key\n * @param SK 应用的Secret key\n * @return 返回0代表获取access token成功，其他返回值代表获取失败\n */\nint get_access_token(std::string &amp;access_token, const std::string &amp;AK, const std::string &amp;SK) {\n    CURL *curl;\n    CURLcode result_code;\n    int success;\n    curl = curl_easy_init();\n    if (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL,\n                         (access_token_url + \"&amp;client_id=\" + AK + \"&amp;client_secret=\" + SK).data());\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        if (result_code != CURLE_OK) {\n            fprintf(stderr, \"curl_easy_perform() failed: %s\\n\",\n                    curl_easy_strerror(result_code));\n            success = 1;\n            return success;\n        }\n        access_token = access_token_result;\n        curl_easy_cleanup(curl);\n        success = 0;\n    } else {\n        fprintf(stderr, \"curl_easy_init() failed.\");\n        success = 1;\n    }\n    return success;\n}\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.Net.Http;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AccessToken</span>\n\n\t{\n\t\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String TOKEN = <span class=\"hljs-string\">\"######\"</span>; <span class=\"hljs-comment\">// 调用getAccessToken()获取的 access_token建议根据expires_in 时间 设置缓存</span>\n\n\t\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String clientId = <span class=\"hljs-string\">\"####\"</span>; <span class=\"hljs-comment\">// 百度云中开通对应服务应用的 API Key 建议开通应用的时候多选服务</span>\n\t\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String clientSecret = <span class=\"hljs-string\">\"#####\"</span>;   <span class=\"hljs-comment\">// 百度云中开通对应服务应用的 Secret Key</span>\n\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">getAccessToken</span>(<span class=\"hljs-params\"></span>) </span>{\n\t\t\tString authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token\"</span>;\n\t\t\tHttpClient client = <span class=\"hljs-keyword\">new</span> HttpClient();\n\t\t\tList&lt;KeyValuePair&lt;String, String&gt;&gt; paraList = <span class=\"hljs-keyword\">new</span> List&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"grant_type\"</span>, <span class=\"hljs-string\">\"client_credentials\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"client_id\"</span>, clientId));\n\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"client_secret\"</span>, clientSecret));\n\n\t\t\tHttpResponseMessage response = client.PostAsync(authHost, <span class=\"hljs-keyword\">new</span> FormUrlEncodedContent(paraList)).Result;\n\t\t\tString result = response.Content.ReadAsStringAsync().Result;\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-comment\">// </span>\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><blockquote><p><strong>说明：</strong>方式一鉴权使用的Access_token必须通过API Key和Secret Key获取。</p></blockquote><h1 id=\"93adc21a\">调用方式二</h1><p><strong>请求头域内容</strong></p><p>NLP的API服务需要在请求的HTTP头域中包含以下信息：</p><ul><li>host（必填）</li><li>x-bce-date （必填）</li><li>x-bce-request-id（选填）</li><li>authorization（必填）</li><li>content-type（选填）</li><li>content-length（选填）</li></ul><p>作为示例，以下是一个标准的请求头域内容:</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">rpc/2.0/nlp/v1/wordseg?</span> HTTP/1.1\n<span class=\"hljs-attribute\">accept-encoding</span>: gzip, deflate\n<span class=\"hljs-attribute\">x-bce-date</span>: 2015-03-24T13:02:00Z\n<span class=\"hljs-attribute\">connection</span>: keep-alive\n<span class=\"hljs-attribute\">accept</span>: */*\n<span class=\"hljs-attribute\">host</span>: aip.baidubce.com\n<span class=\"hljs-attribute\">x-bce-request-id</span>: 73c4e74c-3101-4a00-bf44-fe246959c05e\n<span class=\"hljs-attribute\">content-type</span>: application/x-www-form-urlencoded;\n<span class=\"hljs-attribute\">authorization</span>: bce-auth-v1/46bd9968a6194b4bbdf0341f2286ccce/2015-03-24T13:02:00Z/1800/host;x-bce-date/994014d96b0eb26578e039fa053a4f9003425da4bfedf33f4790882fb4c54903</code>\n</pre><blockquote><p><strong>说明：</strong>方式二鉴权使用的<a href=\"https://cloud.baidu.com/doc/Reference/AuthenticationMechanism.html\" target=\"_blank\">API认证机制</a>authorization必须通过百度云的<a href=\"https://cloud.baidu.com/doc/Reference/GetAKSK.html\" target=\"_blank\">AK/SK</a>生成。</p></blockquote><h1 id=\"2aab07b5\">分词接口</h1><h2 id=\"0ce6c21b\">接口描述</h2><p>分词接口提供基本词和混排两种粒度的分词结果，基本词粒度较小，适用于搜索引擎等需要更多召回的任务，而混排粒度倾向于保留更多的短语。</p><h2 id=\"c8f88961\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法: <code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL: <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rpc/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/nlp/</span>v1<span class=\"hljs-regexp\">/wordseg</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/json</td></tr></tbody></table><p>Body请求示例:</p><pre>\n<code class=\"hljs\" lang=\"\">  {\n    <span class=\"hljs-attr\">\"query\"</span>:<span class=\"hljs-string\">\"百度是一家高科技公司\"</span>,\n    <span class=\"hljs-attr\">\"lang_id\"</span>:<span class=\"hljs-number\">1</span>\n  }</code>\n</pre><p><strong>请求参数</strong></p><table><thead><tr><th>参数名称</th><th>类型</th><th>是否必选</th><th>详细说明</th></tr></thead><tbody><tr><td>query</td><td>String</td><td>是</td><td>待分词的文本</td></tr><tr><td>lang_id</td><td>Int</td><td>否</td><td>默认为1，输入字符串的语言对应的id，简体中文设置为1（目前不支持其他语言）</td></tr></tbody></table><p><strong>请求示例代码</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/wordseg?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span> --data <span class=\"hljs-string\">'{\"query\":\"百度是一家高科技公司\",\"lang_id\":1}'</span> -H <span class=\"hljs-string\">'Content-Type:application/json; charset=UTF-8'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/wordseg?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"query\\\":\\\"百度是一家高科技公司\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.nlp;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.GsonUtils;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n<span class=\"hljs-keyword\">import</span> java.util.HashMap;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * 分词接口\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">WordSeg</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 重要提示代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * http://ai.baidu.com/download/demo/java/utils/FileUtil.java\n     * http://ai.baidu.com/download/demo/java/utils/Base64Util.java\n     * http://ai.baidu.com/download/demo/java/utils/HttpUtil.java\n     * 下载\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 分词url</span>\n        String wordSegUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordseg\"</span>;\n        String query = <span class=\"hljs-string\">\"百度是一家高科技公司\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            Map&lt;String, Object&gt; map = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\n            map.put(<span class=\"hljs-string\">\"query\"</span>, query); <span class=\"hljs-comment\">// 待分词的文本</span>\n            map.put(<span class=\"hljs-string\">\"lang_id\"</span>, <span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// 语言对应的id，简体中文设置为1（目前不支持其他语言）</span>\n            String params = GsonUtils.toJson(map);\n            params = URLEncoder.encode(params, <span class=\"hljs-string\">\"GBK\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(wordSegUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># coding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib, urllib2, sys\n<span class=\"hljs-keyword\">import</span> ssl\n\nurl = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/wordseg?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>\nbodys = {}\nbodys[<span class=\"hljs-string\">''</span>] = <span class=\"hljs-string\">\"{\\\"query\\\":\\\"百度是一家高科技公司\\\"}\"</span>\npost_data = bodys[<span class=\"hljs-string\">''</span>]\nrequest = urllib2.Request(url, post_data)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/json'</span>)\nctx = ssl.create_default_context()\nctx.check_hostname = <span class=\"hljs-keyword\">False</span>\nctx.verify_mode = ssl.CERT_NONE\nresponse = urllib2.urlopen(request, context=ctx)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> (content):\n    print(content)\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"word_seg.h\"</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;json/json.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/locale/encoding.hpp&gt;</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">/**\n * 将UTF8转换为GBK\n */</span>\n<span class=\"hljs-keyword\">inline</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-function\"><span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">utf8_to_gbk</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;<span class=\"hljs-built_in\">string</span>)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> boost::locale::conv::between(<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-string\">\"GBK\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>);\n}\n\n<span class=\"hljs-comment\">// 人脸检测接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> word_seg_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordseg\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> word_seg_result;\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    word_seg_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用分词接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param query 待分词字符串\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">word_seg</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;query, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = word_seg_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    Json::Value root;\n    Json::FastWriter writer;\n    root[<span class=\"hljs-string\">\"query\"</span>] = query;\n    root[<span class=\"hljs-string\">\"lang_id\"</span>] = <span class=\"hljs-number\">1</span>;\n\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        <span class=\"hljs-comment\">// 设置http发送的内容类型为JSON</span>\n        curl_slist *plist = curl_slist_append(<span class=\"hljs-literal\">NULL</span>, <span class=\"hljs-string\">\"Content-Type:application/json\"</span>);\n        curl_easy_setopt(curl, CURLOPT_HTTPHEADER, plist);\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> data = utf8_to_gbk(writer.write(root));\n        curl_easy_setopt(curl, CURLOPT_POSTFIELDS, data.c_str());\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = word_seg_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web.Script.Serialization;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Wordseg</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 分词接口</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">wordseg</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordseg?access_token=\"</span> + token;\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt; para = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt;();\n\t\t\tpara.Add(<span class=\"hljs-string\">\"query\"</span>, <span class=\"hljs-string\">\"百度是一家高科技公司\"</span>);\n\t\t\tpara.Add(<span class=\"hljs-string\">\"lang_id\"</span>, <span class=\"hljs-number\">1</span>);\n\n\t\t\tEncoding encoding = Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>);\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/json\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tJavaScriptSerializer json = <span class=\"hljs-keyword\">new</span> JavaScriptSerializer();\n\t\t\tString str = json.Serialize(para);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>));\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"分词接口:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"f42064f4\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>参数名称</th><th>类型</th><th>详细说明</th></tr></thead><tbody><tr><td>wordsepbuf</td><td>String</td><td>基本词粒度结果，以\\t分割</td></tr><tr><td>wsbtermcount</td><td>int</td><td>基本词粒度输出的词个数</td></tr><tr><td>wsbtermoffsets</td><td>List</td><td>该参数为列表，元素个数为切分出来的词个数，每个元素值表示对应的基本词在被切分文本的起始位置（字节偏移）</td></tr><tr><td>wsbtermpos</td><td>List</td><td>参数值为列表，元素值为对应切分出来的基本词在 wordsepbuf的字节偏移以及长度，整数的低24bit为偏移，高8bit为长度</td></tr><tr><td>wpcompbuf</td><td>String</td><td>混排粒度结果，以\\t分割</td></tr><tr><td>wpbtermcount</td><td>Int</td><td>混排粒度输出的词个数</td></tr><tr><td>wpbtermoffsets</td><td>List</td><td>该参数为列表，元素个数为切分出来的词个数，每个元素值表示对应的词是从第几个基本词开始的（基本词偏移）</td></tr><tr><td>wpbtermpos</td><td>List</td><td>参数值为列表，元素值为对应切分出来的词在 wpcompbuf的字节偏移以及长度，整数的低24bit为偏移，高8bit为长度</td></tr><tr><td>subphrbuf</td><td>String</td><td>所有识别出来的短语，以\\t分割</td></tr><tr><td>spbtermcount</td><td>Int</td><td>识别出来的短语个数</td></tr><tr><td>spbtermoffsets</td><td>List</td><td>该参数为列表，元素个数为识别出来的短语个数，每个元素值表示对应短语是从第几个基本词开始的（基本词偏移）</td></tr><tr><td>spbtermpos</td><td>List</td><td>参数值为列表，元素值为对应切分出来的短语在 subphrbuf的字节偏移以及长度，整数的低24bit为偏移，高8bit为长度</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"scw_out\"</span>: {\n        <span class=\"hljs-attr\">\"phrase_merged\"</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">\"pdisambword\"</span>: {\n            <span class=\"hljs-attr\">\"newwordbuf\"</span>: <span class=\"hljs-string\">\"\"</span>,\n            <span class=\"hljs-attr\">\"newwordb_curpos\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">\"newwordbmaxcount\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">\"newwordbsize\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">\"newwordbtermcount\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">\"newwordneprop\"</span>: [],\n            <span class=\"hljs-attr\">\"newwordbtermoffsets\"</span>: [],\n            <span class=\"hljs-attr\">\"newwordbtermpos\"</span>: []\n        },\n        <span class=\"hljs-attr\">\"pnewword\"</span>: {\n            <span class=\"hljs-attr\">\"newwordbuf\"</span>: <span class=\"hljs-string\">\"\"</span>,\n            <span class=\"hljs-attr\">\"newwordb_curpos\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">\"newwordbmaxcount\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">\"newwordbsize\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">\"newwordbtermcount\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">\"newwordneprop\"</span>: [],\n            <span class=\"hljs-attr\">\"newwordbtermoffsets\"</span>: [],\n            <span class=\"hljs-attr\">\"newwordbtermpos\"</span>: []\n        },\n        <span class=\"hljs-attr\">\"booknamebuf\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"mergebuf\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"namebuf\"</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">\"subphrbuf\"</span>: <span class=\"hljs-string\">\"\\t\\u4f60\\u597d\\t\"</span>,\n        <span class=\"hljs-attr\">\"wordsepbuf\"</span>: <span class=\"hljs-string\">\"\\t\\u4f60\\t\\u597d\\t\\u767e\\u5ea6\\t\"</span>,\n        <span class=\"hljs-attr\">\"wpcompbuf\"</span>: <span class=\"hljs-string\">\"\\t\\u4f60\\u597d\\t\\u767e\\u5ea6\\t\"</span>,\n        <span class=\"hljs-attr\">\"bnb_curpos\"</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">\"bnbsize\"</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">\"bnbtermcount\"</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">\"mb_curpos\"</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">\"mbsize\"</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">\"mbtermcount\"</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">\"nameb_curpos\"</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">\"namebsize\"</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">\"namebtermcount\"</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">\"spb_curpos\"</span>: <span class=\"hljs-number\">6</span>,\n        <span class=\"hljs-attr\">\"spbsize\"</span>: <span class=\"hljs-number\">1024000</span>,\n        <span class=\"hljs-attr\">\"spbtermcount\"</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">\"wordtotallen\"</span>: <span class=\"hljs-number\">8</span>,\n        <span class=\"hljs-attr\">\"wpb_curpos\"</span>: <span class=\"hljs-number\">11</span>,\n        <span class=\"hljs-attr\">\"wpbsize\"</span>: <span class=\"hljs-number\">1024000</span>,\n        <span class=\"hljs-attr\">\"wpbtermcount\"</span>: <span class=\"hljs-number\">2</span>,\n        <span class=\"hljs-attr\">\"wsb_curpos\"</span>: <span class=\"hljs-number\">12</span>,\n        <span class=\"hljs-attr\">\"wsbsize\"</span>: <span class=\"hljs-number\">1024000</span>,\n        <span class=\"hljs-attr\">\"wsbtermcount\"</span>: <span class=\"hljs-number\">3</span>,\n        <span class=\"hljs-attr\">\"bnbtermprop\"</span>: [],\n        <span class=\"hljs-attr\">\"namebtermprop\"</span>: [],\n        <span class=\"hljs-attr\">\"spbtermprop\"</span>: [\n            {\n                <span class=\"hljs-attr\">\"m_hprop\"</span>: <span class=\"hljs-number\">1</span>,\n                <span class=\"hljs-attr\">\"m_lprop\"</span>: <span class=\"hljs-number\">32</span>\n            }\n        ],\n        <span class=\"hljs-attr\">\"wpbtermprop\"</span>: [\n            {\n                <span class=\"hljs-attr\">\"m_hprop\"</span>: <span class=\"hljs-number\">1</span>,\n                <span class=\"hljs-attr\">\"m_lprop\"</span>: <span class=\"hljs-number\">32</span>\n            },\n            {\n                <span class=\"hljs-attr\">\"m_hprop\"</span>: <span class=\"hljs-number\">0</span>,\n                <span class=\"hljs-attr\">\"m_lprop\"</span>: <span class=\"hljs-number\">32</span>\n            }\n        ],\n        <span class=\"hljs-attr\">\"wsbtermprop\"</span>: [\n            {\n                <span class=\"hljs-attr\">\"m_hprop\"</span>: <span class=\"hljs-number\">0</span>,\n                <span class=\"hljs-attr\">\"m_lprop\"</span>: <span class=\"hljs-number\">32</span>\n            },\n            {\n                <span class=\"hljs-attr\">\"m_hprop\"</span>: <span class=\"hljs-number\">0</span>,\n                <span class=\"hljs-attr\">\"m_lprop\"</span>: <span class=\"hljs-number\">32</span>\n            },\n            {\n                <span class=\"hljs-attr\">\"m_hprop\"</span>: <span class=\"hljs-number\">0</span>,\n                <span class=\"hljs-attr\">\"m_lprop\"</span>: <span class=\"hljs-number\">32</span>\n            }\n        ],\n        <span class=\"hljs-attr\">\"bnbtermoffsets\"</span>: [],\n        <span class=\"hljs-attr\">\"bnbtermpos\"</span>: [],\n        <span class=\"hljs-attr\">\"mbtermoffsets\"</span>: [],\n        <span class=\"hljs-attr\">\"mbtermpos\"</span>: [],\n        <span class=\"hljs-attr\">\"namebtermoffsets\"</span>: [],\n        <span class=\"hljs-attr\">\"namebtermpos\"</span>: [],\n        <span class=\"hljs-attr\">\"spbtermoffsets\"</span>: [\n            <span class=\"hljs-number\">0</span>\n        ],\n        <span class=\"hljs-attr\">\"spbtermpos\"</span>: [\n            <span class=\"hljs-number\">67108865</span>\n        ],\n        <span class=\"hljs-attr\">\"wpbtermoffsets\"</span>: [\n            <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-number\">2</span>\n        ],\n        <span class=\"hljs-attr\">\"wpbtermpos\"</span>: [\n            <span class=\"hljs-number\">67108865</span>,\n            <span class=\"hljs-number\">67108870</span>\n        ],\n        <span class=\"hljs-attr\">\"wsbtermoffsets\"</span>: [\n            <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-number\">4</span>\n        ],\n        <span class=\"hljs-attr\">\"wsbtermpos\"</span>: [\n            <span class=\"hljs-number\">33554433</span>,\n            <span class=\"hljs-number\">33554436</span>,\n            <span class=\"hljs-number\">67108871</span>\n        ]\n    }\n}</code>\n</pre><h1 id=\"f240756a\">词性标注接口</h1><h2 id=\"902caedd\">接口描述</h2><p>词性标注接口为分词结果中的每个单词标注一个正确的词性的程序，也标注每个词是名词、动词、形容词或其他词性。</p><h2 id=\"def3d530\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法: <code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL: <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rpc/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/nlp/</span>v1<span class=\"hljs-regexp\">/wordpos</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/json</td></tr></tbody></table><p>Body请求示例:</p><pre>\n<code class=\"hljs\" lang=\"\">  {\n    <span class=\"hljs-attr\">\"query\"</span>: <span class=\"hljs-string\">\"你好百度\"</span>\n  }</code>\n</pre><p><strong>请求参数</strong></p><table><thead><tr><th>Key</th><th>类型</th><th>含义及备注</th></tr></thead><tbody><tr><td>query</td><td>string</td><td>带标注的文本串。算法内部使用GBK编码，外部如果要求UTF8编码，则需进行编码转换。</td></tr></tbody></table><p><strong>请求示例代码</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">词性标注接口\ncurl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/wordpos?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span> --data <span class=\"hljs-string\">'{\"query\":\"你好百度\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/json; charset=UTF-8'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/wordpos?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"query\\\":\\\"你好百度\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.nlp;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.GsonUtils;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n<span class=\"hljs-keyword\">import</span> java.util.HashMap;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * 词性标注接口\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">WordPos</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 重要提示代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * http://ai.baidu.com/download/demo/java/utils/FileUtil.java\n     * http://ai.baidu.com/download/demo/java/utils/Base64Util.java\n     * http://ai.baidu.com/download/demo/java/utils/HttpUtil.java\n     * 下载\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 词性标注url</span>\n        String wordPosUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordpos\"</span>;\n        String query = <span class=\"hljs-string\">\"你好百度\"</span>; <span class=\"hljs-comment\">// 待标注的文本串</span>\n        <span class=\"hljs-keyword\">try</span> {\n            Map&lt;String, Object&gt; map = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\n            map.put(<span class=\"hljs-string\">\"query\"</span>, query);\n            String params = GsonUtils.toJson(map);\n            params = URLEncoder.encode(params, <span class=\"hljs-string\">\"GBK\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(wordPosUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># coding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib, urllib2, sys\n<span class=\"hljs-keyword\">import</span> ssl\n\nurl = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/wordpos?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>\nbodys = {}\nbodys[<span class=\"hljs-string\">''</span>] = <span class=\"hljs-string\">\"{\\\"query\\\":\\\"你好百度\\\"}\"</span>\npost_data = bodys[<span class=\"hljs-string\">''</span>]\nrequest = urllib2.Request(url, post_data)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/json'</span>)\nctx = ssl.create_default_context()\nctx.check_hostname = <span class=\"hljs-keyword\">False</span>\nctx.verify_mode = ssl.CERT_NONE\nresponse = urllib2.urlopen(request, context=ctx)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> (content):\n    print(content)\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"word_pos.h\"</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;json/json.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/locale/encoding.hpp&gt;</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">/**\n * 将UTF8转换为GBK\n */</span>\n<span class=\"hljs-keyword\">inline</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-function\"><span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">utf8_to_gbk</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;<span class=\"hljs-built_in\">string</span>)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> boost::locale::conv::between(<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-string\">\"GBK\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>);\n}\n<span class=\"hljs-comment\">// 人脸检测接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> word_pos_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordpos\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> word_pos_result;\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    word_pos_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n<span class=\"hljs-comment\">/**\n * 调用词性标注接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param query 待标注字符串\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">word_pos</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;query, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span></span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = word_pos_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    Json::Value root;\n    Json::FastWriter writer;\n    root[<span class=\"hljs-string\">\"query\"</span>] = query;\n\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        <span class=\"hljs-comment\">// 设置http发送的内容类型为JSON</span>\n        curl_slist *plist = curl_slist_append(<span class=\"hljs-literal\">NULL</span>, <span class=\"hljs-string\">\"Content-Type:application/json\"</span>);\n        curl_easy_setopt(curl, CURLOPT_HTTPHEADER, plist);\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> data = writer.write(root);\n        curl_easy_setopt(curl,CURLOPT_POSTFIELDS,data.c_str());\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = word_pos_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web.Script.Serialization;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Wordpos</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 词性标注接口</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">wordpos</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordpos?access_token=\"</span> + token;\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt; para = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt;();\n\t\t\tpara.Add(<span class=\"hljs-string\">\"query\"</span>, <span class=\"hljs-string\">\"百度是一家高科技公司\"</span>);\n\t\t\tEncoding encoding = Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>);\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/json\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tJavaScriptSerializer json = <span class=\"hljs-keyword\">new</span> JavaScriptSerializer();\n\t\t\tString str = json.Serialize(para);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>));\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"词性标注:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"4e3ee872\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>Key</th><th>类型</th><th>含义及备注</th></tr></thead><tbody><tr><td>result_out</td><td>array</td><td>词性标注结果数组，数组中每个元素对应一个词汇。每个词汇是一个dict</td></tr><tr><td>+word</td><td>string</td><td>词汇的字面</td></tr><tr><td>+offset</td><td>int</td><td>偏移量，以基本粒度词汇为单位</td></tr><tr><td>+length</td><td>int</td><td>长度，以基本粒度词汇为单位</td></tr><tr><td>+type</td><td>string</td><td>词性</td></tr><tr><td>+confidence</td><td>float</td><td>置信度分值，0~1</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"result_out\"</span> :\n     [\n           {<span class=\"hljs-attr\">\"word\"</span> : <span class=\"hljs-string\">\"你好\"</span>, <span class=\"hljs-attr\">\"offset\"</span> : <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">\"length\"</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">\"type\"</span> : <span class=\"hljs-string\">\"v\"</span>, <span class=\"hljs-attr\">\"confidence\"</span> : <span class=\"hljs-number\">1.0</span>},\n           {<span class=\"hljs-attr\">\"word\"</span> : <span class=\"hljs-string\">\"百度\"</span>, <span class=\"hljs-attr\">\"offset\"</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">\"length\"</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">\"type\"</span> : <span class=\"hljs-string\">\"nz\"</span>, <span class=\"hljs-attr\">\"confidence\"</span> : <span class=\"hljs-number\">1.0</span>}\n      ]\n}</code>\n</pre><p><strong>词性缩略词说明</strong></p><table><thead><tr><th>type</th><th>代码</th><th>名称</th><th>帮助记忆的诠释</th></tr></thead><tbody><tr><td>1</td><td>Ag</td><td>形语素</td><td>形容词性语素。形容词代码为a，语素代码ｇ前面置以A</td></tr><tr><td>2</td><td>Dg</td><td>副语素</td><td>副词性语素。副词代码为d，语素代码ｇ前面置以D。</td></tr><tr><td>3</td><td>Ng</td><td>名语素</td><td>名词性语素。名词代码为n，语素代码ｇ前面置以N。</td></tr><tr><td>4</td><td>Tg</td><td>时语素</td><td>时间词性语素。时间词代码为t,在语素的代码g前面置以T。</td></tr><tr><td>5</td><td>Vg</td><td>动语素</td><td>动词性语素。动词代码为v。在语素的代码g前面置以V</td></tr><tr><td>6</td><td>a</td><td>形容词</td><td>取英语形容词adjective的第1个字母</td></tr><tr><td>7</td><td>ad</td><td>副形词</td><td>直接作状语的形容词。形容词代码a和副词代码d并在一起。</td></tr><tr><td>8</td><td>an</td><td>名形词</td><td>具有名词功能的形容词。形容词代码a和名词代码n并在一起。</td></tr><tr><td>9</td><td>b</td><td>区别词</td><td>取汉字“别”的声母。</td></tr><tr><td>10</td><td>c</td><td>连词</td><td>取英语连词conjunction的第1个字母。</td></tr><tr><td>11</td><td>d</td><td>副词</td><td>取adverb的第2个字母，因其第1个字母已用于形容词。</td></tr><tr><td>12</td><td>e</td><td>叹词</td><td>取英语叹词exclamation的第1个字母</td></tr><tr><td>13</td><td>f</td><td>方位词</td><td>取汉字“方”</td></tr><tr><td>14</td><td>g</td><td>语素</td><td>绝大多数语素都能作为合成词的“词根”，取汉字“根”的声母</td></tr><tr><td>15</td><td>h</td><td>前接成分</td><td>取英语head的第1个字母</td></tr><tr><td>16</td><td>i</td><td>成语</td><td>取英语成语idiom的第1个字母</td></tr><tr><td>17</td><td>j</td><td>简称略语</td><td>取汉字“简”的声母。</td></tr><tr><td>18</td><td>k</td><td>后接成分</td><td></td></tr><tr><td>19</td><td>l</td><td>习用语</td><td>习用语尚未成为成语，有点“临时性”，取“临”的声母。</td></tr><tr><td>20</td><td>m</td><td>数词</td><td>取英语numeral的第3个字母，n，u已有他用。</td></tr><tr><td>21</td><td>n</td><td>名词</td><td>取英语名词noun的第1个字母。</td></tr><tr><td>22</td><td>nr</td><td>人名</td><td>名词代码n和“人(ren)”的声母并在一起。</td></tr><tr><td>23</td><td>ns</td><td>地名</td><td>名词代码n和处所词代码s并在一起。</td></tr><tr><td>24</td><td>nt</td><td>机构团体</td><td>“团”的声母为t，名词代码n和t并在一起。</td></tr><tr><td>25</td><td>nx</td><td>外文专名</td><td>一般是全角英文专名，如：ＺＢＴ</td></tr><tr><td>26</td><td>nz</td><td>其他专名</td><td>“专”的声母的第1个字母为z，名词代码n和z并在一起</td></tr><tr><td>27</td><td>o</td><td>拟声词</td><td>取英语拟声词onomatopoeia的第1个字母。</td></tr><tr><td>28</td><td>p</td><td>介词</td><td>取英语介词prepositional的第1个字母。</td></tr><tr><td>29</td><td>q</td><td>量词</td><td>取英语quantity的第1个字母。</td></tr><tr><td>30</td><td>r</td><td>代词</td><td>取英语代词pronoun的第2个字母,因p已用于介词。</td></tr><tr><td>31</td><td>s</td><td>处所词</td><td>取英语space的第1个字母。</td></tr><tr><td>32</td><td>t</td><td>时间词</td><td>取英语time的第1个字母。</td></tr><tr><td>33</td><td>u</td><td>助词</td><td>取英语助词auxiliary</td></tr><tr><td>34</td><td>v</td><td>动词</td><td>取英语动词verb的第一个字母。</td></tr><tr><td>35</td><td>vd</td><td>副动词</td><td>直接作状语的动词。动词和副词的代码并在一起。</td></tr><tr><td>36</td><td>vn</td><td>名动词</td><td>指具有名词功能的动词。动词和名词的代码并在一起</td></tr><tr><td>37</td><td>w</td><td>标点符号</td><td></td></tr><tr><td>38</td><td>y</td><td>语气词</td><td>取汉字“语”的声母。</td></tr><tr><td>39</td><td>z</td><td>状态词</td><td>取汉字“状”的声母的前一个字母。</td></tr></tbody></table><h1 id=\"87da2fbf\">词向量表示接口</h1><h2 id=\"6437fb56\">接口描述</h2><p>词向量接口提供两种功能：输入两个词tid=1得到两个词的相似度结果，输入1个词tid=2得到词的词向量。</p><p><strong>请求示例</strong></p><p>HTTP方法: <code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL: <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rpc/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/nlp/</span>v1<span class=\"hljs-regexp\">/wordembedding</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/json</td></tr></tbody></table><p>Body请求示例:</p><p><strong>输入两个词</strong></p><pre>\n<code class=\"hljs\" lang=\"\">  {\n    <span class=\"hljs-attr\">\"query1\"</span>:<span class=\"hljs-string\">\"百度\"</span>,\n    <span class=\"hljs-attr\">\"query2\"</span>:<span class=\"hljs-string\">\"谷歌\"</span>,\n    <span class=\"hljs-attr\">\"tid\"</span>:<span class=\"hljs-number\">1</span>\n  }</code>\n</pre><p><strong>输入一个词</strong></p><pre>\n<code class=\"hljs\" lang=\"\">  {\n    <span class=\"hljs-attr\">\"query1\"</span>:<span class=\"hljs-string\">\"百度\"</span>,\n    <span class=\"hljs-attr\">\"tid\"</span>:<span class=\"hljs-number\">2</span>\n  }</code>\n</pre><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>说明</th></tr></thead><tbody><tr><td>query1</td><td>是</td><td>输入的第一个词</td></tr><tr><td>query2</td><td>是</td><td>输入的第二个词</td></tr><tr><td>tid</td><td>是</td><td>指定算法类型，tid=1，返回两个词的相似度；tid=2，返回词向量</td></tr></tbody></table><p><strong>请求示例代码</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">词向量表示接口\ncurl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/wordembedding?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span> --data <span class=\"hljs-string\">'{\"query1\":\"百度\",\"query2\":\"谷歌\",\"tid\":1}'</span> -H <span class=\"hljs-string\">'Content-Type:application/json; charset=UTF-8'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/wordembedding?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"query1\\\":\\\"百度\\\",\\\"query2\\\":\\\"谷歌\\\",\\\"tid\\\":1}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.nlp;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.GsonUtils;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n<span class=\"hljs-keyword\">import</span> java.util.HashMap;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * 词向量表示接口\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">WordEmbedding</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 重要提示代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * http://ai.baidu.com/download/demo/java/utils/FileUtil.java\n     * http://ai.baidu.com/download/demo/java/utils/Base64Util.java\n     * http://ai.baidu.com/download/demo/java/utils/HttpUtil.java\n     * 下载\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 词向量表示url</span>\n        String wordEmbeddingUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordembedding\"</span>;\n        <span class=\"hljs-comment\">// 输入两个词</span>\n        String query1 = <span class=\"hljs-string\">\"百度\"</span>;\n        String query2 = <span class=\"hljs-string\">\"谷歌\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            Map&lt;String, Object&gt; map = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\n            map.put(<span class=\"hljs-string\">\"query1\"</span>, query1);\n            map.put(<span class=\"hljs-string\">\"query2\"</span>, query2);\n            map.put(<span class=\"hljs-string\">\"tid\"</span>, <span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// 指定算法类型</span>\n            <span class=\"hljs-comment\">// 输入一个词</span>\n            <span class=\"hljs-comment\">// map.put(\"query1\", query1);</span>\n            <span class=\"hljs-comment\">// map.put(\"tid\", 2); //指定算法类型</span>\n            String params = GsonUtils.toJson(map);\n            params = URLEncoder.encode(params, <span class=\"hljs-string\">\"GBK\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(wordEmbeddingUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># coding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib, urllib2, sys\n<span class=\"hljs-keyword\">import</span> ssl\n\nurl = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/wordembedding?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>\nbodys = {}\nbodys[<span class=\"hljs-string\">''</span>] = <span class=\"hljs-string\">\"{\\\"query1\\\":\\\"百度\\\",\\\"query2\\\":\\\"谷歌\\\",\\\"tid\\\":1}\"</span>\npost_data = bodys[<span class=\"hljs-string\">''</span>]\nrequest = urllib2.Request(url, post_data)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/json'</span>)\nctx = ssl.create_default_context()\nctx.check_hostname = <span class=\"hljs-keyword\">False</span>\nctx.verify_mode = ssl.CERT_NONE\nresponse = urllib2.urlopen(request, context=ctx)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> (content):\n    print(content)\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"word_embedding.h\"</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/locale/encoding.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;json/json.h&gt;</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">// 人脸检测接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> word_embedding_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordembedding\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> word_embedding_result;\n<span class=\"hljs-comment\">/**\n * 将UTF8转换为GBK\n */</span>\n<span class=\"hljs-keyword\">inline</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-function\"><span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">utf8_to_gbk</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;<span class=\"hljs-built_in\">string</span>)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> boost::locale::conv::between(<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-string\">\"GBK\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>);\n}\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    word_embedding_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n<span class=\"hljs-comment\">/**\n * 调用分词接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param query 待分词字符串列表，可能有一个或者两个字符串\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">word_embedding</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>&gt; &amp;query, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span></span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = word_embedding_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    Json::Value root;\n    Json::FastWriter writer;\n\n    <span class=\"hljs-keyword\">if</span>(query.size()&gt;<span class=\"hljs-number\">1</span>){\n        root[<span class=\"hljs-string\">\"query1\"</span>] = query[<span class=\"hljs-number\">0</span>];\n        root[<span class=\"hljs-string\">\"query2\"</span>] = query[<span class=\"hljs-number\">1</span>];\n        root[<span class=\"hljs-string\">\"tid\"</span>] = <span class=\"hljs-number\">1</span>;\n    }<span class=\"hljs-keyword\">else</span>{\n        root[<span class=\"hljs-string\">\"query1\"</span>] = query[<span class=\"hljs-number\">0</span>];\n        root[<span class=\"hljs-string\">\"tid\"</span>] = <span class=\"hljs-number\">2</span>;\n    }\n\n\n\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        <span class=\"hljs-comment\">// 设置http发送的内容类型为JSON</span>\n        curl_slist *plist = curl_slist_append(<span class=\"hljs-literal\">NULL</span>, <span class=\"hljs-string\">\"Content-Type:application/json\"</span>);\n        curl_easy_setopt(curl, CURLOPT_HTTPHEADER, plist);\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> data = utf8_to_gbk(writer.write(root));\n        curl_easy_setopt(curl,CURLOPT_POSTFIELDS,data.c_str());\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = word_embedding_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web.Script.Serialization;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Wordembedding</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 词向量表示接口</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">wordembedding</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordembedding?access_token=\"</span> + token;\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt; para = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt;();\n\t\t\tpara.Add(<span class=\"hljs-string\">\"query1\"</span>, <span class=\"hljs-string\">\"百度\"</span>);\n\t\t\tpara.Add(<span class=\"hljs-string\">\"query2\"</span>, <span class=\"hljs-string\">\"谷歌\"</span>);\n\t\t\tpara.Add(<span class=\"hljs-string\">\"tid\"</span>, <span class=\"hljs-number\">1</span>);\n\t\t\tEncoding encoding = Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>);\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/json\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tJavaScriptSerializer json = <span class=\"hljs-keyword\">new</span> JavaScriptSerializer();\n\t\t\tString str = json.Serialize(para);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>));\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"词向量:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"1364c367\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>ret</td><td>属性对象的集合</td></tr><tr><td>message</td><td>词汇的字面</td></tr><tr><td>data</td><td>返回数据</td></tr><tr><td>+vec</td><td>词向量结果</td></tr><tr><td>+sim</td><td>相似度对象</td></tr><tr><td>++sim</td><td>相似度</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"ret\"</span>:<span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">\"message\"</span>:<span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">\"data\"</span>:\n    {  <span class=\"hljs-attr\">\"sim\"</span>:\n        {\n          <span class=\"hljs-attr\">\"sim\"</span>:<span class=\"hljs-number\">0.180343</span>},\n          <span class=\"hljs-attr\">\"vec\"</span>:<span class=\"hljs-literal\">null</span>\n        }\n}</code>\n</pre><h1 id=\"51e49e88\">中文DNN语言模型</h1><h2 id=\"6061ec42\">接口描述</h2><p>中文DNN语言模型接口用于输出切词结果并给出每个词在句子中的概率值。</p><h2 id=\"8fe7d156\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rpc/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/nlp/</span>v1<span class=\"hljs-regexp\">/dnnlm_cn</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/json</td></tr></tbody></table><p>Body请求示例:</p><pre>\n<code class=\"hljs\" lang=\"\">  {\n    <span class=\"hljs-attr\">\"input_sequence\"</span>:<span class=\"hljs-string\">\"百度是个搜索公司\"</span>\n  }</code>\n</pre><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>input_sequence</td><td>输入的句子，不需要切词</td></tr></tbody></table><p><strong>请求示例代码</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/dnnlm_cn?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span> --data <span class=\"hljs-string\">'{\"input_sequence\":\"百度是个搜索公司\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/json; charset=UTF-8'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/dnnlm_cn?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"input_sequence\\\":\\\"百度是个搜索公司\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.nlp;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.GsonUtils;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n<span class=\"hljs-keyword\">import</span> java.util.HashMap;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * 中文DNN语言模型\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DnnlmCn</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 重要提示代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * http://ai.baidu.com/download/demo/java/utils/FileUtil.java\n     * http://ai.baidu.com/download/demo/java/utils/Base64Util.java\n     * http://ai.baidu.com/download/demo/java/utils/HttpUtil.java\n     * 下载\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 中文DNN语言模型url</span>\n        String dnnlm_cn_Url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/dnnlm_cn\"</span>;\n        String input_sequence = <span class=\"hljs-string\">\"百度是个搜索公司\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            Map&lt;String, Object&gt; map = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\n            map.put(<span class=\"hljs-string\">\"input_sequence\"</span>, input_sequence);\n            String params = GsonUtils.toJson(map);\n            params = URLEncoder.encode(params, <span class=\"hljs-string\">\"GBK\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(dnnlm_cn_Url, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># coding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib, urllib2, sys\n<span class=\"hljs-keyword\">import</span> ssl\n\nurl = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/dnnlm_cn?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>\nbodys = {}\nbodys[<span class=\"hljs-string\">''</span>] = <span class=\"hljs-string\">\"{\\\"input_sequence\\\":\\\"百度是个搜索公司\\\"}\"</span>\npost_data = bodys[<span class=\"hljs-string\">''</span>]\nrequest = urllib2.Request(url, post_data)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/json'</span>)\nctx = ssl.create_default_context()\nctx.check_hostname = <span class=\"hljs-keyword\">False</span>\nctx.verify_mode = ssl.CERT_NONE\nresponse = urllib2.urlopen(request, context=ctx)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> (content):\n    print(content)\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/locale/encoding.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"dnnlm_cn.h\"</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"json/json.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">// 人脸检测接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> input_sequence_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/dnnlm_cn\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> input_sequence_result;\n<span class=\"hljs-comment\">/**\n * 将UTF8转换为GBK\n */</span>\n<span class=\"hljs-keyword\">inline</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-function\"><span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">utf8_to_gbk</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;<span class=\"hljs-built_in\">string</span>)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> boost::locale::conv::between(<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-string\">\"GBK\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>);\n}\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    input_sequence_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n<span class=\"hljs-comment\">/**\n * 调用词性标注接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param query 待标注字符串\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">dnnlm_cn</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;input_sequence, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span></span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = input_sequence_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code = CURLE_FAILED_INIT;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    Json::Value root;\n    Json::FastWriter writer;\n    root[<span class=\"hljs-string\">\"input_sequence\"</span>] = input_sequence;\n\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        <span class=\"hljs-comment\">// 设置http发送的内容类型为JSON</span>\n        curl_slist *plist = curl_slist_append(<span class=\"hljs-literal\">NULL</span>, <span class=\"hljs-string\">\"Content-Type:application/json\"</span>);\n        curl_easy_setopt(curl, CURLOPT_HTTPHEADER, plist);\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> data = utf8_to_gbk(writer.write(root));\n        curl_easy_setopt(curl,CURLOPT_POSTFIELDS,data.c_str());\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = input_sequence_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web.Script.Serialization;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Dnnlmcn</span>\n\t{\n\t\t<span class=\"hljs-comment\">//中文DNN语言模型</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">dnnlmcn</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/dnnlm_cn?access_token=\"</span> + token;\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt; para = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt;();\n\t\t\tpara.Add(<span class=\"hljs-string\">\"input_sequence\"</span>, <span class=\"hljs-string\">\"百度是个搜索公司\"</span>);\n\t\t\tEncoding encoding = Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>);\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/json\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tJavaScriptSerializer json = <span class=\"hljs-keyword\">new</span> JavaScriptSerializer();\n\t\t\tString str = json.Serialize(para);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>));\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"中文DNN语言模型:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"030c58c1\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>seq_seg</td><td>句子的切词结果</td></tr><tr><td>seq_prob</td><td>切词后每个词在句子中的概率值</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"seq_seg\"</span>:<span class=\"hljs-string\">\"百度 是 个 搜索 公司\"</span>,\n  <span class=\"hljs-attr\">\"seq_prob\"</span>:<span class=\"hljs-string\">\" 0.00059052   0.00373688  0.0372463   0.00137015  0.000118814 \"</span>\n}</code>\n</pre><h1 id=\"c150c35a\">短文本相似度接口</h1><h2 id=\"cef3cc9a\">接口描述</h2><p>短文本相似度接口用来判断两个文本的相似度得分。</p><h2 id=\"2cb19590\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL：<code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rpc/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/nlp/</span>v1<span class=\"hljs-regexp\">/simnet</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/json</td></tr></tbody></table><p>Body请求示例:</p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"input\"</span>:\n    {\n      <span class=\"hljs-attr\">\"qslots\"</span>:[{<span class=\"hljs-attr\">\"terms_sequence\"</span>:<span class=\"hljs-string\">\"你好百度” \"</span>, <span class=\"hljs-attr\">\"type\"</span>:<span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">\"items\"</span>:[]}],\n      <span class=\"hljs-attr\">\"tslots\"</span>:[{<span class=\"hljs-attr\">\"terms_sequence\"</span>:<span class=\"hljs-string\">\"你好世界” \"</span>, <span class=\"hljs-attr\">\"type\"</span>:<span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">\"items\"</span>:[]}],\n      <span class=\"hljs-attr\">\"type\"</span>:<span class=\"hljs-number\">0</span>\n    }\n}</code>\n</pre><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>qslots中的terms_sequence</td><td>短文本1</td></tr><tr><td>tslots中的terms_sequence</td><td>短文本2</td></tr><tr><td>items</td><td>均设置为空列表</td></tr><tr><td>type</td><td>类别，均设置为0</td></tr></tbody></table><p><strong>请求示例代码</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">短文本相似度接口\ncurl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/simnet?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span> --data <span class=\"hljs-string\">'{\"input\":{\"qslots\":[{\"terms_sequence\":\"你好百度\",\"type\":0,\"items\":[]},{\"terms_sequence\":\"你好北京” \", \"type\":0, \"items\":[]}],\"tslots\":[{\"terms_sequence\":\"你好世界\",\"type\":0,\"items\":[]}],\"type\":0}}'</span> -H <span class=\"hljs-string\">'Content-Type:application/json; charset=UTF-8'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/simnet?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"input\\\":{\\\"qslots\\\":[{\\\"terms_sequence\\\":\\\"你好百度\\\",\\\"type\\\":0,\\\"items\\\":[]}],\\\"tslots\\\":[{\\\"terms_sequence\\\":\\\"你好世界\\\",\\\"type\\\":0,\\\"items\\\":[]}],\\\"type\\\":0}}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.nlp;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.GsonUtils;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n<span class=\"hljs-keyword\">import</span> java.util.ArrayList;\n<span class=\"hljs-keyword\">import</span> java.util.HashMap;\n<span class=\"hljs-keyword\">import</span> java.util.List;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * 短文本相似度\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SimNet</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 重要提示代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * http://ai.baidu.com/download/demo/java/utils/FileUtil.java\n     * http://ai.baidu.com/download/demo/java/utils/Base64Util.java\n     * http://ai.baidu.com/download/demo/java/utils/HttpUtil.java\n     * 下载\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 短文本相似度url</span>\n        String simNetUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/simnet\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            String shortText1 = <span class=\"hljs-string\">\"你好百度\"</span>;\n            Map&lt;String, Object&gt; qslots_params = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\n            qslots_params.put(<span class=\"hljs-string\">\"terms_sequence\"</span>, shortText1);\n            qslots_params.put(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-number\">0</span>);\n            qslots_params.put(<span class=\"hljs-string\">\"items\"</span>, <span class=\"hljs-keyword\">new</span> ArrayList());\n            List&lt;Object&gt; qslots = <span class=\"hljs-keyword\">new</span> ArrayList&lt;Object&gt;();\n            qslots.add(qslots_params);\n\n            String shortText2 = <span class=\"hljs-string\">\"你好世界\"</span>;\n            Map&lt;String, Object&gt; tslots_params = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\n            tslots_params.put(<span class=\"hljs-string\">\"terms_sequence\"</span>, shortText2);\n            tslots_params.put(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-number\">0</span>);\n            tslots_params.put(<span class=\"hljs-string\">\"items\"</span>, <span class=\"hljs-keyword\">new</span> ArrayList());\n            List&lt;Object&gt; tslots = <span class=\"hljs-keyword\">new</span> ArrayList&lt;Object&gt;();\n            tslots.add(tslots_params);\n\n            Map&lt;String, Object&gt; input = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\n            input.put(<span class=\"hljs-string\">\"qslots\"</span>, qslots);\n            input.put(<span class=\"hljs-string\">\"tslots\"</span>, tslots);\n            input.put(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-number\">0</span>);\n\n            Map&lt;String, Object&gt; map = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\n            map.put(<span class=\"hljs-string\">\"input\"</span>, input);\n\n            String params = GsonUtils.toJson(map);\n            params = URLEncoder.encode(params, <span class=\"hljs-string\">\"GBK\"</span>);\n\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(simNetUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># coding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib, urllib2, sys\n<span class=\"hljs-keyword\">import</span> ssl\n\nurl = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/simnet?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>\nbodys = {}\nbodys[\n    <span class=\"hljs-string\">''</span>] = <span class=\"hljs-string\">\"{\\\"input\\\":{\\\"qslots\\\":[{\\\"terms_sequence\\\":\\\"你好百度\\\",\\\"type\\\":0,\\\"items\\\":[]}],\\\"tslots\\\":[{\\\"terms_sequence\\\":\\\"你好世界\\\",\\\"type\\\":0,\\\"items\\\":[]}],\\\"type\\\":0}}\"</span>\npost_data = bodys[<span class=\"hljs-string\">''</span>]\nrequest = urllib2.Request(url, post_data)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/json'</span>)\nctx = ssl.create_default_context()\nctx.check_hostname = <span class=\"hljs-keyword\">False</span>\nctx.verify_mode = ssl.CERT_NONE\nresponse = urllib2.urlopen(request, context=ctx)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> (content):\n    print(content)\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"simnet.h\"</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"json/json.h\"</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/locale/encoding.hpp&gt;</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">// 人脸检测接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> comment_tag_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/simnet\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> comment_tag_result;\n\n<span class=\"hljs-comment\">/**\n * 将UTF8转换为GBK\n */</span>\n<span class=\"hljs-keyword\">inline</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-function\"><span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">utf8_to_gbk</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;<span class=\"hljs-built_in\">string</span>)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> boost::locale::conv::between(<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-string\">\"GBK\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>);\n}\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    comment_tag_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param comment 评论内容字符串\n * @param type 类别参数\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">simnet</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;text1, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;text2,\n           <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = comment_tag_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    <span class=\"hljs-comment\">// 构造json</span>\n    Json::FastWriter writer;\n    Json::Value root;\n    Json::Value input, qslots, tslots,item;\n    item[<span class=\"hljs-string\">\"type\"</span>] = <span class=\"hljs-number\">0</span>;\n    item[<span class=\"hljs-string\">\"items\"</span>].resize(<span class=\"hljs-number\">0</span>);\n    item[<span class=\"hljs-string\">\"terms_sequence\"</span>] = text1;\n    qslots.append(item);\n    item[<span class=\"hljs-string\">\"terms_sequence\"</span>] = text2;\n    tslots.append(item);\n    input[<span class=\"hljs-string\">\"qslots\"</span>] = qslots;\n    input[<span class=\"hljs-string\">\"tslots\"</span>] = tslots;\n    input[<span class=\"hljs-string\">\"type\"</span>] = <span class=\"hljs-number\">0</span>;\n    root[<span class=\"hljs-string\">\"input\"</span>] = input;\n    <span class=\"hljs-comment\">// 利用libcurl发送https请求</span>\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        <span class=\"hljs-comment\">// 设置http发送的内容类型为JSON</span>\n        curl_slist *plist = curl_slist_append(<span class=\"hljs-literal\">NULL</span>, <span class=\"hljs-string\">\"Content-Type:application/json\"</span>);\n        curl_easy_setopt(curl, CURLOPT_HTTPHEADER, plist);\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> gbk_data = utf8_to_gbk(writer.write(root));\n        curl_easy_setopt(curl, CURLOPT_POSTFIELDS, gbk_data.c_str());\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = comment_tag_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web.Script.Serialization;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Simnet</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 短文本相似度接口</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">simnet</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/simnet?access_token=\"</span> + token;\n\t\t\tList&lt;Dictionary&lt;<span class=\"hljs-keyword\">string</span>, Object&gt;&gt; qslots = <span class=\"hljs-keyword\">new</span> List&lt;Dictionary&lt;<span class=\"hljs-keyword\">string</span>, Object&gt;&gt;();\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, Object&gt; qslotsp = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, Object&gt;();\n\t\t\tqslotsp.Add(<span class=\"hljs-string\">\"terms_sequence\"</span>, <span class=\"hljs-string\">\"你好世界\"</span>);\n\t\t\tqslotsp.Add(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-number\">0</span>);\n\t\t\tqslotsp.Add(<span class=\"hljs-string\">\"items\"</span>, <span class=\"hljs-keyword\">new</span> List&lt;<span class=\"hljs-keyword\">string</span>&gt;());\n\t\t\tqslots.Add(qslotsp);\n\n\t\t\tList&lt;Dictionary&lt;<span class=\"hljs-keyword\">string</span>, Object&gt;&gt; tslots = <span class=\"hljs-keyword\">new</span> List&lt;Dictionary&lt;<span class=\"hljs-keyword\">string</span>, Object&gt;&gt;();\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, Object&gt; tslotsp = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, Object&gt;();\n\t\t\ttslotsp.Add(<span class=\"hljs-string\">\"terms_sequence\"</span>, <span class=\"hljs-string\">\"你好百度\"</span>);\n\t\t\ttslotsp.Add(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-number\">0</span>);\n\t\t\ttslotsp.Add(<span class=\"hljs-string\">\"items\"</span>, <span class=\"hljs-keyword\">new</span> List&lt;<span class=\"hljs-keyword\">string</span>&gt;());\n\t\t\ttslots.Add(tslotsp);\n\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt; input = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt;();\n\t\t\tinput.Add(<span class=\"hljs-string\">\"qslots\"</span>, qslots);\n\t\t\tinput.Add(<span class=\"hljs-string\">\"tslots\"</span>, tslots);\n\t\t\tinput.Add(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-number\">0</span>);\n\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt; param = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt;();\n\t\t\tparam.Add(<span class=\"hljs-string\">\"input\"</span>, input);\n\n\t\t\tJavaScriptSerializer json = <span class=\"hljs-keyword\">new</span> JavaScriptSerializer();\n\t\t\t<span class=\"hljs-keyword\">string</span> paramstr = json.Serialize(param);\n\t\t\tEncoding encoding = Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(paramstr);\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/json\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>));\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"短文本相似度接口:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"45142397\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>score</td><td>两个文本相似度得分</td></tr><tr><td>error</td><td>error code</td></tr><tr><td>type</td><td>默认为0</td></tr><tr><td>error_note</td><td>error对应文字说明</td></tr><tr><td>items</td><td>默认为空</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"output\"</span>:\n    {\n      <span class=\"hljs-attr\">\"score\"</span>:<span class=\"hljs-number\">0.758419</span>,\n      <span class=\"hljs-attr\">\"error\"</span>:<span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"type\"</span>:<span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">\"error_note\"</span>:<span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">\"items\"</span>:[]\n    }\n}</code>\n</pre><p><strong>此接口业务错误码说明</strong></p><table><thead><tr><th>Code</th><th>Message</th><th>返回说明</th></tr></thead><tbody><tr><td>0</td><td>NO_ERROR</td><td>正确返回</td></tr><tr><td>1</td><td>BEYOND_SLOT_LENGTH</td><td>输入长度过长</td></tr><tr><td>2</td><td>OOV_ERROR</td><td>输入文本不在词表中</td></tr><tr><td>3</td><td>LEGO_LIB_RET_ERROR</td><td>内部库错误</td></tr><tr><td>4</td><td>OTHER_SERVER_ERROR</td><td>其它服务错误</td></tr><tr><td>5</td><td>INPUT_HAS_EMPTY</td><td>输入为空</td></tr><tr><td>6</td><td>INPUT_FORMAT_ERROR</td><td>输入格式错误</td></tr><tr><td>7</td><td>OTHER_CLIENT_ERROR</td><td>客服端错误</td></tr></tbody></table><h1 id=\"f6dc4440\">评论观点抽取接口</h1><h2 id=\"08768e67\">接口描述</h2><p>评论观点抽取接口用来提取一个句子观点评论的情感属性。</p><h2 id=\"74702410\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法: <code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL: <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rpc/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/nlp/</span>v1<span class=\"hljs-regexp\">/comment_tag</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/json</td></tr></tbody></table><p>Body请求示例:</p><pre>\n<code class=\"hljs\" lang=\"\">  {\n    <span class=\"hljs-attr\">\"comment\"</span>:<span class=\"hljs-string\">\"个人觉得福克斯好，外观漂亮年轻，动力和操控性都不错\"</span>,\n    <span class=\"hljs-attr\">\"entity\"</span>:<span class=\"hljs-string\">\"NULL\"</span>,\n    <span class=\"hljs-attr\">\"type\"</span>:<span class=\"hljs-string\">\"10\"</span>\n  }</code>\n</pre><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>comment</td><td>string</td><td>评论内容</td></tr><tr><td>entity</td><td>string</td><td>实体名，当前取值为NULL，暂时不生效</td></tr><tr><td>type</td><td>string</td><td>类别,默认类别为4（餐厅）</td></tr></tbody></table><p>其中type包含12个类别，具体取值说明如下：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>酒店</td></tr><tr><td>2</td><td>KTV</td></tr><tr><td>3</td><td>丽人</td></tr><tr><td>4</td><td>美食（默认）</td></tr><tr><td>5</td><td>旅游</td></tr><tr><td>6</td><td>健康</td></tr><tr><td>7</td><td>教育</td></tr><tr><td>8</td><td>商业</td></tr><tr><td>9</td><td>房产</td></tr><tr><td>10</td><td>汽车</td></tr><tr><td>11</td><td>生活</td></tr><tr><td>12</td><td>购物</td></tr></tbody></table><p><strong>请求示例代码</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/comment_tag?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span> --data <span class=\"hljs-string\">'{\"comment\":\"个人觉得福克斯好，外观漂亮年轻，动力和操控性都不错\",\"type\":\"10\",\"entity\":\"NULL\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/json; charset=UTF-8'</span>\n\n</code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/comment_tag?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"comment\\\":\\\"个人觉得福克斯好，外观漂亮年轻，动力和操控性都不错\\\",\\\"type\\\":\\\"10\\\",\\\"entity\\\":\\\"NULL\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.nlp;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.GsonUtils;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n<span class=\"hljs-keyword\">import</span> java.util.HashMap;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * 评论观点抽取\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CommentTag</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 重要提示代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * http://ai.baidu.com/download/demo/java/utils/FileUtil.java\n     * http://ai.baidu.com/download/demo/java/utils/Base64Util.java\n     * http://ai.baidu.com/download/demo/java/utils/HttpUtil.java\n     * 下载\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 评论观点抽取url</span>\n        String comment_tag_Url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/comment_tag\"</span>;\n        String comment = <span class=\"hljs-string\">\"个人觉得福克斯好，外观漂亮年轻，动力和操控性都不错\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            Map&lt;String, Object&gt; map = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\n            map.put(<span class=\"hljs-string\">\"comment\"</span>, comment); <span class=\"hljs-comment\">// 评论内容</span>\n            map.put(<span class=\"hljs-string\">\"entity\"</span>, <span class=\"hljs-string\">\"NULL\"</span>); <span class=\"hljs-comment\">// 实体名，当前取值为NULL，暂时不生效</span>\n            map.put(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-string\">\"10\"</span>); <span class=\"hljs-comment\">// 类别</span>\n            String params = GsonUtils.toJson(map);\n            params = URLEncoder.encode(params, <span class=\"hljs-string\">\"GBK\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(comment_tag_Url, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># coding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib, urllib2, sys\n<span class=\"hljs-keyword\">import</span> ssl\n\nurl = <span class=\"hljs-string\">'https://aip.baidubce.com/rpc/2.0/nlp/v1/comment_tag?access_token=24.bb41cb1bd46dd44b9c801b10ce010240.2592000.1492322377.282335-9252280'</span>\nbodys = {}\nbodys[<span class=\"hljs-string\">''</span>] = <span class=\"hljs-string\">\"{\\\"comment\\\":\\\"个人觉得福克斯好,外观漂亮年轻,动力和操控性都不错\\\",\\\"type\\\":\\\"10\\\",\\\"entity\\\":\\\"NULL\\\"}\"</span>\npost_data = bodys[<span class=\"hljs-string\">''</span>]\nrequest = urllib2.Request(url, post_data)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/json'</span>)\nctx = ssl.create_default_context()\nctx.check_hostname = <span class=\"hljs-keyword\">False</span>\nctx.verify_mode = ssl.CERT_NONE\nresponse = urllib2.urlopen(request, context=ctx)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> (content):\n    print(content)\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"comment_tag.h\"</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"json/json.h\"</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/locale/encoding.hpp&gt;</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">// 人脸检测接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> comment_tag_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/comment_tag\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> comment_tag_result;\n\n<span class=\"hljs-comment\">/**\n * 将UTF8转换为GBK\n */</span>\n<span class=\"hljs-keyword\">inline</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-function\"><span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">utf8_to_gbk</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;<span class=\"hljs-built_in\">string</span>)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> boost::locale::conv::between(<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-string\">\"GBK\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>);\n}\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    comment_tag_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param comment 评论内容字符串\n * @param type 类别参数\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">comment_tag</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;comment, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">int</span> type, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = comment_tag_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    <span class=\"hljs-comment\">// 将int类型的type转换为string类型</span>\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> string_stream;\n    string_stream &lt;&lt; type;\n    <span class=\"hljs-comment\">// 构造json</span>\n    Json::Value root;\n    Json::FastWriter writer;\n    root[<span class=\"hljs-string\">\"comment\"</span>] = comment;\n    root[<span class=\"hljs-string\">\"entity\"</span>] = <span class=\"hljs-string\">\"NULL\"</span>;\n    root[<span class=\"hljs-string\">\"type\"</span>] = string_stream.str();\n    <span class=\"hljs-comment\">// 利用libcurl发送https请求</span>\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        <span class=\"hljs-comment\">// 设置http发送的内容类型为JSON</span>\n        curl_slist *plist = curl_slist_append(<span class=\"hljs-literal\">NULL</span>, <span class=\"hljs-string\">\"Content-Type:application/json\"</span>);\n        curl_easy_setopt(curl, CURLOPT_HTTPHEADER, plist);\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> gbk_data = utf8_to_gbk(writer.write(root));\n        curl_easy_setopt(curl, CURLOPT_POSTFIELDS, gbk_data.c_str());\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = comment_tag_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web.Script.Serialization;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Commenttag</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 评论观点抽取接口</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">commenttag</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/comment_tag?access_token=\"</span> + token;\n\t\t\tList&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt; paraList = <span class=\"hljs-keyword\">new</span> List&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"access_token\"</span>, AccessToken.TOKEN));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"comment\"</span>, <span class=\"hljs-string\">\"个人觉得福克斯好，外观漂亮年轻，动力和操控性都不错\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"entity\"</span>, <span class=\"hljs-string\">\"NULL\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-string\">\"10\"</span>));\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt; para = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt;();\n\t\t\tpara.Add(<span class=\"hljs-string\">\"comment\"</span>, <span class=\"hljs-string\">\"个人觉得福克斯好，外观漂亮年轻，动力和操控性都不错\"</span>);\n\t\t\tpara.Add(<span class=\"hljs-string\">\"entity\"</span>, <span class=\"hljs-string\">\"NULL\"</span>);\n\t\t\tpara.Add(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-string\">\"10\"</span>);\n\n\t\t\tEncoding encoding = Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>);\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/json\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tJavaScriptSerializer json = <span class=\"hljs-keyword\">new</span> JavaScriptSerializer();\n\t\t\tString str = json.Serialize(para);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"hljs-string\">\"GBK\"</span>));\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"评论观点抽取接口:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"b0579192\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>abstract</td><td>表示评论观点在评论文本中的位置。</td></tr><tr><td>adj</td><td>表示抽取结果中的评价词</td></tr><tr><td>comment</td><td>表示待抽取观点的评论文本。</td></tr><tr><td>entity</td><td>实体名，当前取值为NULL，暂时不生效</td></tr><tr><td>fea</td><td>抽取结果中的属性词</td></tr><tr><td>type</td><td>表示情感极性（其中2表示积极、1表示中性、0表示消极）。</td></tr><tr><td>其他参数</td><td>暂不生效</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"abstract\"</span>:<span class=\"hljs-string\">\"&lt;span&gt;动力和操控性都不错&lt;/span&gt;\"</span>,\n  <span class=\"hljs-attr\">\"adj\"</span>:<span class=\"hljs-string\">\"不错\"</span>,\n  <span class=\"hljs-attr\">\"comment\"</span>:<span class=\"hljs-string\">\"个人觉得福克斯好，外观漂亮年轻，动力和操控性都不错\"</span>,\n  <span class=\"hljs-attr\">\"entity\"</span>:<span class=\"hljs-string\">\"NULL\"</span>,\n  <span class=\"hljs-attr\">\"fea\"</span>:<span class=\"hljs-string\">\"动力\"</span>,\n  <span class=\"hljs-attr\">\"type\"</span>:<span class=\"hljs-string\">\"2\"</span>\n}</code>\n</pre><h1 id=\"9293155d\">错误码</h1><p>若请求错误，服务器将返回的JSON文本包含以下参数：</p><ul><li><p><strong>error_code：</strong>错误码。</p></li><li><p><strong>error_msg：</strong>错误描述信息，帮助理解和解决发生的错误。</p></li></ul><p>例如Access Token失效返回：</p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"error_code\"</span>: <span class=\"hljs-number\">110</span>,\n  <span class=\"hljs-attr\">\"error_msg\"</span>: <span class=\"hljs-string\">\"Access token invalid or no longer valid\"</span>\n}</code>\n</pre><p>需要重新获取新的Access Token再次请求即可。</p><table><thead><tr><th>错误码</th><th>错误信息</th><th>描述</th></tr></thead><tbody><tr><td>400</td><td>Validation criteria</td><td>请求格式错误</td></tr><tr><td>403</td><td>Authentication failed</td><td>认证失败或无权限</td></tr><tr><td>500</td><td>Service internal error occurred</td><td>内部服务发生错误</td></tr></tbody></table>",
  "headings": [
    {
      "level": 1,
      "text": "简介",
      "id": "8a61ca9e"
    },
    {
      "level": 2,
      "text": "接口能力",
      "id": "829acf26"
    },
    {
      "level": 2,
      "text": "请求格式",
      "id": "65b8dc39"
    },
    {
      "level": 2,
      "text": "返回格式",
      "id": "cf769fec"
    },
    {
      "level": 1,
      "text": "调用方式",
      "id": "e77d2cf7"
    },
    {
      "level": 2,
      "text": "调用方式一",
      "id": "86c882d3"
    },
    {
      "level": 1,
      "text": "调用方式二",
      "id": "93adc21a"
    },
    {
      "level": 1,
      "text": "分词接口",
      "id": "2aab07b5"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "0ce6c21b"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "c8f88961"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "f42064f4"
    },
    {
      "level": 1,
      "text": "词性标注接口",
      "id": "f240756a"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "902caedd"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "def3d530"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "4e3ee872"
    },
    {
      "level": 1,
      "text": "词向量表示接口",
      "id": "87da2fbf"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "6437fb56"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "1364c367"
    },
    {
      "level": 1,
      "text": "中文DNN语言模型",
      "id": "51e49e88"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "6061ec42"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "8fe7d156"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "030c58c1"
    },
    {
      "level": 1,
      "text": "短文本相似度接口",
      "id": "c150c35a"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "cef3cc9a"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "2cb19590"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "45142397"
    },
    {
      "level": 1,
      "text": "评论观点抽取接口",
      "id": "f6dc4440"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "08768e67"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "74702410"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "b0579192"
    },
    {
      "level": 1,
      "text": "错误码",
      "id": "9293155d"
    }
  ]
}
