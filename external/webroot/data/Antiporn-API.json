{
  "html": "<h1 id=\"67427582\">简介</h1><p>Hi，您好，欢迎使用百度黄反识别API服务。</p><p>本文档主要针对API开发者，描述百度黄反识别接口服务的相关技术内容。如果您对文档内容有任何疑问，可以通过以下几种方式联系我们：</p><ul><li>在百度云控制台内<strong>提交工单</strong>，咨询问题类型请选择<strong>人工智能服务</strong>；</li><li>加入<strong>开发者QQ群</strong>：224994340；</li></ul><h2 id=\"b705a5a1\">接口能力</h2><table><thead><tr><th style=\"text-align:left\">接口名称</th><th style=\"text-align:left\">接口能力简要描述</th></tr></thead><tbody><tr><td style=\"text-align:left\">色情识别</td><td style=\"text-align:left\">识别图片的色情程度，返回图片的色情、性感、正常分值</td></tr><tr><td style=\"text-align:left\">色情GIF识别</td><td style=\"text-align:left\">识别GIF图片的色情程度，返回图片的色情、性感、正常分值</td></tr></tbody></table><h2 id=\"1d5d480b\">请求格式</h2><p>POST方式调用</p><p><strong>注意：</strong>Content-Type为<code><span class=\"hljs-built_in\">application</span>/x-www-form-urlencoded</code>，然后通过<code><span class=\"hljs-attribute\">urlencode</span></code>格式化请求体。</p><h2 id=\"83f92f29\">返回格式</h2><p>JSON格式</p><h2 id=\"6dd76d2a\">请求限制</h2><p>请求图片需经过<code><span class=\"hljs-built_in\">base64</span>编码</code>：图片的base64编码指将一副图片数据编码成一串字符串，使用该字符串代替图像地址。您可以首先得到图片的二进制，然后用Base64格式编码即可。</p><p><strong>注意：</strong>图片的base64编码是不包含图片头的，如<code>（<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>:image/jpg;base64,）</span></code></p><p><strong>请求格式支持：</strong>PNG、JPG、JPEG、BMP；Gif色情识别支持GIF图片。</p><h1 id=\"ecfe2e4c\">调用方式</h1><p>调用AI服务相关的API接口有两种调用方式，两种不同的调用方式采用相同的接口URL。</p><p>区别在于<strong>请求方式</strong>和<strong>鉴权方法</strong>不一样，请求参数和返回结果一致。</p><h2 id=\"f095e81d\">调用方式一</h2><p><strong>请求URL数据格式</strong></p><p>向API服务地址使用POST发送请求，必须在URL中带上参数：</p><p><strong>access_token:</strong> 必须参数，参考“<a href=\"http://ai.baidu.com/docs#Beginner-Auth\" target=\"_blank\">Access Token获取</a>”。</p><blockquote><p>注意：<code>access_token</code>的有效期为30天，需要每30天进行定期更换；</p></blockquote><p>POST中参数按照API接口说明调用即可。</p><p>例如人脸识别API，使用HTTPS POST发送：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-symbol\">https:</span>//aip.baidubce.com/<span class=\"hljs-built_in\">rest</span>/<span class=\"hljs-number\">2.0</span>/face/v1/detect?access_token=<span class=\"hljs-number\">24.</span>f9ba9c5241b67688bb4adbed8bc91dec<span class=\"hljs-meta\">.2592000</span><span class=\"hljs-meta\">.1485570332</span><span class=\"hljs-meta\">.282335</span>-<span class=\"hljs-number\">8574074</span></code>\n</pre><p><strong>获取access_token示例代码</strong></p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">C++</div><div class=\"code-block-title\" data-index=\"1\">C#</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">PHP</div><div class=\"code-block-title\" data-index=\"4\">Python</div><div class=\"code-block-title\" data-index=\"5\">Bash</div></div><div data-lan=\"C++\"><pre><code class=\"hljs\">#include &lt;iostream&gt;\n#include &lt;curl/curl.h&gt;\n#include &lt;json/json.h&gt;\n#include \"access_token.h\"\n// libcurl库下载链接：https://curl.haxx.se/download.html\n// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/\n// 获取access_token所需要的url\nconst std::string access_token_url = \"https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials\";\n// 回调函数获取到的access_token存放变量\nstatic std::string access_token_result;\n/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在result中\n * @param 参数定义见libcurl库文档\n * @return 返回值定义见libcurl库文档\n */\nstatic size_t callback(void *ptr, size_t size, size_t nmemb, void *stream) {\n    // 获取到的body存放在ptr中，先将其转换为string格式\n    std::string s((char *) ptr, size * nmemb);\n    // 开始获取json中的access token项目\n    Json::Reader reader;\n    Json::Value root;\n    // 使用boost库解析json\n    reader.parse(s,root);\n    access_token_result = root[\"access_token\"].asString();\n    return size * nmemb;\n}\n\n/**\n * 用以获取access_token的函数，使用时需要先在百度云控制台申请相应功能的应用，获得对应的API Key和Secret Key\n * @param access_token 获取得到的access token，调用函数时需传入该参数\n * @param AK 应用的API key\n * @param SK 应用的Secret key\n * @return 返回0代表获取access token成功，其他返回值代表获取失败\n */\nint get_access_token(std::string &amp;access_token, const std::string &amp;AK, const std::string &amp;SK) {\n    CURL *curl;\n    CURLcode result_code;\n    int success;\n    curl = curl_easy_init();\n    if (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL,\n                         (access_token_url + \"&amp;client_id=\" + AK + \"&amp;client_secret=\" + SK).data());\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        if (result_code != CURLE_OK) {\n            fprintf(stderr, \"curl_easy_perform() failed: %s\\n\",\n                    curl_easy_strerror(result_code));\n            success = 1;\n            return success;\n        }\n        access_token = access_token_result;\n        curl_easy_cleanup(curl);\n        success = 0;\n    } else {\n        fprintf(stderr, \"curl_easy_init() failed.\");\n        success = 1;\n    }\n    return success;\n}\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.Net.Http;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AccessToken</span>\n\n\t{\n\t\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String TOKEN = <span class=\"hljs-string\">\"######\"</span>; <span class=\"hljs-comment\">// 调用getAccessToken()获取的 access_token建议根据expires_in 时间 设置缓存</span>\n\n\t\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String clientId = <span class=\"hljs-string\">\"####\"</span>; <span class=\"hljs-comment\">// 百度云中开通对应服务应用的 API Key 建议开通应用的时候多选服务</span>\n\t\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String clientSecret = <span class=\"hljs-string\">\"#####\"</span>;   <span class=\"hljs-comment\">// 百度云中开通对应服务应用的 Secret Key</span>\n\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">getAccessToken</span>(<span class=\"hljs-params\"></span>) </span>{\n\t\t\tString authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token\"</span>;\n\t\t\tHttpClient client = <span class=\"hljs-keyword\">new</span> HttpClient();\n\t\t\tList&lt;KeyValuePair&lt;String, String&gt;&gt; paraList = <span class=\"hljs-keyword\">new</span> List&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"grant_type\"</span>, <span class=\"hljs-string\">\"client_credentials\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"client_id\"</span>, clientId));\n\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"client_secret\"</span>, clientSecret));\n\n\t\t\tHttpResponseMessage response = client.PostAsync(authHost, <span class=\"hljs-keyword\">new</span> FormUrlEncodedContent(paraList)).Result;\n\t\t\tString result = response.Content.ReadAsStringAsync().Result;\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-comment\">// </span>\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.auth;\n\n<span class=\"hljs-keyword\">import</span> org.json.JSONObject;\n\n<span class=\"hljs-keyword\">import</span> java.io.BufferedReader;\n<span class=\"hljs-keyword\">import</span> java.io.InputStreamReader;\n<span class=\"hljs-keyword\">import</span> java.net.HttpURLConnection;\n<span class=\"hljs-keyword\">import</span> java.net.URL;\n<span class=\"hljs-keyword\">import</span> java.util.List;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * 获取token类\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AuthService</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 获取权限token\n     *\n     * <span class=\"hljs-doctag\">@return</span> 返回示例：\n     * {\n     * \"access_token\": \"24.460da4889caad24cccdb1fea17221975.2592000.1491995545.282335-9261443\",\n     * \"session_key\": \"9mzdDxLPLXYfhlmFRBSGI8jOy19HNzFT6cle3RWf2m9HL8LdLxyVhEETkPS8gQtLbhw1TP/ly3+l59n4wknbmwPk6NC1\",\n     * \"scope\": \"public vis-faceverify_faceverify vis-ocr_ocr vis-faceattribute_faceattribute vis-ocr_bankcard nlp_wordseg nlp_simnet nlp_wordemb nlp_comtag nlp_wordpos nlp_dnnlm_cn vis-antiporn_antiporn_v2 brain_ocr_scope wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian wangrantest_test wangrantest_test1 bnstest_test1 bnstest_test2 ApsMisTest_Test权限 vis-classify_flower\",\n     * \"refresh_token\": \"25.bf1ec1814779878486cb9ba68f7defe5.315360000.1804763545.282335-9261443\",\n     * \"session_secret\": \"b292e183bb394fb8d8065e7f8b137757\",\n     * \"expires_in\": 2592000\n     * }\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">getAuth</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-comment\">// 获取token地址</span>\n        String authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token?\"</span>;\n        <span class=\"hljs-comment\">// 官网获取的 API Key 更新为你注册的</span>\n        String clientId = <span class=\"hljs-string\">\"nElok3H1CINAdEsTuzwyxO9U\"</span>;\n        <span class=\"hljs-comment\">// 官网获取的 Secret Key 更新为你注册的</span>\n        String clientSecret = <span class=\"hljs-string\">\"kg1vwhls4LO5h91YZkfG58qpRWgFHFCl\"</span>;\n        String getAccessTokenUrl = authHost\n                <span class=\"hljs-comment\">// 1. grant_type为固定参数</span>\n                + <span class=\"hljs-string\">\"grant_type=client_credentials\"</span>\n                <span class=\"hljs-comment\">// 2. 官网获取的 API Key</span>\n                + <span class=\"hljs-string\">\"&amp;client_id=\"</span> + clientId\n                <span class=\"hljs-comment\">// 3. 官网获取的 Secret Key</span>\n                + <span class=\"hljs-string\">\"&amp;client_secret=\"</span> + clientSecret;\n        <span class=\"hljs-keyword\">try</span> {\n            URL realUrl = <span class=\"hljs-keyword\">new</span> URL(getAccessTokenUrl);\n            <span class=\"hljs-comment\">// 打开和URL之间的连接</span>\n            HttpURLConnection connection = (HttpURLConnection) realUrl.openConnection();\n            connection.setRequestMethod(<span class=\"hljs-string\">\"GET\"</span>);\n            connection.connect();\n            <span class=\"hljs-comment\">// 获取所有响应头字段</span>\n            Map&lt;String, List&lt;String&gt;&gt; map = connection.getHeaderFields();\n            <span class=\"hljs-comment\">// 遍历所有的响应头字段</span>\n            <span class=\"hljs-keyword\">for</span> (String key : map.keySet()) {\n                System.out.println(key + <span class=\"hljs-string\">\"---&gt;\"</span> + map.get(key));\n            }\n            <span class=\"hljs-comment\">// 定义 BufferedReader输入流来读取URL的响应</span>\n            BufferedReader in = <span class=\"hljs-keyword\">new</span> BufferedReader(<span class=\"hljs-keyword\">new</span> InputStreamReader(connection.getInputStream()));\n            String result = <span class=\"hljs-string\">\"\"</span>;\n            String line;\n            <span class=\"hljs-keyword\">while</span> ((line = in.readLine()) != <span class=\"hljs-keyword\">null</span>) {\n                result += line;\n            }\n            <span class=\"hljs-comment\">/**\n             * 返回结果示例\n             */</span>\n            System.out.println(<span class=\"hljs-string\">\"result:\"</span> + result);\n            JSONObject jsonObject = <span class=\"hljs-keyword\">new</span> JSONObject(result);\n            String access_token = jsonObject.getString(<span class=\"hljs-string\">\"access_token\"</span>);\n            <span class=\"hljs-keyword\">return</span> access_token;\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            System.out.printf(<span class=\"hljs-string\">\"获取token失败！\"</span>);\n            e.printStackTrace();\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;\n    }\n}\n</code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/oauth/2.0/token'</span>;\n    $post_data[<span class=\"hljs-string\">'grant_type'</span>]       = <span class=\"hljs-string\">'client_credentials'</span>;\n    $post_data[<span class=\"hljs-string\">'client_id'</span>]      = <span class=\"hljs-string\">'A0nyraL7kGXrDhfDf33UyGvX'</span>;\n    $post_data[<span class=\"hljs-string\">'client_secret'</span>] = <span class=\"hljs-string\">'4IGLoGQqeq8svpocetiBgzTLDlkVfhG1'</span>;\n    $o = <span class=\"hljs-string\">\"\"</span>;\n    <span class=\"hljs-keyword\">foreach</span> ( $post_data <span class=\"hljs-keyword\">as</span> $k =&gt; $v ) \n    {\n    \t$o.= <span class=\"hljs-string\">\"$k=\"</span> . urlencode( $v ). <span class=\"hljs-string\">\"&amp;\"</span> ;\n    }\n    $post_data = substr($o,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">-1</span>);\n    \n    $res = request_post($url, $post_data);\n\n    var_dump($res);\n\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n<span class=\"hljs-keyword\">import</span> json\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">AuthService</span><span class=\"hljs-params\">()</span>:</span>\n    <span class=\"hljs-comment\"># 获取token地址</span>\n    authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token?\"</span>\n    <span class=\"hljs-comment\"># 官网获取的 API Key</span>\n    clientId = <span class=\"hljs-string\">\"\"</span>\n    <span class=\"hljs-comment\"># 官网获取的 Secret Key</span>\n    clientSecret = <span class=\"hljs-string\">\"\"</span>\n    getAccessTokenUrl = authHost + <span class=\"hljs-string\">\"grant_type=client_credentials\"</span> + <span class=\"hljs-string\">\"&amp;client_id=\"</span> + clientId + <span class=\"hljs-string\">\"&amp;client_secret=\"</span> + clientSecret\n    request = urllib2.Request(getAccessTokenUrl)\n    response_data = urllib2.urlopen(request)\n    params = json.loads(response_data.read())\n    <span class=\"hljs-keyword\">return</span> params[<span class=\"hljs-string\">\"access_token\"</span>]\n\n\nAuthService()\n</code></pre></div><div data-lan=\"Bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=A0nyraL7kGXrDhfDf33UyGvX&amp;client_secret=4IGLoGQqeq8svpocetiBgzTLDlkVfhG1'</span>\n</code></pre></div></div><blockquote><p><strong>说明：</strong>方式一鉴权使用的Access_token必须通过API Key和Secret Key获取。</p></blockquote><h2 id=\"0f21131c\">调用方式二</h2><p><strong>请求头域内容</strong></p><p>在请求的HTTP头域中包含以下信息：</p><ul><li>host（必填）</li><li>x-bce-date （必填）</li><li>x-bce-request-id（选填）</li><li>authorization（必填）</li><li>content-type（必填）</li><li>content-length（选填）</li></ul><p>作为示例，以下是一个标准的人脸识别的请求头域内容:</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/rest/2.0/face/v1/detect</span> HTTP/1.1\n<span class=\"hljs-attribute\">accept-encoding</span>: gzip, deflate\n<span class=\"hljs-attribute\">x-bce-date</span>: 2015-03-24T13:02:00Z\n<span class=\"hljs-attribute\">connection</span>: keep-alive\n<span class=\"hljs-attribute\">accept</span>: */*\n<span class=\"hljs-attribute\">host</span>: aip.baidubce.com\n<span class=\"hljs-attribute\">x-bce-request-id</span>: 73c4e74c-3101-4a00-bf44-fe246959c05e\n<span class=\"hljs-attribute\">content-type</span>: application/x-www-form-urlencoded\n<span class=\"hljs-attribute\">authorization</span>: bce-auth-v1/46bd9968a6194b4bbdf0341f2286ccce/2015-03-24T13:02:00Z/1800/host;x-bce-date/994014d96b0eb26578e039fa053a4f9003425da4bfedf33f4790882fb4c54903</code>\n</pre><blockquote><p><strong>说明：</strong>方式二鉴权使用的<a href=\"https://cloud.baidu.com/doc/Reference/AuthenticationMechanism.html\" target=\"_blank\">API认证机制</a>，authorization必须通过百度云的<a href=\"https://cloud.baidu.com/doc/Reference/GetAKSK.html\" target=\"_blank\">AK/SK</a>生成。</p></blockquote><h1 id=\"05bbd976\">色情识别</h1><h2 id=\"5d188987\">接口描述</h2><p>该请求用于鉴定图片的色情度。即对于输入的一张图片（可正常解码，且长宽比适宜），输出图片的色情度。目前支持三个维度：色情、性感、正常。</p><h2 id=\"49bcdde8\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP 方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/antiporn/</span>v1<span class=\"hljs-regexp\">/detect</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#Beginner-Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>类型</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>string</td><td>是</td><td>图像数据，base64编码</td></tr></tbody></table><p><strong>请求示例代码</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">C++</div><div class=\"code-block-title\" data-index=\"1\">C#</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">PHP</div><div class=\"code-block-title\" data-index=\"4\">Python</div><div class=\"code-block-title\" data-index=\"5\">Bash</div></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/property_tree/ptree.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/property_tree/json_parser.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/date_time.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"antiporn.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">// 黄反接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> antiporn_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/antiporn/v1/detect\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> antiporn_result;\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    antiporn_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n<span class=\"hljs-comment\">/**\n * 调用黄反接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param image_base64 以string格式传递的base64编码的图像数据（注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">antiporn_detect</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;image_base64, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = antiporn_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"image\"</span>, CURLFORM_COPYCONTENTS, image_base64.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = antiporn_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Detect</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 黄反识别</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">detect</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>\n\t\t\t<span class=\"hljs-keyword\">string</span> strbaser64 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/ocr/general.jpeg\"</span>); <span class=\"hljs-comment\">// 图片的base64编码</span>\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/antiporn/v1/detect?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"image=\"</span> + HttpUtility.UrlEncode(strbaser64);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"黄反识别:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.antiporn;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * 黄反识别服务\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Detect</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 重要提示代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://github.com/Baidu-AIP/Demo/blob/master/java/com/baidu/ai/aip/utils/FileUtil.java\n     * https://github.com/Baidu-AIP/Demo/blob/master/java/com/baidu/ai/aip/utils/Base64Util.java\n     * https://github.com/Baidu-AIP/Demo/blob/master/java/com/baidu/ai/aip/utils/HttpUtil.java\n     * 下载\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 黄反识别url</span>\n        String detectUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/antiporn/v1/detect\"</span>;\n        <span class=\"hljs-comment\">// 本地文件路径</span>\n        String filePath = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">byte</span>[] imgData = FileUtil.readFileByBytes(filePath);\n            String imgStr = Base64Util.encode(imgData);\n            String params = URLEncoder.encode(<span class=\"hljs-string\">\"image\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>) + <span class=\"hljs-string\">\"=\"</span> + URLEncoder.encode(imgStr, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(detectUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/antiporn/v1/detect?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"image\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n黄反识别接口\n'''</span>\n\ndetectUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/antiporn/v1/detect\"</span>\n<span class=\"hljs-comment\"># 参数image：图像base64编码</span>\nparams = {<span class=\"hljs-string\">\"image\"</span>: <span class=\"hljs-string\">\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\ndetectUrl = detectUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=detectUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"Bash\"><pre><code class=\"hljs\">黄反识别接口\ncurl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/antiporn/v1/detect?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"image\":\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div></div><h2 id=\"74495526\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>类型</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>result_num</td><td>uint32</td><td>是</td><td>返回结果数目，即：result数组中元素个数。</td></tr><tr><td>result</td><td>array(array(double))</td><td>是</td><td>结果数组，每项内容对应一个分类维度的结果。</td></tr><tr><td>log_id</td><td>uint64</td><td>是</td><td>请求标识码，随机数，唯一。</td></tr></tbody></table><p>其中元素的每项内容包含以下字段：</p><table><thead><tr><th>字段</th><th>类型</th><th>是否必须</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>class_name</td><td>string</td><td>是</td><td>分类结果名称</td><td>色情</td></tr><tr><td>probability</td><td>double</td><td>是</td><td>分类结果置信度</td><td>0.89471650123596</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">resul<span class=\"hljs-variable\">t:</span> [\n    {<span class=\"hljs-string\">\"class_name\"</span>: <span class=\"hljs-string\">\"色情\"</span>, <span class=\"hljs-string\">\"\"</span>probability<span class=\"hljs-comment\">\": 0.014619}，</span>\n    {<span class=\"hljs-string\">\"class_name\"</span>: <span class=\"hljs-string\">\"正常\"</span>, <span class=\"hljs-string\">\"\"</span>probability<span class=\"hljs-comment\">\": 0.171783}，</span>\n    {<span class=\"hljs-string\">\"class_name\"</span>: <span class=\"hljs-string\">\"性感\"</span>, <span class=\"hljs-string\">\"\"</span>probability<span class=\"hljs-comment\">\": 0.813598}</span>\n    ]</code>\n</pre><h1 id=\"50d8252d\">GIF色情图像识别</h1><h2 id=\"a5f8d344\">接口描述</h2><p>该请求用于鉴定GIF图片的色情度，对于非gif接口，请使用<a href=\"#%E9%BB%84%E5%8F%8D%E8%AF%86%E5%88%AB\" target=\"_blank\">黄反识别接口</a>。接口会对图片中每一帧进行识别，并返回所有检测结果中色情值最大的为结果。目前支持三个维度：色情、性感、正常。</p><h2 id=\"2e5d7786\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP 方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/antiporn/</span>v1<span class=\"hljs-regexp\">/detect_gif</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#Beginner-Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>类型</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>string</td><td>是</td><td>图像数据，base64编码。</td></tr></tbody></table><p><strong>请求示例代码</strong></p><p>请参考色情识别的代码内容。</p><p><strong>访问限制</strong></p><table><thead><tr><th>检查项</th><th>限制条件</th></tr></thead><tbody><tr><td>图片格式</td><td>gif</td></tr><tr><td>每帧编码后大小</td><td>&lt; 4M</td></tr><tr><td>帧数</td><td>不超过50</td></tr><tr><td>GIF图片整体大小</td><td>base64编码后不超过20M</td></tr></tbody></table><h2 id=\"8199ff25\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">是否必选</th><th style=\"text-align:left\">描述</th></tr></thead><tbody><tr><td style=\"text-align:left\">log_id</td><td style=\"text-align:left\">uint64</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">请求标识码，随机数，唯一</td></tr><tr><td style=\"text-align:left\">frame_count</td><td style=\"text-align:left\">uint64</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">gif总帧数</td></tr><tr><td style=\"text-align:left\">porn_probability</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">色情识别置信度</td></tr><tr><td style=\"text-align:left\">result_num</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">返回结果数目，即：result数组中元素个数</td></tr><tr><td style=\"text-align:left\">result</td><td style=\"text-align:left\">Array[Object]</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">结果数组，每项内容对应一个分类维度的结果</td></tr><tr><td style=\"text-align:left\">+class_name</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">分类结果名称，示例：色情</td></tr><tr><td style=\"text-align:left\">+probability</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">分类结果置信度，示例：0.89471650123596</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n   <span class=\"hljs-attr\">\"frame_count\"</span>:<span class=\"hljs-number\">9</span>,\n   <span class=\"hljs-attr\">\"result\"</span>:[\n      {\n         <span class=\"hljs-attr\">\"probability\"</span>:<span class=\"hljs-number\">0.006611</span>,\n         <span class=\"hljs-attr\">\"class_name\"</span>:<span class=\"hljs-string\">\"色情\"</span>\n      },\n      {\n         <span class=\"hljs-attr\">\"probability\"</span>:<span class=\"hljs-number\">0.100528</span>,\n         <span class=\"hljs-attr\">\"class_name\"</span>:<span class=\"hljs-string\">\"性感\"</span>\n      },\n      {\n         <span class=\"hljs-attr\">\"probability\"</span>:<span class=\"hljs-number\">0.89286</span>,\n         <span class=\"hljs-attr\">\"class_name\"</span>:<span class=\"hljs-string\">\"正常\"</span>\n      }\n   ],\n   <span class=\"hljs-attr\">\"result_num\"</span>:<span class=\"hljs-number\">3</span>,\n   <span class=\"hljs-attr\">\"porn_probability\"</span>:<span class=\"hljs-number\">0.006611</span>,\n   <span class=\"hljs-attr\">\"logid\"</span>:<span class=\"hljs-number\">616892616</span>\n}</code>\n</pre><h1 id=\"6516d077\">错误码</h1><p>若请求错误，服务器将返回的JSON文本包含以下参数：</p><ul><li><p><strong>error_code：</strong>错误码。</p></li><li><p><strong>error_msg：</strong>错误描述信息，帮助理解和解决发生的错误。</p></li></ul><p>例如Access Token失效返回：</p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"error_code\"</span>: <span class=\"hljs-number\">110</span>,\n  <span class=\"hljs-attr\">\"error_msg\"</span>: <span class=\"hljs-string\">\"Access token invalid or no longer valid\"</span>\n}</code>\n</pre><p>需要重新获取新的Access Token再次请求即可。</p><table><thead><tr><th>错误码</th><th>错误信息</th><th>描述</th></tr></thead><tbody><tr><td>4</td><td>Open api request limit reached</td><td>集群超限额</td></tr><tr><td>17</td><td>Open api daily request limit reached</td><td>每天流量超限额</td></tr><tr><td>18</td><td>Open api qps request limit reached</td><td>QPS超限额</td></tr><tr><td>19</td><td>Open api total request limit reached</td><td>请求总量超限额</td></tr><tr><td>100</td><td>Invalid parameter</td><td>无效参数</td></tr><tr><td>110</td><td>Access token invalid or no longer valid</td><td>Access Token失效</td></tr><tr><td>111</td><td>Access token expired</td><td>Access token过期</td></tr><tr><td>216015</td><td>module closed</td><td>模块关闭</td></tr><tr><td>216100</td><td>invalid param</td><td>非法参数</td></tr><tr><td>216101</td><td>not enough param</td><td>参数数量不够</td></tr><tr><td>216102</td><td>service not support</td><td>业务不支持</td></tr><tr><td>216103</td><td>param too long</td><td>参数太长</td></tr><tr><td>216110</td><td>appid not exist</td><td>APP ID不存在</td></tr><tr><td>216111</td><td>invalid userid</td><td>非法用户ID</td></tr><tr><td>216200</td><td>empty image</td><td>空的图片</td></tr><tr><td>216201</td><td>image format error</td><td>图片格式错误</td></tr><tr><td>216202</td><td>image size error</td><td>图片大小错误</td></tr><tr><td>216300</td><td>db error</td><td>DB错误</td></tr><tr><td>216400</td><td>backend error</td><td>后端系统错误</td></tr><tr><td>216401</td><td>internal error</td><td>内部错误</td></tr><tr><td>216500</td><td>unknown error</td><td>未知错误</td></tr><tr><td>282000</td><td>logic internal error</td><td>业务逻辑层内部错误</td></tr><tr><td>282001</td><td>logic backend error</td><td>业务逻辑层后端服务错误</td></tr><tr><td>282202</td><td>antiporn detect timeout</td><td>检测超时</td></tr><tr><td>282203</td><td>image frame size error</td><td>gif单帧大小超限</td></tr><tr><td>282204</td><td>image frames limit error</td><td>gif总帧数超限</td></tr><tr><td>282205</td><td>image fromat must gif</td><td>图片格式错误</td></tr></tbody></table>",
  "headings": [
    {
      "level": 1,
      "text": "简介",
      "id": "67427582"
    },
    {
      "level": 2,
      "text": "接口能力",
      "id": "b705a5a1"
    },
    {
      "level": 2,
      "text": "请求格式",
      "id": "1d5d480b"
    },
    {
      "level": 2,
      "text": "返回格式",
      "id": "83f92f29"
    },
    {
      "level": 2,
      "text": "请求限制",
      "id": "6dd76d2a"
    },
    {
      "level": 1,
      "text": "调用方式",
      "id": "ecfe2e4c"
    },
    {
      "level": 2,
      "text": "调用方式一",
      "id": "f095e81d"
    },
    {
      "level": 2,
      "text": "调用方式二",
      "id": "0f21131c"
    },
    {
      "level": 1,
      "text": "色情识别",
      "id": "05bbd976"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "5d188987"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "49bcdde8"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "74495526"
    },
    {
      "level": 1,
      "text": "GIF色情图像识别",
      "id": "50d8252d"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "a5f8d344"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "2e5d7786"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "8199ff25"
    },
    {
      "level": 1,
      "text": "错误码",
      "id": "6516d077"
    }
  ]
}
