{
  "html": "<h1 id=\"6e12bec2\">Python SDK文档</h1><p>本文档主要介绍人脸识别Python SDK的使用，在使用前请先确保已创建应用并具有相应权限。</p><h1 id=\"d2b1e06c\">安装Python SDK</h1><p><strong>Python SDK目录结构</strong></p><pre>\n<code class=\"hljs\" lang=\"\">    ├── README<span class=\"hljs-selector-class\">.md</span>\n    ├── aip                 <span class=\"hljs-comment\">//SDK目录</span>\n    │   ├── __init__<span class=\"hljs-selector-class\">.py</span>     <span class=\"hljs-comment\">//导出类</span>\n    │   ├── antiporn<span class=\"hljs-selector-class\">.py</span>     <span class=\"hljs-comment\">//黄反识别</span>\n    │   ├── base<span class=\"hljs-selector-class\">.py</span>         <span class=\"hljs-comment\">//aip基类</span>\n    │   ├── face<span class=\"hljs-selector-class\">.py</span>         <span class=\"hljs-comment\">//人脸识别</span>\n    │   ├── http<span class=\"hljs-selector-class\">.py</span>         <span class=\"hljs-comment\">//http请求</span>\n    │   ├── nlp<span class=\"hljs-selector-class\">.py</span>          <span class=\"hljs-comment\">//nlp自然语言处理</span>\n    │   └── ocr<span class=\"hljs-selector-class\">.py</span>          <span class=\"hljs-comment\">//OCR图像识别</span>\n    ├── doc                 <span class=\"hljs-comment\">//使用文档</span>\n    │   ├── antiporn<span class=\"hljs-selector-class\">.md</span>\n    │   ├── face<span class=\"hljs-selector-class\">.md</span>\n    │   ├── nlp<span class=\"hljs-selector-class\">.md</span>\n    │   └── ocr<span class=\"hljs-selector-class\">.md</span>\n    └── setup<span class=\"hljs-selector-class\">.py</span>            <span class=\"hljs-comment\">//setuptools安装</span></code>\n</pre><p><strong>支持 Python版本：2.7.+ ,3.+</strong></p><p><strong>安装使用SDK有如下方式：</strong></p><ul><li>如果已安装pip，执行<code>pip <span class=\"hljs-keyword\">install</span> baidu-aip</code>即可。</li><li>如果已安装setuptools，执行<code>python setup<span class=\"hljs-selector-class\">.py</span> install</code>即可。</li></ul><h1 id=\"3ebe14ea\">快速入门</h1><h2 id=\"68c3c1a9\">初始化一个AipFace对象</h2><p>AipFace类提供给开发者一系列人脸识别的方法，参考如下代码新建一个AipFace对象：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-meta\"># 引入人脸识别 SDK</span>\nfrom aip import AipFace\n\n<span class=\"hljs-meta\"># 定义常量</span>\nAPP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\nAPI_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\nSECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n<span class=\"hljs-meta\"># 初始化AipFace对象</span>\naipFace = AipFace(APP_ID, API_KEY, SECRET_KEY)</code>\n</pre><p>在上面代码中，常量<code>APP_ID</code>在百度云控制台中创建，常量<code>API_KEY</code>与<code>SECRET_KEY</code>是由系统分配给用户的，均为字符串，用于标识用户，为访问服务做签名验证。获取方式请参考<a href=\"../Reference/GetAKSK\" target=\"_blank\">获取AK/SK</a>。</p><h2 id=\"d2cb93b2\">配置AipFace</h2><p>如果用户需要配置AipFace的一些细节参数(一般不需要配置)，可以在构造AipFace之后调用接口设置参数，目前只支持以下参数：</p><table><thead><tr><th>接口</th><th>说明</th></tr></thead><tbody><tr><td>setConnectionTimeoutInMillis</td><td>建立连接的超时时间（单位：毫秒</td></tr><tr><td>setSocketTimeoutInMillis</td><td>通过打开的连接传输数据的超时时间（单位：毫秒）</td></tr></tbody></table><h1 id=\"4235e020\">错误信息格式</h1><p>若请求错误，服务器将返回的JSON文本包含以下参数：</p><ul><li><strong>error_code：</strong>错误码；关于错误码的详细信息请参考<strong>通用错误码</strong>和<strong>业务相关错误码</strong>。</li><li><strong>error_msg：</strong>错误描述信息，帮助理解和解决发生的错误。</li></ul><p><strong>SDK本地检测参数返回的错误码</strong>：</p><table><thead><tr><th>error_code</th><th>error_msg</th><th>备注</th></tr></thead><tbody><tr><td>SDK100</td><td>image size error</td><td>图片大小超限</td></tr><tr><td>SDK101</td><td>image length error</td><td>图片边长不符合要求</td></tr><tr><td>SDK102</td><td>read image file error</td><td>读取图片文件错误</td></tr><tr><td>SDK103</td><td>user_info size error</td><td>user_info参数大小错误</td></tr><tr><td>SDK104</td><td>group_id format error</td><td>group_id有非法字符</td></tr><tr><td>SDK105</td><td>group_id size error</td><td>group_id参数大小错误</td></tr><tr><td>SDK106</td><td>uid format error</td><td>uid有非法字符</td></tr><tr><td>SDK107</td><td>uid size error</td><td>uid参数大小错误</td></tr><tr><td>SDK108</td><td>connection or read data time out</td><td>连接超时或读取数据超时</td></tr><tr><td>SDK109</td><td>unsupported image format</td><td>不支持的图片格式</td></tr></tbody></table><p><strong>服务端返回的错误码</strong></p><table><thead><tr><th>错误码</th><th>错误信息</th><th>描述</th></tr></thead><tbody><tr><td>216015</td><td>module closed</td><td>模块关闭</td></tr><tr><td>216100</td><td>invalid param</td><td>非法参数</td></tr><tr><td>216101</td><td>not enough param</td><td>参数数量不够</td></tr><tr><td>216102</td><td>service not support</td><td>业务不支持</td></tr><tr><td>216103</td><td>param too long</td><td>参数太长</td></tr><tr><td>216110</td><td>appid not exist</td><td>APP ID不存在</td></tr><tr><td>216111</td><td>invalid userid</td><td>非法用户ID</td></tr><tr><td>216200</td><td>empty image</td><td>空的图片</td></tr><tr><td>216201</td><td>image format error</td><td>图片格式错误</td></tr><tr><td>216202</td><td>image size error</td><td>图片大小错误</td></tr><tr><td>216300</td><td>db error</td><td>DB错误</td></tr><tr><td>216400</td><td>backend error</td><td>后端系统错误</td></tr><tr><td>216401</td><td>internal error</td><td>内部错误</td></tr><tr><td>216402</td><td>face not found</td><td>没有找到人脸</td></tr><tr><td>216500</td><td>unknown error</td><td>未知错误</td></tr><tr><td>216611</td><td>user not exist</td><td>用户不存在</td></tr><tr><td>216613</td><td>user not found</td><td>用户查找不到</td></tr><tr><td>216614</td><td>not enough images</td><td>图片信息不完整</td></tr><tr><td>216615</td><td>fail to process images</td><td>处理图片信息失败</td></tr><tr><td>216616</td><td>image existed</td><td>图片已存在</td></tr><tr><td>216617</td><td>fail to add user</td><td>添加用户失败</td></tr><tr><td>216618</td><td>no user in group</td><td>群组里没有用户</td></tr><tr><td>216630</td><td>recognize error</td><td>识别错误</td></tr></tbody></table><h1 id=\"a97bc6ee\">人脸属性检测</h1><p>基于百度业界领先的智能人脸分析算法，提供人脸检测、人脸识别、关键点定位、属性识别和活体检测等。</p><p>对一张图片进行人脸属性检测，示例代码如下：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\"># 引入人脸识别 SDK</span>\n<span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipFace\n\n<span class=\"hljs-comment\"># 定义常量</span>\nAPP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\nAPI_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\nSECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n<span class=\"hljs-comment\"># 初始化AipFace对象</span>\naipFace = AipFace(APP_ID, API_KEY, SECRET_KEY)\n\n<span class=\"hljs-comment\"># 读取图片</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n    <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n        <span class=\"hljs-keyword\">return</span> fp.read()\n\n<span class=\"hljs-comment\"># 调用人脸属性检测接口</span>\nresult = aipFace.detect(get_file_content(<span class=\"hljs-string\">'face.jpg'</span>))</code>\n</pre><p>增加一些自定义参数：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\"># 引入人脸识别 SDK</span>\n<span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipFace\n\n<span class=\"hljs-comment\"># 定义常量</span>\nAPP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\nAPI_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\nSECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n<span class=\"hljs-comment\"># 初始化AipFace对象</span>\naipFace = AipFace(APP_ID, API_KEY, SECRET_KEY)\n\n<span class=\"hljs-comment\"># 读取图片</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n    <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n        <span class=\"hljs-keyword\">return</span> fp.read()\n\n<span class=\"hljs-comment\"># 定义参数变量</span>\noptions = {\n    <span class=\"hljs-string\">'max_face_num'</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-string\">'face_fields'</span>: <span class=\"hljs-string\">\"age,beauty,expression,faceshape\"</span>,\n}\n\n<span class=\"hljs-comment\"># 调用人脸属性识别接口</span>\nresult = aipFace.detect(get_file_content(<span class=\"hljs-string\">'face.jpg'</span>), options)</code>\n</pre><p><strong>人脸属性 请求参数详情</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">描述</th><th style=\"text-align:left\">是否必须</th></tr></thead><tbody><tr><td style=\"text-align:left\">face_fields</td><td style=\"text-align:left\">Boolean</td><td style=\"text-align:left\">包括age、beauty、expression、faceshape、gender、glasses、landmark、race、qualities信息，逗号分隔，默认只返回人脸框、概率和旋转角度。</td><td style=\"text-align:left\">否</td></tr><tr><td style=\"text-align:left\">max_face_num</td><td style=\"text-align:left\">最多处理人脸数目，默认值1</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:left\">image</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">图像数据，仅支持图像文件流</td><td style=\"text-align:left\">是</td></tr></tbody></table><p><strong>人脸属性 返回数据参数详情</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">是否一定输出</th><th style=\"text-align:left\">描述</th></tr></thead><tbody><tr><td style=\"text-align:left\">log_id</td><td style=\"text-align:left\">uint64</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">日志id</td></tr><tr><td style=\"text-align:left\">result_num</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">人脸数目</td></tr><tr><td style=\"text-align:left\">result</td><td style=\"text-align:left\">object[]</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">人脸属性对象的集合</td></tr><tr><td style=\"text-align:left\">+age</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">年龄。face_fields包含age时返回</td></tr><tr><td style=\"text-align:left\">+beauty</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">美丑打分，范围0-1，越大表示越美。face_fields包含beauty时返回</td></tr><tr><td style=\"text-align:left\">+location</td><td style=\"text-align:left\">object</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">人脸在图片中的位置</td></tr><tr><td style=\"text-align:left\">++left</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">人脸区域离左边界的距离</td></tr><tr><td style=\"text-align:left\">++top</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">人脸区域离上边界的距离</td></tr><tr><td style=\"text-align:left\">++width</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">人脸区域的宽度</td></tr><tr><td style=\"text-align:left\">++height</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">人脸区域的高度</td></tr><tr><td style=\"text-align:left\">+face_probability</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">人脸置信度，范围0-1</td></tr><tr><td style=\"text-align:left\">+rotation_angle</td><td style=\"text-align:left\">int32</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">人脸框相对于竖直方向的顺时针旋转角，[-180,180]</td></tr><tr><td style=\"text-align:left\">+yaw</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">三维旋转之左右旋转角[-90(左), 90(右)]</td></tr><tr><td style=\"text-align:left\">+pitch</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">三维旋转之俯仰角度[-90(上), 90(下)]</td></tr><tr><td style=\"text-align:left\">+roll</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">平面内旋转角[-180(逆时针), 180(顺时针)]</td></tr><tr><td style=\"text-align:left\">+expression</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">表情，0，不笑；1，微笑；2，大笑。face_fields包含expression时返回</td></tr><tr><td style=\"text-align:left\">+expression_probability</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">表情置信度，范围0~1。face_fields包含expression时返回</td></tr><tr><td style=\"text-align:left\">+faceshape</td><td style=\"text-align:left\">object[]</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">脸型置信度。face_fields包含faceshape时返回</td></tr><tr><td style=\"text-align:left\">++type</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">脸型：square/triangle/oval/heart/round</td></tr><tr><td style=\"text-align:left\">++probability</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">置信度：0~1</td></tr><tr><td style=\"text-align:left\">+gender</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">male、female。face_fields包含gender时返回</td></tr><tr><td style=\"text-align:left\">+gender_probability</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">性别置信度，范围0~1。face_fields包含gender时返回</td></tr><tr><td style=\"text-align:left\">+glasses</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">是否带眼镜，0-无眼镜，1-普通眼镜，2-墨镜。face_fields包含glasses时返回</td></tr><tr><td style=\"text-align:left\">+glasses_probability</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">眼镜置信度，范围0~1。face_fields包含glasses时返回</td></tr><tr><td style=\"text-align:left\">+landmark</td><td style=\"text-align:left\">object[]</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">4个关键点位置，左眼中心、右眼中心、鼻尖、嘴中心。face_fields包含landmark时返回</td></tr><tr><td style=\"text-align:left\">++x</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">x坐标</td></tr><tr><td style=\"text-align:left\">++y</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">y坐标</td></tr><tr><td style=\"text-align:left\">+landmark72</td><td style=\"text-align:left\">object[]</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">72个特征点位置，示例图 。face_fields包含landmark时返回</td></tr><tr><td style=\"text-align:left\">++x</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">x坐标</td></tr><tr><td style=\"text-align:left\">++y</td><td style=\"text-align:left\">Int</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">y坐标</td></tr><tr><td style=\"text-align:left\">+race</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">yellow、white、black、arabs。face_fields包含race时返回</td></tr><tr><td style=\"text-align:left\">+race_probability</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">人种置信度，范围0~1。face_fields包含race时返回</td></tr><tr><td style=\"text-align:left\">+qualities</td><td style=\"text-align:left\">object</td><td style=\"text-align:left\">否</td><td style=\"text-align:left\">人脸质量信息。face_fields包含qualities时返回</td></tr><tr><td style=\"text-align:left\">++occlusion</td><td style=\"text-align:left\">object</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">人脸各部分遮挡的概率， [0, 1] （待上线）</td></tr><tr><td style=\"text-align:left\">+++left_eye</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">左眼</td></tr><tr><td style=\"text-align:left\">+++right_eye</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">右眼</td></tr><tr><td style=\"text-align:left\">+++nose</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">鼻子</td></tr><tr><td style=\"text-align:left\">+++mouth</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">嘴</td></tr><tr><td style=\"text-align:left\">+++left_cheek</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">左脸颊</td></tr><tr><td style=\"text-align:left\">+++right_cheek</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">右脸颊</td></tr><tr><td style=\"text-align:left\">+++chin</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">下巴</td></tr><tr><td style=\"text-align:left\">++type</td><td style=\"text-align:left\">object</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">真实人脸/卡通人脸置信度</td></tr><tr><td style=\"text-align:left\">+++human</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">真实人脸置信度，[0, 1]</td></tr><tr><td style=\"text-align:left\">+++cartoon</td><td style=\"text-align:left\">double</td><td style=\"text-align:left\">是</td><td style=\"text-align:left\">卡通人脸置信度，[0, 1]</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"result_num\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"result\"</span>: [\n        {\n            <span class=\"hljs-attr\">\"location\"</span>: {\n                <span class=\"hljs-attr\">\"left\"</span>: <span class=\"hljs-number\">90</span>,\n                <span class=\"hljs-attr\">\"top\"</span>: <span class=\"hljs-number\">92</span>,\n                <span class=\"hljs-attr\">\"width\"</span>: <span class=\"hljs-number\">111</span>,\n                <span class=\"hljs-attr\">\"height\"</span>: <span class=\"hljs-number\">99</span>\n            },\n            <span class=\"hljs-attr\">\"face_probability\"</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">\"rotation_angle\"</span>: <span class=\"hljs-number\">6</span>,\n            <span class=\"hljs-attr\">\"yaw\"</span>: <span class=\"hljs-number\">11.61234664917</span>,\n            <span class=\"hljs-attr\">\"pitch\"</span>: <span class=\"hljs-number\">-0.30852827429771</span>,\n            <span class=\"hljs-attr\">\"roll\"</span>: <span class=\"hljs-number\">8.8044967651367</span>,\n            <span class=\"hljs-attr\">\"landmark\"</span>: [\n                {\n                    <span class=\"hljs-attr\">\"x\"</span>: <span class=\"hljs-number\">105</span>,\n                    <span class=\"hljs-attr\">\"y\"</span>: <span class=\"hljs-number\">110</span>\n                },\n              ...\n            ],\n            <span class=\"hljs-attr\">\"landmark72\"</span>: [\n                {\n                    <span class=\"hljs-attr\">\"x\"</span>: <span class=\"hljs-number\">88</span>,\n                    <span class=\"hljs-attr\">\"y\"</span>: <span class=\"hljs-number\">109</span>\n                },\n               ...\n            ],\n            <span class=\"hljs-attr\">\"gender\"</span>: <span class=\"hljs-string\">\"male\"</span>,\n            <span class=\"hljs-attr\">\"gender_probability\"</span>: <span class=\"hljs-number\">0.99358034133911</span>,\n            <span class=\"hljs-attr\">\"glasses\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">\"glasses_probability\"</span>: <span class=\"hljs-number\">0.99991309642792</span>,\n            <span class=\"hljs-attr\">\"race\"</span>: <span class=\"hljs-string\">\"yellow\"</span>,\n            <span class=\"hljs-attr\">\"race_probability\"</span>: <span class=\"hljs-number\">0.99960690736771</span>,\n            <span class=\"hljs-attr\">\"qualities\"</span>: {\n                <span class=\"hljs-attr\">\"occlusion\"</span>: {\n                    <span class=\"hljs-attr\">\"left_eye\"</span>: <span class=\"hljs-number\">0.000085282314103097</span>,\n                    <span class=\"hljs-attr\">\"right_eye\"</span>: <span class=\"hljs-number\">0.00001094374601962</span>,\n                    <span class=\"hljs-attr\">\"nose\"</span>: <span class=\"hljs-number\">3.2677664307812e-7</span>,\n                    <span class=\"hljs-attr\">\"mouth\"</span>: <span class=\"hljs-number\">2.6582130940866e-10</span>,\n                    <span class=\"hljs-attr\">\"left_cheek\"</span>: <span class=\"hljs-number\">8.752236624332e-8</span>,\n                    <span class=\"hljs-attr\">\"right_cheek\"</span>: <span class=\"hljs-number\">1.0212766454742e-7</span>,\n                    <span class=\"hljs-attr\">\"chin\"</span>: <span class=\"hljs-number\">4.2632994357028e-10</span>\n                },\n                <span class=\"hljs-attr\">\"blur\"</span>: <span class=\"hljs-number\">4.5613666312237e-41</span>,\n                <span class=\"hljs-attr\">\"illumination\"</span>: <span class=\"hljs-number\">0</span>,\n                <span class=\"hljs-attr\">\"completeness\"</span>: <span class=\"hljs-number\">0</span>,\n                <span class=\"hljs-attr\">\"type\"</span>: {\n                    <span class=\"hljs-attr\">\"human\"</span>: <span class=\"hljs-number\">0.98398965597153</span>,\n                    <span class=\"hljs-attr\">\"cartoon\"</span>: <span class=\"hljs-number\">0.016010366380215</span>\n                }\n            }\n        }\n    ],\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">2418894422</span>\n}</code>\n</pre><h1 id=\"c4761fc8\">人脸两两比对</h1><p>人脸比对接口提供了对上传图片进行两两比对，并输出相似度得分的功能。</p><p>举例，要对一组人脸图片进行两两比对，示例代码如下：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\"># 引入人脸识别 SDK</span>\n<span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipFace\n\n<span class=\"hljs-comment\"># 定义常量</span>\nAPP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\nAPI_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\nSECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n<span class=\"hljs-comment\"># 读取图片</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n    <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n        <span class=\"hljs-keyword\">return</span> fp.read()\n\n<span class=\"hljs-comment\"># 初始化AipFace对象</span>\naipFace = AipFace(APP_ID, API_KEY, SECRET_KEY)\n\n<span class=\"hljs-comment\"># 调用人脸两两比对接口</span>\nresult = aipFace.match([\n    get_file_content(<span class=\"hljs-string\">'face1.jpg'</span>),\n    get_file_content(<span class=\"hljs-string\">'face2.jpg'</span>),\n    get_file_content(<span class=\"hljs-string\">'face3.jpg'</span>),\n])</code>\n</pre><p><strong>人脸比对请求参数要求</strong>：</p><p>​ 所有图片经base64编码后的图片数据总和不超过10M。</p><p><strong>人脸比对返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result_num</td><td>是</td><td>uint32</td><td>返回结果数目，即：result数组中元素个数</td></tr><tr><td>result</td><td>是</td><td>array(object)</td><td>结果数据，index和请求图片index对应。数组元素为每张图片的匹配得分数组，top n。 得分[0,100.0]</td></tr><tr><td>+index_i</td><td>是</td><td>uint32</td><td>比对图片1的index</td></tr><tr><td>+index_j</td><td>是</td><td>uint32</td><td>比对图片2的index</td></tr><tr><td>+score</td><td>是</td><td>double</td><td>比对得分</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\">// 请求为三张图片 返回组合数 C(<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>) = <span class=\"hljs-number\">3</span>\n// score 为第index_i张人脸图片和第index_j张人脸图片的相似度\n// 如果某张图片未检测到人脸 则该图片不参与比对\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">73473737</span>,\n    <span class=\"hljs-string\">\"result_num\"</span>:<span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-string\">\"result\"</span>: [\n        {\n            <span class=\"hljs-string\">\"index_i\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-string\">\"index_j\"</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-string\">\"score\"</span>: <span class=\"hljs-number\">80.4</span>\n        },\n        {\n            <span class=\"hljs-string\">\"index_i\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-string\">\"index_j\"</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-string\">\"score\"</span>: <span class=\"hljs-number\">89.1</span>\n        },\n        {\n            <span class=\"hljs-string\">\"index_i\"</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-string\">\"index_j\"</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-string\">\"score\"</span>: <span class=\"hljs-number\">87.5</span>\n        }\n    ]\n}</code>\n</pre><h1 id=\"0cc4a465\">人脸查找</h1><h2 id=\"7e4908ae\">人脸注册</h2><p>人脸注册接口提供了使用上传图片进行注册新用户的功能，需要指定注册用户的id和描述信息，所在组id以及本地用户人脸图片。 <strong>注：每个用户（uid）所能注册的最大人脸数量为5张。</strong></p><p>举例，要注册一个新用户，用户id为uid1，加入组id为group1, 注册成功后服务端会返回操作的logid：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\"># 读取图片</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n    <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n        <span class=\"hljs-keyword\">return</span> fp.read()\n\naipFace.addUser(    \n                      <span class=\"hljs-string\">'uid1'</span>, \n                      <span class=\"hljs-string\">'test_user_info'</span>, \n                      <span class=\"hljs-string\">'group1'</span>,\n                      [\n                          get_file_content(<span class=\"hljs-string\">'user.jpg'</span>),\n                      ]\n                 )</code>\n</pre><p><strong>人脸注册请求参数要求</strong>：</p><p>所有图片经base64编码后的图片数据总和不超过10M。</p><p><strong>人脸注册返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 注册成功</span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">73473737</span>,\n}\n<span class=\"hljs-comment\">// 注册发生错误</span>\n{\n  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">216616</span>,\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">674786177</span>,\n  <span class=\"hljs-string\">\"error_msg\"</span>: <span class=\"hljs-string\">\"image exist\"</span>\n}</code>\n</pre><h2 id=\"036a66a9\">人脸更新</h2><p>人脸更新接口提供了为已有用户更新人脸图像的功能，<strong>新上传的图片将覆盖原有图像</strong>。</p><p>举例，要更新一个新用户，用户id为uid1， 更新成功后服务端会返回操作的logid：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\"># 读取图片</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n    <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n        <span class=\"hljs-keyword\">return</span> fp.read()\n\naipFace.updateUser(\n                          <span class=\"hljs-string\">'uid1'</span>, \n                          [\n                            get_file_content(<span class=\"hljs-string\">'newuser.jpg'</span>),\n                        ]\n                    )</code>\n</pre><p><strong>人脸更新请求参数要求</strong></p><p>uid需要在库中已存在，且组成为字母/数字/下划线，长度不超过128B。所有图片经base64编码后的图片数据总和不超过20M。</p><p><strong>人脸注册返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 更新成功</span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">73473737</span>,\n}\n<span class=\"hljs-comment\">// 更新发生错误</span>\n{\n  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">216612</span>,\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">1137508902</span>,\n  <span class=\"hljs-string\">\"error_msg\"</span>: <span class=\"hljs-string\">\"user not exist\"</span>\n}</code>\n</pre><h2 id=\"144e2b1b\">人脸删除</h2><p>人脸删除接口提供了从库中彻底删除一个用户的功能，包括用户所有图像和身份信息，同时也将从各个组中把用户删除。</p><p>举例，要删除一个新用户，用户id为uid1， 删除成功后服务端会返回操作的logid：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-selector-tag\">aipFace</span><span class=\"hljs-selector-class\">.deleteUser</span>(<span class=\"hljs-string\">'uid1'</span>)</code>\n</pre><p><strong>人脸删除请求参数要求</strong>：</p><p>uid需要在库中已存在，且组成为字母/数字/下划线，长度不超过128B。</p><p><strong>人脸删除返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 更新成功</span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">73473737</span>,\n}\n<span class=\"hljs-comment\">// 更新发生错误</span>\n{\n  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">216612</span>,\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">1137508902</span>,\n  <span class=\"hljs-string\">\"error_msg\"</span>: <span class=\"hljs-string\">\"user not exist\"</span>\n}</code>\n</pre><h2 id=\"d72aa95e\">人脸认证</h2><p>人脸认证接口用于识别上传的图片是否为指定用户。</p><p>举例，要认证一些图片是否为uid1的用户：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\"># 该参数如果不填则使用默认值</span>\noptions = {\n    <span class=\"hljs-string\">'top_num'</span>: <span class=\"hljs-number\">1</span>,\n}\n\n<span class=\"hljs-comment\"># 读取图片</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n    <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n        <span class=\"hljs-keyword\">return</span> fp.read()\n\naipFace.verifyUser(\n                          <span class=\"hljs-string\">'uid1'</span>,\n                          [\n                              get_file_content(<span class=\"hljs-string\">'user.jpg'</span>),  \n                        ],\n                        options\n                    )</code>\n</pre><p><strong>人脸认证参数详情</strong>：</p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>uid</td><td>是</td><td>string</td><td>用户id（由数字、字母、下划线组成），长度限制128B</td></tr><tr><td>images</td><td>是</td><td>string</td><td>图像base64编码,多张图片半角逗号分隔，总共最大10M</td></tr><tr><td>top_num</td><td>否</td><td>uint32</td><td>返回匹配得分top数，默认为1</td></tr></tbody></table><p><strong>人脸认证返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result_num</td><td>是</td><td>uint32</td><td>返回结果数目，即：result数组中元素个数</td></tr><tr><td>result</td><td>是</td><td>array(double)</td><td>结果数组，数组元素为匹配得分，top n。 得分范围[0,100.0]。得分超过80可认为认证成功</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"results\"</span>: [\n    <span class=\"hljs-number\">93.86580657959</span>,\n    <span class=\"hljs-number\">92.237548828125</span>\n  ],\n  <span class=\"hljs-attr\">\"result_num\"</span>: <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">1629483134</span>\n}</code>\n</pre><h2 id=\"a19c048a\">人脸识别</h2><p>人脸识别接口用于计算指定组内用户与上传图像的相似度。</p><p>举例，要计算一些图片与指定组内各用户相似度：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\"># 该参数如果不填则使用默认值</span>\noptions = {\n    <span class=\"hljs-string\">'user_top_num'</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-string\">'face_top_num'</span>: <span class=\"hljs-number\">1</span>,\n}\n\n<span class=\"hljs-comment\"># 读取图片</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n    <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n        <span class=\"hljs-keyword\">return</span> fp.read()\n\naipFace.identifyUser(\n                          <span class=\"hljs-string\">'group1'</span>,\n                          [\n                              get_file_content(<span class=\"hljs-string\">'user.jpg'</span>),  \n                        ],\n                        options\n                    )</code>\n</pre><p><strong>人脸识别参数详情</strong>：</p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>group_id</td><td>是</td><td>string</td><td>用户组id（由数字、字母、下划线组成），长度限制128B</td></tr><tr><td>images</td><td>是</td><td>string</td><td>图像base64编码,多张图片半角逗号分隔，总共最大10M</td></tr><tr><td>user_top_num</td><td>否</td><td>uint32</td><td>返回用户top数，默认为1</td></tr><tr><td>face_top_num</td><td>否</td><td>uint32</td><td>单用户人脸匹配得分top数，默认为1</td></tr></tbody></table><p><strong>人脸识别返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result_num</td><td>是</td><td>uint32</td><td>返回结果数目，即：result数组中元素个数</td></tr><tr><td>result</td><td>是</td><td>array(double)</td><td>结果数组</td></tr><tr><td>+uid</td><td>是</td><td>string</td><td>匹配到的用户id</td></tr><tr><td>+user_info</td><td>是</td><td>string</td><td>注册时的用户信息</td></tr><tr><td>+scores</td><td>是</td><td>array(double)</td><td>结果数组，数组元素为匹配得分，top n。 得分[0,100.0]</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">73473737</span>,\n    <span class=\"hljs-attr\">\"result_num\"</span>:<span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"result\"</span>: [\n        {\n            <span class=\"hljs-attr\">\"uid\"</span>: <span class=\"hljs-string\">\"u333333\"</span>,\n            <span class=\"hljs-attr\">\"user_info\"</span>: <span class=\"hljs-string\">\"Test User\"</span>,\n            <span class=\"hljs-attr\">\"scores\"</span>: [\n                    <span class=\"hljs-number\">99.3</span>,\n                    <span class=\"hljs-number\">83.4</span>\n            ]\n        }\n    ]\n}</code>\n</pre><h2 id=\"2f4c124e\">用户信息查询</h2><p>用户信息查询接口用于查询某用户的详细信息。</p><p>举例，要查询指定用户的信息：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-selector-tag\">aipFace</span><span class=\"hljs-selector-class\">.getUser</span>(<span class=\"hljs-string\">'uid1'</span>)</code>\n</pre><p><strong>用户信息查询请求参数要求</strong>：</p><p>uid需要在库中已存在，且组成为字母/数字/下划线，长度不超过128B。</p><p><strong>用户信息查询返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result</td><td>是</td><td>array(double)</td><td>结果数组</td></tr><tr><td>+uid</td><td>是</td><td>string</td><td>匹配到的用户id</td></tr><tr><td>+user_info</td><td>是</td><td>string</td><td>注册时的用户信息</td></tr><tr><td>+groups</td><td>是</td><td>array(string)</td><td>用户所属组列表</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"result\"</span>: {\n        <span class=\"hljs-attr\">\"uid\"</span>: <span class=\"hljs-string\">\"testuser2\"</span>,\n        <span class=\"hljs-attr\">\"user_info\"</span>: <span class=\"hljs-string\">\"registed user info ...\"</span>,\n        <span class=\"hljs-attr\">\"groups\"</span>: [\n            <span class=\"hljs-string\">\"grp1\"</span>,\n            <span class=\"hljs-string\">\"grp2\"</span>,\n            <span class=\"hljs-string\">\"grp3\"</span>\n        ]\n    },\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">2979357502</span>\n}</code>\n</pre><h2 id=\"6c626d4c\">组列表查询</h2><p>组列表查询接口用于查询一个app下所有组的列表。</p><p>举例：</p><pre>\n<code class=\"hljs\" lang=\"\"># 该参数如果不填则使用默认值\n<span class=\"hljs-keyword\">options</span> = {\n    <span class=\"hljs-string\">'start'</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-string\">'num'</span>: <span class=\"hljs-number\">100</span>,\n}\n\naipFace.getGroupList(<span class=\"hljs-keyword\">options</span>)</code>\n</pre><p><strong>组列表查询请求参数详情</strong>：</p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>start</td><td>否</td><td>uint32</td><td>默认值0，起始序号</td></tr><tr><td>num</td><td>否</td><td>uint32</td><td>返回数量，默认值100，最大值1000</td></tr></tbody></table><p><strong>组列表查询返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result_num</td><td>是</td><td>uint32</td><td>返回个数</td></tr><tr><td>result</td><td>是</td><td>array(string)</td><td>group_id列表</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"result_num\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-attr\">\"result\"</span>: [\n        <span class=\"hljs-string\">\"grp1\"</span>,\n        <span class=\"hljs-string\">\"grp2\"</span>\n    ],\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">3314921889</span>\n}</code>\n</pre><h2 id=\"16ac08d7\">组内用户列表查询</h2><p>组内用户列表查询接口用于查询一个用户组内所有的用户信息。</p><p>举例：</p><pre>\n<code class=\"hljs\" lang=\"\"># 该参数如果不填则使用默认值\n<span class=\"hljs-keyword\">options</span> = {\n    <span class=\"hljs-string\">'start'</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-string\">'num'</span>: <span class=\"hljs-number\">100</span>,\n}\n\naipFace.getGroupUsers(<span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-keyword\">options</span>)</code>\n</pre><p><strong>组内用户列表查询请求参数详情</strong>：</p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>group_id</td><td>是</td><td>string</td><td>用户组id</td></tr><tr><td>start</td><td>否</td><td>uint32</td><td>默认值0，起始序号</td></tr><tr><td>num</td><td>否</td><td>uint32</td><td>返回数量，默认值100，最大值1000</td></tr></tbody></table><p><strong>组内用户列表查询返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result_num</td><td>是</td><td>uint32</td><td>返回个数</td></tr><tr><td>result</td><td>是</td><td>array(object)</td><td>user列表</td></tr><tr><td>+uid</td><td>是</td><td>string</td><td>用户id</td></tr><tr><td>+user_info</td><td>是</td><td>string</td><td>用户信息</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">3314921889</span>,\n    <span class=\"hljs-attr\">\"result_num\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-attr\">\"result\"</span>: [\n        {\n            <span class=\"hljs-attr\">\"uid\"</span>: <span class=\"hljs-string\">\"uid1\"</span>,\n            <span class=\"hljs-attr\">\"user_info\"</span>: <span class=\"hljs-string\">\"user info 1\"</span>\n        },\n        {\n            <span class=\"hljs-attr\">\"uid\"</span>: <span class=\"hljs-string\">\"uid2\"</span>,\n            <span class=\"hljs-attr\">\"user_info\"</span>: <span class=\"hljs-string\">\"user info 2\"</span>\n        }\n    ]\n}</code>\n</pre><h2 id=\"38e06a91\">组内添加用户</h2><p>组内添加用户接口用于把一个已经存在于库中的用户添加到新的用户组中。</p><p>举例：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-selector-tag\">aip</span><span class=\"hljs-selector-class\">.addGroupUser</span>(<span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'uid1'</span>)</code>\n</pre><p><strong>组内添加用户请求参数详情</strong>：</p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>group_id</td><td>是</td><td>string</td><td>用户组id</td></tr><tr><td>uid</td><td>是</td><td>string</td><td>用户id</td></tr></tbody></table><p><strong>组内添加用户接口返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 正确返回值 </span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">3314921889</span>,\n}\n<span class=\"hljs-comment\">// 发生错误时返回值 </span>\n{\n  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">216100</span>,\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">3111284097</span>,\n  <span class=\"hljs-string\">\"error_msg\"</span>: <span class=\"hljs-string\">\"already add\"</span>\n}</code>\n</pre><h2 id=\"eb9b83a8\">组内删除用户</h2><p>组内删除用户接口用于把一个用户从某个组中删除，但不会删除用户在其它组内的信息。当用户仅属于单个分组时，本接口将返回错误。</p><p>举例：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-selector-tag\">aip</span><span class=\"hljs-selector-class\">.deleteGroupUser</span>(<span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'uid1'</span>)</code>\n</pre><p><strong>组内删除用户请求参数详情</strong>：</p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>group_id</td><td>是</td><td>string</td><td>用户组id</td></tr><tr><td>uid</td><td>是</td><td>string</td><td>用户id</td></tr></tbody></table><p><strong>组内删除用户接口返回数据参数详情</strong>：</p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 正确返回值 </span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">3314921889</span>,\n}\n<span class=\"hljs-comment\">// 发生错误时返回值 </span>\n{\n  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">216619</span>,\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">815967402</span>,\n  <span class=\"hljs-string\">\"error_msg\"</span>: <span class=\"hljs-string\">\"user must be in one group at least\"</span>\n}</code>\n</pre>",
  "headings": [
    {
      "level": 1,
      "text": "Python SDK文档",
      "id": "6e12bec2"
    },
    {
      "level": 1,
      "text": "安装Python SDK",
      "id": "d2b1e06c"
    },
    {
      "level": 1,
      "text": "快速入门",
      "id": "3ebe14ea"
    },
    {
      "level": 2,
      "text": "初始化一个AipFace对象",
      "id": "68c3c1a9"
    },
    {
      "level": 2,
      "text": "配置AipFace",
      "id": "d2cb93b2"
    },
    {
      "level": 1,
      "text": "错误信息格式",
      "id": "4235e020"
    },
    {
      "level": 1,
      "text": "人脸属性检测",
      "id": "a97bc6ee"
    },
    {
      "level": 1,
      "text": "人脸两两比对",
      "id": "c4761fc8"
    },
    {
      "level": 1,
      "text": "人脸查找",
      "id": "0cc4a465"
    },
    {
      "level": 2,
      "text": "人脸注册",
      "id": "7e4908ae"
    },
    {
      "level": 2,
      "text": "人脸更新",
      "id": "036a66a9"
    },
    {
      "level": 2,
      "text": "人脸删除",
      "id": "144e2b1b"
    },
    {
      "level": 2,
      "text": "人脸认证",
      "id": "d72aa95e"
    },
    {
      "level": 2,
      "text": "人脸识别",
      "id": "a19c048a"
    },
    {
      "level": 2,
      "text": "用户信息查询",
      "id": "2f4c124e"
    },
    {
      "level": 2,
      "text": "组列表查询",
      "id": "6c626d4c"
    },
    {
      "level": 2,
      "text": "组内用户列表查询",
      "id": "16ac08d7"
    },
    {
      "level": 2,
      "text": "组内添加用户",
      "id": "38e06a91"
    },
    {
      "level": 2,
      "text": "组内删除用户",
      "id": "eb9b83a8"
    }
  ]
}
