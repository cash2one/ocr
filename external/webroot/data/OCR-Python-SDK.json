{
  "html": "<h1 id=\"53932383\">Python SDK文档</h1><p>本文档主要介绍OCR图像识别Python SDK的使用，在使用前请先确保已创建应用并具有相应权限。</p><h1 id=\"4ea7e8e2\">安装Python SDK</h1><p><strong>Python SDK目录结构</strong></p><pre>\n<code class=\"hljs\" lang=\"\">    ├── README<span class=\"hljs-selector-class\">.md</span>\n    ├── aip                 <span class=\"hljs-comment\">//SDK目录</span>\n    │   ├── __init__<span class=\"hljs-selector-class\">.py</span>     <span class=\"hljs-comment\">//导出类</span>\n    │   ├── antiporn<span class=\"hljs-selector-class\">.py</span>     <span class=\"hljs-comment\">//黄反识别</span>\n    │   ├── base<span class=\"hljs-selector-class\">.py</span>         <span class=\"hljs-comment\">//aip基类</span>\n    │   ├── face<span class=\"hljs-selector-class\">.py</span>         <span class=\"hljs-comment\">//人脸识别</span>\n    │   ├── http<span class=\"hljs-selector-class\">.py</span>         <span class=\"hljs-comment\">//http请求</span>\n    │   ├── nlp<span class=\"hljs-selector-class\">.py</span>          <span class=\"hljs-comment\">//nlp自然语言处理</span>\n    │   └── ocr<span class=\"hljs-selector-class\">.py</span>          <span class=\"hljs-comment\">//OCR图像识别</span>\n    ├── doc                 <span class=\"hljs-comment\">//使用文档</span>\n    │   ├── antiporn<span class=\"hljs-selector-class\">.md</span>\n    │   ├── face<span class=\"hljs-selector-class\">.md</span>\n    │   ├── nlp<span class=\"hljs-selector-class\">.md</span>\n    │   └── ocr<span class=\"hljs-selector-class\">.md</span>\n    └── setup<span class=\"hljs-selector-class\">.py</span>            <span class=\"hljs-comment\">//setuptools安装</span></code>\n</pre><p><strong>支持 Python版本：2.7.+ ,3.+</strong></p><p><strong>安装使用SDK有如下方式：</strong></p><ul><li>如果已安装pip，执行<code>pip <span class=\"hljs-keyword\">install</span> baidu-aip</code>即可。</li><li>如果已安装setuptools，执行<code>python setup<span class=\"hljs-selector-class\">.py</span> install</code>即可。</li></ul><h1 id=\"aad79f4c\">快速入门</h1><h2 id=\"1be23ef3\">初始化一个AipOcr对象</h2><p>AipOcr类提供给开发这一系列的图像识别方法，参考如下代码新建一个AipOcr对象：</p><pre>\n<code class=\"hljs\" lang=\"\">\n    # 引入文字识别OCR SDK\n    <span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n    # 定义常量\n    APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n    API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\n    SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n    # 初始化ApiOcr对象\n    aipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)</code>\n</pre><p>在上面代码中，常量<code>APP_ID</code>在百度云控制台中创建，常量<code>API_KEY</code>与<code>SECRET_KEY</code>是由系统分配给用户的，均为字符串，用于标识用户，为访问服务做签名验证。获取方式请参考<a href=\"../Reference/GetAKSK\" target=\"_blank\">获取AK/SK</a>。</p><h2 id=\"c661f669\">配置AipOcrClient</h2><p>如果用户需要配置AipOcrClient的一些细节参数，可以在构造AipOcr之后调用接口设置参数，目前只支持以下参数：</p><table><thead><tr><th>接口</th><th>说明</th></tr></thead><tbody><tr><td>setConnectionTimeoutInMillis</td><td>建立连接的超时时间（单位：毫秒）</td></tr><tr><td>setSocketTimeoutInMillis</td><td>通过打开的连接传输数据的超时时间（单位：毫秒）</td></tr></tbody></table><h1 id=\"9807fd7a\">错误信息格式</h1><p>若请求错误，服务器将返回的JSON文本包含以下参数：</p><ul><li><strong>error_code：</strong>错误码；关于错误码的详细信息请参考<strong>通用错误码</strong>和<strong>业务相关错误码</strong>。</li><li><strong>error_msg：</strong>错误描述信息，帮助理解和解决发生的错误。</li></ul><p><strong>SDK本地检测参数返回的错误码</strong>：</p><table><thead><tr><th>error_code</th><th>error_msg</th><th>备注</th></tr></thead><tbody><tr><td>SDK100</td><td>image size error</td><td>图片大小超限</td></tr><tr><td>SDK101</td><td>image length error</td><td>图片边长不符合要求</td></tr><tr><td>SDK102</td><td>read image file error</td><td>读取图片文件错误</td></tr><tr><td>SDK108</td><td>connection or read data time out</td><td>连接超时或读取数据超时</td></tr><tr><td>SDK109</td><td>unsupported image format</td><td>不支持的图片格式</td></tr></tbody></table><p><strong>服务端返回的错误码</strong></p><table><thead><tr><th>错误码</th><th>错误信息</th><th>描述</th></tr></thead><tbody><tr><td>216015</td><td>module closed</td><td>模块关闭</td></tr><tr><td>216100</td><td>invalid param</td><td>非法参数</td></tr><tr><td>216101</td><td>not enough param</td><td>参数数量不够</td></tr><tr><td>216102</td><td>service not support</td><td>业务不支持</td></tr><tr><td>216103</td><td>param too long</td><td>参数太长</td></tr><tr><td>216110</td><td>appid not exist</td><td>APP ID不存在</td></tr><tr><td>216111</td><td>invalid userid</td><td>非法用户ID</td></tr><tr><td>216200</td><td>empty image</td><td>空的图片</td></tr><tr><td>216201</td><td>image format error</td><td>图片格式错误</td></tr><tr><td>216202</td><td>image size error</td><td>图片大小错误</td></tr><tr><td>216300</td><td>db error</td><td>DB错误</td></tr><tr><td>216400</td><td>backend error</td><td>后端系统错误</td></tr><tr><td>216401</td><td>internal error</td><td>内部错误</td></tr><tr><td>216500</td><td>unknown error</td><td>未知错误</td></tr><tr><td>216600</td><td>id number format error</td><td>身份证的ID格式错误</td></tr><tr><td>216601</td><td>id number and name not match</td><td>身份证的ID和名字不匹配</td></tr><tr><td>216630</td><td>recognize error</td><td>识别错误</td></tr><tr><td>216631</td><td>recognize bank card error</td><td>识别银行卡错误</td></tr><tr><td>216632</td><td>ocr</td><td>unknown error</td></tr><tr><td>216633</td><td>recognize idcard error</td><td>识别身份证错误</td></tr><tr><td>216634</td><td>detect error</td><td>检测错误</td></tr><tr><td>216635</td><td>get mask error</td><td>获取mask图片错误</td></tr><tr><td>282000</td><td>logic internal error</td><td>业务逻辑层内部错误</td></tr><tr><td>282001</td><td>logic backend error</td><td>业务逻辑层后端服务错误</td></tr><tr><td>282002</td><td>input encoding error</td><td>请求参数编码错误</td></tr><tr><td>282100</td><td>image transcode error</td><td>图片压缩转码错误</td></tr></tbody></table><h1 id=\"80d64770\">通用文字识别</h1><p>通用文字识别可以识别出图片中的文字。</p><p>举例，对一张图片进行文字识别，示例代码如下：</p><pre>\n<code class=\"hljs\" lang=\"\">\n    <span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n    <span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n    <span class=\"hljs-comment\"># 定义常量</span>\n    APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n    API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\n    SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n    <span class=\"hljs-comment\"># 读取图片</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n        <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n            <span class=\"hljs-keyword\">return</span> fp.read()\n\n    <span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\n    aipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n    <span class=\"hljs-comment\"># 调用通用文字识别接口</span>\n    result = aipOcr.basicGeneral(get_file_content(<span class=\"hljs-string\">'general.jpg'</span>))</code>\n</pre><p>传入图片时还想增加一些自定义参数配置：</p><pre>\n<code class=\"hljs\" lang=\"\">\n    <span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n    <span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n    <span class=\"hljs-comment\"># 定义常量</span>\n    APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n    API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\n    SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n    <span class=\"hljs-comment\"># 读取图片</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n        <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n            <span class=\"hljs-keyword\">return</span> fp.read()\n\n    <span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\n    aipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n    <span class=\"hljs-comment\"># 定义参数变量</span>\n    options = {\n      <span class=\"hljs-string\">'detect_direction'</span>: <span class=\"hljs-string\">'true'</span>,\n      <span class=\"hljs-string\">'language_type'</span>: <span class=\"hljs-string\">'CHN_ENG'</span>,\n    }\n\n    <span class=\"hljs-comment\"># 调用通用文字识别接口</span>\n    result = aipOcr.basicGeneral(get_file_content(<span class=\"hljs-string\">'general.jpg'</span>), options)</code>\n</pre><p><strong>通用文字识别 请求参数详情</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr><tr><td>mask</td><td>false</td><td>string</td><td>-</td><td>表示mask区域的黑白灰度图片，白色代表选中, base64编码</td></tr><tr><td>language_type</td><td>false</td><td>string</td><td>CHN_ENG、ENG、POR、FRE、GER、ITA、SPA、RUS、JAP</td><td>识别语言类型，默认为CHN_ENG。可选值包括：<br>- CHN_ENG：中英文混合；<br>- ENG：英文；<br>- POR：葡萄牙语；<br>- FRE：法语；<br>- GER：德语；<br>- ITA：意大利语；<br>- SPA：西班牙语；<br>- RUS：俄语；<br>- JAP：日语</td></tr><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>detect_language</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否检测语言，默认不检测。当前支持（中文、英语、日语、韩语）</td></tr><tr><td>classify_dimension</td><td>FALSE</td><td>string</td><td>lottery</td><td>分类维度（根据OCR结果进行分类），逗号分隔，当前只支持lottery。<br>lottery：彩票分类，设置detect_direction有助于提升精度</td></tr></tbody></table><p><strong>通用文字识别 返回数据参数详情</strong></p><table><thead><tr><th>字段</th><th>必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>定位和识别结果数组</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">2216743163</span>,\n  <span class=\"hljs-attr\">\"words_result\"</span>: [\n    {\n          <span class=\"hljs-attr\">\"words\"</span>: <span class=\"hljs-string\">\"众里寻他千百度。蓦然回首,那人却在,灯火阑珊处。\"</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"words_result_num\"</span>: <span class=\"hljs-number\">1</span>\n}</code>\n</pre><h1 id=\"97861453\">通用文字识别（含位置信息版）</h1><p>通用文字识别（含位置信息版）可以接受任意图片，并识别出图片中的文字以及全部文字串，以及字符在图片中的位置信息。</p><p>图片接受参数类型：支持本地图片路径字符串，图片文件二进制数组。</p><p>举例，要对一张图片进行文字识别，具体的文字的内容和信息在返回的words_result字段中：</p><pre>\n<code class=\"hljs\" lang=\"\">    <span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n    <span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n    <span class=\"hljs-comment\"># 定义常量</span>\n    APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n    API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\n    SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n    <span class=\"hljs-comment\"># 读取图片</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n        <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n            <span class=\"hljs-keyword\">return</span> fp.read()\n\n    <span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\n    aipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n    <span class=\"hljs-comment\"># 调用通用文字识别接口</span>\n    result = aipOcr.general(get_file_content(<span class=\"hljs-string\">'general.jpg'</span>))</code>\n</pre><p>传入图片时还想增加一些自定义参数配置：</p><pre>\n<code class=\"hljs\" lang=\"\">    <span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n    <span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n    <span class=\"hljs-comment\"># 定义常量</span>\n    APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n    API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\n    SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n    <span class=\"hljs-comment\"># 读取图片</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n        <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n            <span class=\"hljs-keyword\">return</span> fp.read()\n\n    <span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\n    aipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n    <span class=\"hljs-comment\"># 定义参数变量</span>\n    options = {\n      <span class=\"hljs-string\">'detect_direction'</span>: <span class=\"hljs-string\">'true'</span>,\n      <span class=\"hljs-string\">'language_type'</span>: <span class=\"hljs-string\">'CHN_ENG'</span>,\n    }\n\n    <span class=\"hljs-comment\"># 调用通用文字识别接口</span>\n    result = aipOcr.general(get_file_content(<span class=\"hljs-string\">'general.jpg'</span>), options)</code>\n</pre><p><strong>通用文字识别（含位置信息版） 请求参数详情</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr><tr><td>mask</td><td>false</td><td>string</td><td>-</td><td>表示mask区域的黑白灰度图片，白色代表选中, base64编码</td></tr><tr><td>language_type</td><td>false</td><td>string</td><td>CHN_ENG、ENG、POR、FRE、GER、ITA、SPA、RUS、JAP</td><td>识别语言类型，默认为CHN_ENG。可选值包括：<br>- CHN_ENG：中英文混合；<br>- ENG：英文；<br>- POR：葡萄牙语；<br>- FRE：法语；<br>- GER：德语；<br>- ITA：意大利语；<br>- SPA：西班牙语；<br>- RUS：俄语；<br>- JAP：日语</td></tr><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>detect_language</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否检测语言，默认不检测。当前支持（中文、英语、日语、韩语）</td></tr><tr><td>vertexes_location</td><td>false</td><td>boolean</td><td>true、false</td><td>是否在返回结果中标识文字位置</td></tr><tr><td>classify_dimension</td><td>FALSE</td><td>string</td><td>lottery</td><td>分类维度（根据OCR结果进行分类），逗号分隔，当前只支持lottery。<br>lottery：彩票分类，设置detect_direction有助于提升精度</td></tr></tbody></table><p><strong>通用文字识别（含位置信息版） 返回数据参数详情</strong></p><table><thead><tr><th>字段</th><th>必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>定位和识别结果数组</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>+vertexes_location</td><td>否</td><td>array()</td><td>当前为四个顶点: 左上，右上，右下，左下。当vertexes_location=true时存在</td></tr><tr><td>++x</td><td>是</td><td>uint32</td><td>水平坐标（坐标0点为左上角）</td></tr><tr><td>++y</td><td>是</td><td>uint32</td><td>垂直坐标（坐标0点为左上角）</td></tr><tr><td>+location</td><td>是</td><td>array()</td><td>位置数组（坐标0点为左上角）</td></tr><tr><td>++left</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td>++top</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td>++width</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的宽度</td></tr><tr><td>++height</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的高度</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr><tr><td>+chars</td><td>否</td><td>array()</td><td>单字符结果，recognize_granularity=small时存在</td></tr><tr><td>++location</td><td>是</td><td>array()</td><td>位置数组（坐标0点为左上角）</td></tr><tr><td>+++left</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td>+++top</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td>+++width</td><td>是</td><td>uint32</td><td>表示定位定位位置的长方形的宽度</td></tr><tr><td>+++height</td><td>是</td><td>uint32</td><td>表示位置的长方形的高度</td></tr><tr><td>++char</td><td>是</td><td>string</td><td>单字符识别结果</td></tr></tbody></table><h1 id=\"13d8fb94\">通用文字识别（含生僻字版）</h1><p>某些场景中，图片中的中文不光有常用字，还包含了生僻字，这时用户需要对该图进行文字识别，应使用通用文字识别（含生僻字版）。</p><p>图片接受参数类型：支持本地图片路径字符串，图片文件二进制数组。 举例，要对一张网络图片进行文字识别，具体的文字的内容和信息在返回的words_result字段中：</p><pre>\n<code class=\"hljs\" lang=\"\">\n    <span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n    <span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n    <span class=\"hljs-comment\"># 定义常量</span>\n    APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n    API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\n    SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n    <span class=\"hljs-comment\"># 读取图片</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n        <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n            <span class=\"hljs-keyword\">return</span> fp.read()\n\n    <span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\n    aipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n    <span class=\"hljs-comment\"># 调用生僻字识别接口</span>\n    result = aipOcr.enhancedGeneral(get_file_content(<span class=\"hljs-string\">'enhanced_general.jpg'</span>))</code>\n</pre><p>传入图片时还想增加一些自定义参数配置：</p><pre>\n<code class=\"hljs\" lang=\"\">    <span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n    <span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n    <span class=\"hljs-comment\"># 定义常量</span>\n    APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n    API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\n    SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n    <span class=\"hljs-comment\"># 读取图片</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n        <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n            <span class=\"hljs-keyword\">return</span> fp.read()\n\n    <span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\n    aipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n    <span class=\"hljs-comment\"># 定义参数变量</span>\n    options = {\n      <span class=\"hljs-string\">'detect_direction'</span>: <span class=\"hljs-string\">'true'</span>,\n      <span class=\"hljs-string\">'language_type'</span>: <span class=\"hljs-string\">'CHN_ENG'</span>,\n    }\n\n    <span class=\"hljs-comment\"># 调用生僻字识别接口</span>\n    result = aipOcr.enhancedGeneral(get_file_content(<span class=\"hljs-string\">'enhanced_general.jpg'</span>), options)</code>\n</pre><p><strong>通用文字识别（含生僻字版）请求参数详情</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr><tr><td>language_type</td><td>false</td><td>string</td><td>CHN_ENG、ENG、POR、FRE、GER、ITA、SPA、RUS、JAP</td><td>识别语言类型，默认为CHN_ENG。可选值包括：<br>- CHN_ENG：中英文混合；<br>- ENG：英文；<br>- POR：葡萄牙语；<br>- FRE：法语；<br>- GER：德语；<br>- ITA：意大利语；<br>- SPA：西班牙语；<br>- RUS：俄语；<br>- JAP：日语</td></tr><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr></tbody></table><p><strong>通用文字识别（含生僻字版） 返回数据参数详情</strong></p><table><thead><tr><th>字段</th><th>必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>定位和识别结果数组</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr></tbody></table><h1 id=\"46945cb5\">网络图片文字识别</h1><p>网络图片文字识别用于识别一些网络上背景复杂，特殊字体的文字。</p><p>图片接受参数类型：支持本地图片路径字符串，图片文件二进制数组。</p><p>举例，要对一张网络图片进行文字识别，具体的文字的内容和信息在返回的words_result字段中：</p><pre>\n<code class=\"hljs\" lang=\"\">\n    <span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n    <span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n    <span class=\"hljs-comment\"># 定义常量</span>\n    APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n    API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\n    SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n    <span class=\"hljs-comment\"># 读取图片</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n        <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n            <span class=\"hljs-keyword\">return</span> fp.read()\n\n    <span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\n    aipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n    <span class=\"hljs-comment\"># 网络图片文字文字识别接口</span>\n    result = aipOcr.webImage(get_file_content(<span class=\"hljs-string\">'web_image.jpg'</span>))</code>\n</pre><p>传入图片时还想增加一些自定义参数配置：</p><pre>\n<code class=\"hljs\" lang=\"\">    <span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n    <span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n    <span class=\"hljs-comment\"># 定义常量</span>\n    APP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\n    API_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\n    SECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n    <span class=\"hljs-comment\"># 读取图片</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n        <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n            <span class=\"hljs-keyword\">return</span> fp.read()\n\n    <span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\n    aipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n    <span class=\"hljs-comment\"># 定义参数变量</span>\n    options = {\n      <span class=\"hljs-string\">'detect_direction'</span>: <span class=\"hljs-string\">'true'</span>,\n      <span class=\"hljs-string\">'language_type'</span>: <span class=\"hljs-string\">'CHN_ENG'</span>,\n    }\n\n    <span class=\"hljs-comment\"># 网络图片文字识别接口</span>\n    result = aipOcr.webImage(get_file_content(<span class=\"hljs-string\">'web_image.jpg'</span>), options)</code>\n</pre><p><strong>网络图片文字识别 请求参数详情</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr><tr><td>language_type</td><td>false</td><td>string</td><td>CHN_ENG、ENG、POR、FRE、GER、ITA、SPA、RUS、JAP</td><td>识别语言类型，默认为CHN_ENG。可选值包括：<br>- CHN_ENG：中英文混合；<br>- ENG：英文；<br>- POR：葡萄牙语；<br>- FRE：法语；<br>- GER：德语；<br>- ITA：意大利语；<br>- SPA：西班牙语；<br>- RUS：俄语；<br>- JAP：日语</td></tr><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>detect_language</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否检测语言，默认不检测。当前支持（中文、英语、日语、韩语）</td></tr></tbody></table><p><strong>网络图片文字识别 返回数据参数详情</strong></p><table><thead><tr><th>字段</th><th>必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>定位和识别结果数组</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr></tbody></table><h1 id=\"4d590ac6\">银行卡识别</h1><p>银行卡识别能识别出图片中对应的银行卡号。</p><p>举例，对一张银行卡进行识别，示例代码如下：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n<span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n<span class=\"hljs-comment\"># 定义常量</span>\nAPP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\nAPI_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\nSECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n<span class=\"hljs-comment\"># 读取图片</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n    <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n        <span class=\"hljs-keyword\">return</span> fp.read()\n\n<span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\naipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n<span class=\"hljs-comment\"># 调用银行卡识别接口</span>\nresult = aipOcr.bankcard(get_file_content(<span class=\"hljs-string\">'bankcard.jpg'</span>))</code>\n</pre><p><strong>银行卡识别 请求参数详情</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">描述</th><th style=\"text-align:left\">是否必须</th></tr></thead><tbody><tr><td style=\"text-align:left\">image</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">图像数据，仅支持图像文件流</td><td style=\"text-align:left\">是</td></tr></tbody></table><p><strong>银行卡识别 返回数据参数详情</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">描述</th></tr></thead><tbody><tr><td style=\"text-align:left\">log_id</td><td style=\"text-align:left\">Unit64</td><td style=\"text-align:left\">唯一的log id，用于问题定位</td></tr><tr><td style=\"text-align:left\">result</td><td style=\"text-align:left\">Object</td><td style=\"text-align:left\">定位和识别结果数组</td></tr><tr><td style=\"text-align:left\">+bank_card_number</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">银行卡识别结果</td></tr><tr><td style=\"text-align:left\">+bank_name</td><td style=\"text-align:left\">string</td><td style=\"text-align:left\">银行名，不能识别时为空</td></tr><tr><td style=\"text-align:left\">+bank_card_type</td><td style=\"text-align:left\">uint32</td><td style=\"text-align:left\">银行卡类型，0:不能识别; 1: 借记卡; 2: 信用卡</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 银行卡识别会对银行卡号位数校验，即16位数字</span>\n<span class=\"hljs-comment\">// 识别或者校验错误则返回  recognize bank card error</span>\n<span class=\"hljs-comment\">// bank_card_number 即为银行卡号</span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">1447188951</span>,\n    <span class=\"hljs-string\">\"result\"</span>: {\n        <span class=\"hljs-string\">\"bank_card_number\"</span>: <span class=\"hljs-string\">\"622500000000000\"</span>,\n        <span class=\"hljs-string\">\"bank_name\"</span>: <span class=\"hljs-string\">\"招商银行\"</span>,\n        <span class=\"hljs-string\">\"bank_card_type\"</span>: <span class=\"hljs-number\">1</span>\n    }\n}</code>\n</pre><h1 id=\"273a7560\">身份证识别</h1><p>身份证识别一次只能接受身份证正面或反面的清晰图片，能识别出证件上的文字。</p><p>举例，对一张身份证正面进行文字识别，示例代码如下：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n<span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n<span class=\"hljs-comment\"># 定义常量</span>\nAPP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\nAPI_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\nSECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n<span class=\"hljs-comment\"># 读取图片</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n    <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n        <span class=\"hljs-keyword\">return</span> fp.read()\n\n<span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\naipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n<span class=\"hljs-comment\"># 设置识别身份证正面参数</span>\nisFront = <span class=\"hljs-keyword\">False</span>\n\n<span class=\"hljs-comment\"># 调用身份证识别接口</span>\nresult = aipOcr.idcard(get_file_content(<span class=\"hljs-string\">'idcard.jpg'</span>), isFront)</code>\n</pre><p>传入图片时还想增加一些自定义参数配置：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\"># 引入文字识别OCR SDK</span>\n<span class=\"hljs-keyword\">from</span> aip <span class=\"hljs-keyword\">import</span> AipOcr\n\n<span class=\"hljs-comment\"># 定义常量</span>\nAPP_ID = <span class=\"hljs-string\">'你的 App ID'</span>\nAPI_KEY = <span class=\"hljs-string\">'你的 API Key'</span>\nSECRET_KEY = <span class=\"hljs-string\">'你的 Secret Key'</span>\n\n<span class=\"hljs-comment\"># 读取图片</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">get_file_content</span><span class=\"hljs-params\">(filePath)</span>:</span>\n    <span class=\"hljs-keyword\">with</span> open(filePath, <span class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span> fp:\n        <span class=\"hljs-keyword\">return</span> fp.read()\n\n<span class=\"hljs-comment\"># 初始化ApiOcr对象</span>\naipOcr = AipOcr(APP_ID, API_KEY, SECRET_KEY)\n\n<span class=\"hljs-comment\"># 设置识别身份证正面参数</span>\nisFront = <span class=\"hljs-keyword\">False</span>\n\n<span class=\"hljs-comment\"># 定义参数变量</span>\noptions = {\n    <span class=\"hljs-string\">'detect_direction'</span>: <span class=\"hljs-keyword\">False</span>,\n    <span class=\"hljs-string\">'accuracy'</span>: <span class=\"hljs-string\">'high'</span>\n}\n\n<span class=\"hljs-comment\"># 调用身份证识别接口</span>\nresult = aipOcr.idcard(get_file_content(<span class=\"hljs-string\">'idcard.jpg'</span>), isFront, options)</code>\n</pre><p><strong>身份证识别 请求参数详情</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">描述</th><th style=\"text-align:left\">是否必须</th></tr></thead><tbody><tr><td style=\"text-align:left\">detect_direction</td><td style=\"text-align:left\">Boolean</td><td style=\"text-align:left\">检测图像朝向(指输入图像是正常方向、逆时针旋转90/180/270度)，有效值：true、false，默认值: false。</td><td style=\"text-align:left\">否</td></tr><tr><td style=\"text-align:left\">id_card_side</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">front：身份证正面，back：身份证背面</td><td style=\"text-align:left\">是</td></tr><tr><td style=\"text-align:left\">image</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">图像数据，仅支持图像文件流</td><td style=\"text-align:left\">是</td></tr></tbody></table><p><strong>身份证识别 返回数据参数详情</strong></p><table><thead><tr><th style=\"text-align:left\">参数</th><th style=\"text-align:left\">类型</th><th style=\"text-align:left\">描述</th></tr></thead><tbody><tr><td style=\"text-align:left\">direction</td><td style=\"text-align:left\">Int32</td><td style=\"text-align:left\">图像方向，当detect_direction=true时存在。-1:未定义，0:正向，1: 逆时针90度， 2:逆时针180度， 3:逆时针270度</td></tr><tr><td style=\"text-align:left\">log_id</td><td style=\"text-align:left\">Unit64</td><td style=\"text-align:left\">唯一的log id，用于问题定位</td></tr><tr><td style=\"text-align:left\">words_result</td><td style=\"text-align:left\">Array</td><td style=\"text-align:left\">定位和识别结果数组，数组元素的key是身份证的主体字段（正面支持：住址、公民身份号码、出生、姓名、性别、民族，背面支持：签发日期、失效日期）。只返回识别出的字段。</td></tr><tr><td style=\"text-align:left\">words_result_num</td><td style=\"text-align:left\">Unit32</td><td style=\"text-align:left\">识别结果数，表示words_result的元素个数</td></tr><tr><td style=\"text-align:left\">+location</td><td style=\"text-align:left\">Array</td><td style=\"text-align:left\">位置数组（坐标0点为左上角）</td></tr><tr><td style=\"text-align:left\">++left</td><td style=\"text-align:left\">Unit32</td><td style=\"text-align:left\">表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td style=\"text-align:left\">++top</td><td style=\"text-align:left\">Unit32</td><td style=\"text-align:left\">表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td style=\"text-align:left\">++width</td><td style=\"text-align:left\">Unit32</td><td style=\"text-align:left\">表示定位位置的长方形的宽度</td></tr><tr><td style=\"text-align:left\">++height</td><td style=\"text-align:left\">Unit32</td><td style=\"text-align:left\">表示定位位置的长方形的高度</td></tr><tr><td style=\"text-align:left\">+words</td><td style=\"text-align:left\">String</td><td style=\"text-align:left\">识别结果字符串</td></tr></tbody></table><p><strong>返回样例：</strong></p><pre>\n<code class=\"hljs\" lang=\"\">// 身份证识别对身份证号码进行校验，如果错误则返回空身份证号\n{\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">3043122372</span>,\n  <span class=\"hljs-string\">\"words_result\"</span>: {\n    <span class=\"hljs-string\">\"住址\"</span>: {\n      <span class=\"hljs-string\">\"location\"</span>: {\n        <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">93</span>,\n        <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">161</span>,\n        <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">201</span>,\n        <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">51</span>\n      },\n      <span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"北京市东城区景山前街4紫禁城敬事房\"</span>\n    },\n    <span class=\"hljs-string\">\"公民身份号码\"</span>: {\n      <span class=\"hljs-string\">\"location\"</span>: {\n        <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">97</span>,\n        <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">200</span>,\n        <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">202</span>,\n        <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">27</span>\n      },\n      <span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"110114198103214083\"</span>\n    },\n    <span class=\"hljs-string\">\"出生\"</span>: {\n      <span class=\"hljs-string\">\"location\"</span>: {\n        <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">97</span>,\n        <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">121</span>,\n        <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">161</span>,\n        <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">17</span>\n      },\n      <span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"1654年12月20日\"</span>\n    },\n    <span class=\"hljs-string\">\"姓名\"</span>: {\n      <span class=\"hljs-string\">\"location\"</span>: {\n        <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">99</span>,\n        <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">40</span>,\n        <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">64</span>,\n        <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">22</span>\n      },\n      <span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"韦小宝\"</span>\n    },\n    <span class=\"hljs-string\">\"性别\"</span>: {\n      <span class=\"hljs-string\">\"location\"</span>: {\n        <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">100</span>,\n        <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">83</span>,\n        <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">15</span>,\n        <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">18</span>\n      },\n      <span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"男\"</span>\n    },\n    <span class=\"hljs-string\">\"民族\"</span>: {\n      <span class=\"hljs-string\">\"location\"</span>: {\n        <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">197</span>,\n        <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">84</span>,\n        <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">14</span>,\n        <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">17</span>\n      },\n      <span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"汉\"</span>\n    }\n  },\n  <span class=\"hljs-string\">\"words_result_num\"</span>: <span class=\"hljs-number\">6</span>\n}</code>\n</pre>",
  "headings": [
    {
      "level": 1,
      "text": "Python SDK文档",
      "id": "53932383"
    },
    {
      "level": 1,
      "text": "安装Python SDK",
      "id": "4ea7e8e2"
    },
    {
      "level": 1,
      "text": "快速入门",
      "id": "aad79f4c"
    },
    {
      "level": 2,
      "text": "初始化一个AipOcr对象",
      "id": "1be23ef3"
    },
    {
      "level": 2,
      "text": "配置AipOcrClient",
      "id": "c661f669"
    },
    {
      "level": 1,
      "text": "错误信息格式",
      "id": "9807fd7a"
    },
    {
      "level": 1,
      "text": "通用文字识别",
      "id": "80d64770"
    },
    {
      "level": 1,
      "text": "通用文字识别（含位置信息版）",
      "id": "97861453"
    },
    {
      "level": 1,
      "text": "通用文字识别（含生僻字版）",
      "id": "13d8fb94"
    },
    {
      "level": 1,
      "text": "网络图片文字识别",
      "id": "46945cb5"
    },
    {
      "level": 1,
      "text": "银行卡识别",
      "id": "4d590ac6"
    },
    {
      "level": 1,
      "text": "身份证识别",
      "id": "273a7560"
    }
  ]
}
