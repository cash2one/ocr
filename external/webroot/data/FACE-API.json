{
  "html": "<h1 id=\"0015607b\">简介</h1><p>Hi，您好，欢迎使用百度人脸识别API服务。</p><p>本文档主要针对API开发者，描述百度人脸识别接口服务的相关技术内容。如果您对文档内容有任何疑问，可以通过以下几种方式联系我们：</p><ul><li>在百度云控制台内<a href=\"http://ticket.bce.baidu.com/#/ticket/create\" target=\"_blank\">提交工单</a>，咨询问题类型请选择<strong>人工智能服务</strong>；</li><li>加入<strong>开发者QQ群</strong>：224994340；</li></ul><h2 id=\"b9b18659\">接口能力</h2><table><thead><tr><th style=\"text-align:left\">接口名称</th><th style=\"text-align:left\">接口能力简要描述</th></tr></thead><tbody><tr><td style=\"text-align:left\">人脸检测</td><td style=\"text-align:left\">检测人脸并定位，返回五官关键点，及人脸各属性值</td></tr><tr><td style=\"text-align:left\">人脸比对</td><td style=\"text-align:left\">返回两两比对的人脸相似值</td></tr><tr><td style=\"text-align:left\">人脸识别</td><td style=\"text-align:left\">在人脸库中查找相似的人脸</td></tr><tr><td style=\"text-align:left\">人脸认证</td><td style=\"text-align:left\">识别上传的图片是否为指定用户</td></tr><tr><td style=\"text-align:left\">人脸库设置</td><td style=\"text-align:left\">对人脸库的相关操作，如注册、删除、更新、查找用户信息等</td></tr></tbody></table><h2 id=\"facc7c00\">请求格式</h2><p>POST方式调用</p><p><strong>注意：</strong>Content-Type为<code><span class=\"hljs-built_in\">application</span>/x-www-form-urlencoded</code>，然后通过<code><span class=\"hljs-attribute\">urlencode</span></code>格式化请求体。</p><h2 id=\"7559fc4b\">返回格式</h2><p>JSON格式</p><h2 id=\"58f0c02c\">请求限制</h2><p>请求图片需经过<code><span class=\"hljs-built_in\">base64</span>编码</code>：图片的base64编码指将一副图片数据编码成一串字符串，使用该字符串代替图像地址。您可以首先得到图片的二进制，然后用Base64格式编码即可。</p><p><strong>注意：</strong>图片的base64编码是不包含图片头的，如<code>（<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>:image/jpg;base64,）</span></code></p><p><strong>请求格式支持：</strong>PNG、JPG、JPEG、BMP，<strong>不支持GIF图片</strong></p><table><thead><tr><th>接口名称</th><th>图片编码后大小限额</th></tr></thead><tbody><tr><td>人脸检测</td><td>小于2M</td></tr><tr><td>人脸比对</td><td>小于10M</td></tr><tr><td>人脸识别</td><td>小于10M</td></tr><tr><td>人脸认证</td><td>小于10M</td></tr><tr><td>人脸库设置</td><td>小于10M</td></tr></tbody></table><h1 id=\"195ca677\">调用方式</h1><p>调用AI服务相关的API接口有两种调用方式，两种不同的调用方式采用相同的接口URL。</p><p>区别在于<strong>请求方式</strong>和<strong>鉴权方法</strong>不一样，请求参数和返回结果一致。</p><h2 id=\"5ecc8e57\">调用方式一</h2><p><strong>请求URL数据格式</strong></p><p>向API服务地址使用POST发送请求，必须在URL中带上参数：</p><p><strong>access_token:</strong> 必须参数，参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”。</p><blockquote><p>注意：<code>access_token</code>的有效期为30天，需要每30天进行定期更换；</p></blockquote><p>POST中参数按照API接口说明调用即可。</p><p>例如人脸识别API，使用HTTPS POST发送：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-symbol\">https:</span>//aip.baidubce.com/<span class=\"hljs-built_in\">rest</span>/<span class=\"hljs-number\">2.0</span>/face/v1/detect?access_token=<span class=\"hljs-number\">24.</span>f9ba9c5241b67688bb4adbed8bc91dec<span class=\"hljs-meta\">.2592000</span><span class=\"hljs-meta\">.1485570332</span><span class=\"hljs-meta\">.282335</span>-<span class=\"hljs-number\">8574074</span></code>\n</pre><p><strong>获取access_token示例代码</strong></p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=A0nyraL7kGXrDhfDf33UyGvX&amp;client_secret=4IGLoGQqeq8svpocetiBgzTLDlkVfhG1'</span>\n</code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/oauth/2.0/token'</span>;\n    $post_data[<span class=\"hljs-string\">'grant_type'</span>]       = <span class=\"hljs-string\">'client_credentials'</span>;\n    $post_data[<span class=\"hljs-string\">'client_id'</span>]      = <span class=\"hljs-string\">'A0nyraL7kGXrDhfDf33UyGvX'</span>;\n    $post_data[<span class=\"hljs-string\">'client_secret'</span>] = <span class=\"hljs-string\">'4IGLoGQqeq8svpocetiBgzTLDlkVfhG1'</span>;\n    $o = <span class=\"hljs-string\">\"\"</span>;\n    <span class=\"hljs-keyword\">foreach</span> ( $post_data <span class=\"hljs-keyword\">as</span> $k =&gt; $v ) \n    {\n    \t$o.= <span class=\"hljs-string\">\"$k=\"</span> . urlencode( $v ). <span class=\"hljs-string\">\"&amp;\"</span> ;\n    }\n    $post_data = substr($o,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">-1</span>);\n    \n    $res = request_post($url, $post_data);\n\n    var_dump($res);\n\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.auth;\n\n<span class=\"hljs-keyword\">import</span> org.json.JSONObject;\n\n<span class=\"hljs-keyword\">import</span> java.io.BufferedReader;\n<span class=\"hljs-keyword\">import</span> java.io.InputStreamReader;\n<span class=\"hljs-keyword\">import</span> java.net.HttpURLConnection;\n<span class=\"hljs-keyword\">import</span> java.net.URL;\n<span class=\"hljs-keyword\">import</span> java.util.List;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * 获取token类\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AuthService</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 获取权限token\n     *\n     * <span class=\"hljs-doctag\">@return</span> 返回示例：\n     * {\n     * \"access_token\": \"24.460da4889caad24cccdb1fea17221975.2592000.1491995545.282335-9261443\",\n     * \"session_key\": \"9mzdDxLPLXYfhlmFRBSGI8jOy19HNzFT6cle3RWf2m9HL8LdLxyVhEETkPS8gQtLbhw1TP/ly3+l59n4wknbmwPk6NC1\",\n     * \"scope\": \"public vis-faceverify_faceverify vis-ocr_ocr vis-faceattribute_faceattribute vis-ocr_bankcard nlp_wordseg nlp_simnet nlp_wordemb nlp_comtag nlp_wordpos nlp_dnnlm_cn vis-antiporn_antiporn_v2 brain_ocr_scope wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian wangrantest_test wangrantest_test1 bnstest_test1 bnstest_test2 ApsMisTest_Test权限 vis-classify_flower\",\n     * \"refresh_token\": \"25.bf1ec1814779878486cb9ba68f7defe5.315360000.1804763545.282335-9261443\",\n     * \"session_secret\": \"b292e183bb394fb8d8065e7f8b137757\",\n     * \"expires_in\": 2592000\n     * }\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">getAuth</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-comment\">// 获取token地址</span>\n        String authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token?\"</span>;\n        <span class=\"hljs-comment\">// 官网获取的 API Key 更新为你注册的</span>\n        String clientId = <span class=\"hljs-string\">\"nElok3H1CINAdEsTuzwyxO9U\"</span>;\n        <span class=\"hljs-comment\">// 官网获取的 Secret Key 更新为你注册的</span>\n        String clientSecret = <span class=\"hljs-string\">\"kg1vwhls4LO5h91YZkfG58qpRWgFHFCl\"</span>;\n        String getAccessTokenUrl = authHost\n                <span class=\"hljs-comment\">// 1. grant_type为固定参数</span>\n                + <span class=\"hljs-string\">\"grant_type=client_credentials\"</span>\n                <span class=\"hljs-comment\">// 2. 官网获取的 API Key</span>\n                + <span class=\"hljs-string\">\"&amp;client_id=\"</span> + clientId\n                <span class=\"hljs-comment\">// 3. 官网获取的 Secret Key</span>\n                + <span class=\"hljs-string\">\"&amp;client_secret=\"</span> + clientSecret;\n        <span class=\"hljs-keyword\">try</span> {\n            URL realUrl = <span class=\"hljs-keyword\">new</span> URL(getAccessTokenUrl);\n            <span class=\"hljs-comment\">// 打开和URL之间的连接</span>\n            HttpURLConnection connection = (HttpURLConnection) realUrl.openConnection();\n            connection.setRequestMethod(<span class=\"hljs-string\">\"GET\"</span>);\n            connection.connect();\n            <span class=\"hljs-comment\">// 获取所有响应头字段</span>\n            Map&lt;String, List&lt;String&gt;&gt; map = connection.getHeaderFields();\n            <span class=\"hljs-comment\">// 遍历所有的响应头字段</span>\n            <span class=\"hljs-keyword\">for</span> (String key : map.keySet()) {\n                System.out.println(key + <span class=\"hljs-string\">\"---&gt;\"</span> + map.get(key));\n            }\n            <span class=\"hljs-comment\">// 定义 BufferedReader输入流来读取URL的响应</span>\n            BufferedReader in = <span class=\"hljs-keyword\">new</span> BufferedReader(<span class=\"hljs-keyword\">new</span> InputStreamReader(connection.getInputStream()));\n            String result = <span class=\"hljs-string\">\"\"</span>;\n            String line;\n            <span class=\"hljs-keyword\">while</span> ((line = in.readLine()) != <span class=\"hljs-keyword\">null</span>) {\n                result += line;\n            }\n            <span class=\"hljs-comment\">/**\n             * 返回结果示例\n             */</span>\n            System.out.println(<span class=\"hljs-string\">\"result:\"</span> + result);\n            JSONObject jsonObject = <span class=\"hljs-keyword\">new</span> JSONObject(result);\n            String access_token = jsonObject.getString(<span class=\"hljs-string\">\"access_token\"</span>);\n            <span class=\"hljs-keyword\">return</span> access_token;\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            System.out.printf(<span class=\"hljs-string\">\"获取token失败！\"</span>);\n            e.printStackTrace();\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n<span class=\"hljs-keyword\">import</span> json\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">AuthService</span><span class=\"hljs-params\">()</span>:</span>\n    <span class=\"hljs-comment\"># 获取token地址</span>\n    authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token?\"</span>\n    <span class=\"hljs-comment\"># 官网获取的 API Key</span>\n    clientId = <span class=\"hljs-string\">\"\"</span>\n    <span class=\"hljs-comment\"># 官网获取的 Secret Key</span>\n    clientSecret = <span class=\"hljs-string\">\"\"</span>\n    getAccessTokenUrl = authHost + <span class=\"hljs-string\">\"grant_type=client_credentials\"</span> + <span class=\"hljs-string\">\"&amp;client_id=\"</span> + clientId + <span class=\"hljs-string\">\"&amp;client_secret=\"</span> + clientSecret\n    request = urllib2.Request(getAccessTokenUrl)\n    response_data = urllib2.urlopen(request)\n    params = json.loads(response_data.read())\n    <span class=\"hljs-keyword\">return</span> params[<span class=\"hljs-string\">\"access_token\"</span>]\n\n\nAuthService()\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\">#include &lt;iostream&gt;\n#include &lt;curl/curl.h&gt;\n#include &lt;json/json.h&gt;\n#include \"access_token.h\"\n// libcurl库下载链接：https://curl.haxx.se/download.html\n// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/\n// 获取access_token所需要的url\nconst std::string access_token_url = \"https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials\";\n// 回调函数获取到的access_token存放变量\nstatic std::string access_token_result;\n/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在result中\n * @param 参数定义见libcurl库文档\n * @return 返回值定义见libcurl库文档\n */\nstatic size_t callback(void *ptr, size_t size, size_t nmemb, void *stream) {\n    // 获取到的body存放在ptr中，先将其转换为string格式\n    std::string s((char *) ptr, size * nmemb);\n    // 开始获取json中的access token项目\n    Json::Reader reader;\n    Json::Value root;\n    // 使用boost库解析json\n    reader.parse(s,root);\n    access_token_result = root[\"access_token\"].asString();\n    return size * nmemb;\n}\n\n/**\n * 用以获取access_token的函数，使用时需要先在百度云控制台申请相应功能的应用，获得对应的API Key和Secret Key\n * @param access_token 获取得到的access token，调用函数时需传入该参数\n * @param AK 应用的API key\n * @param SK 应用的Secret key\n * @return 返回0代表获取access token成功，其他返回值代表获取失败\n */\nint get_access_token(std::string &amp;access_token, const std::string &amp;AK, const std::string &amp;SK) {\n    CURL *curl;\n    CURLcode result_code;\n    int success;\n    curl = curl_easy_init();\n    if (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL,\n                         (access_token_url + \"&amp;client_id=\" + AK + \"&amp;client_secret=\" + SK).data());\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        if (result_code != CURLE_OK) {\n            fprintf(stderr, \"curl_easy_perform() failed: %s\\n\",\n                    curl_easy_strerror(result_code));\n            success = 1;\n            return success;\n        }\n        access_token = access_token_result;\n        curl_easy_cleanup(curl);\n        success = 0;\n    } else {\n        fprintf(stderr, \"curl_easy_init() failed.\");\n        success = 1;\n    }\n    return success;\n}\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.Net.Http;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AccessToken</span>\n\n\t{\n\t\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String TOKEN = <span class=\"hljs-string\">\"######\"</span>; <span class=\"hljs-comment\">// 调用getAccessToken()获取的 access_token建议根据expires_in 时间 设置缓存</span>\n\n\t\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String clientId = <span class=\"hljs-string\">\"####\"</span>; <span class=\"hljs-comment\">// 百度云中开通对应服务应用的 API Key 建议开通应用的时候多选服务</span>\n\t\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String clientSecret = <span class=\"hljs-string\">\"#####\"</span>;   <span class=\"hljs-comment\">// 百度云中开通对应服务应用的 Secret Key</span>\n\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">getAccessToken</span>(<span class=\"hljs-params\"></span>) </span>{\n\t\t\tString authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token\"</span>;\n\t\t\tHttpClient client = <span class=\"hljs-keyword\">new</span> HttpClient();\n\t\t\tList&lt;KeyValuePair&lt;String, String&gt;&gt; paraList = <span class=\"hljs-keyword\">new</span> List&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"grant_type\"</span>, <span class=\"hljs-string\">\"client_credentials\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"client_id\"</span>, clientId));\n\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"client_secret\"</span>, clientSecret));\n\n\t\t\tHttpResponseMessage response = client.PostAsync(authHost, <span class=\"hljs-keyword\">new</span> FormUrlEncodedContent(paraList)).Result;\n\t\t\tString result = response.Content.ReadAsStringAsync().Result;\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-comment\">// </span>\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><blockquote><p><strong>说明：</strong>方式一鉴权使用的Access_token必须通过API Key和Secret Key获取。</p></blockquote><h2 id=\"d589e0c5\">调用方式二</h2><p><strong>请求头域内容</strong></p><p>在请求的HTTP头域中包含以下信息：</p><ul><li>host（必填）</li><li>x-bce-date （必填）</li><li>x-bce-request-id（选填）</li><li>authorization（必填）</li><li>content-type（必填）</li><li>content-length（选填）</li></ul><p>作为示例，以下是一个标准的人脸识别的请求头域内容:</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/rest/2.0/face/v1/detect</span> HTTP/1.1\n<span class=\"hljs-attribute\">accept-encoding</span>: gzip, deflate\n<span class=\"hljs-attribute\">x-bce-date</span>: 2015-03-24T13:02:00Z\n<span class=\"hljs-attribute\">connection</span>: keep-alive\n<span class=\"hljs-attribute\">accept</span>: */*\n<span class=\"hljs-attribute\">host</span>: aip.baidubce.com\n<span class=\"hljs-attribute\">x-bce-request-id</span>: 73c4e74c-3101-4a00-bf44-fe246959c05e\n<span class=\"hljs-attribute\">content-type</span>: application/x-www-form-urlencoded\n<span class=\"hljs-attribute\">authorization</span>: bce-auth-v1/46bd9968a6194b4bbdf0341f2286ccce/2015-03-24T13:02:00Z/1800/host;x-bce-date/994014d96b0eb26578e039fa053a4f9003425da4bfedf33f4790882fb4c54903</code>\n</pre><blockquote><p><strong>说明：</strong>方式二鉴权使用的<a href=\"https://cloud.baidu.com/doc/Reference/AuthenticationMechanism.html\" target=\"_blank\">API认证机制</a>，authorization必须通过百度云的<a href=\"https://cloud.baidu.com/doc/Reference/GetAKSK.html\" target=\"_blank\">AK/SK</a>生成。</p></blockquote><h1 id=\"cbad2ddc\">人脸检测</h1><h2 id=\"1719adcc\">接口描述</h2><p>检测请求图片中的人脸，返回人脸位置、72个关键点坐标、及人脸相关属性信息。</p><p>检测响应速度，与图片中人脸数量相关，人脸数量较多时响应时间会有些许延长。</p><p>典型应用场景：如<strong>人脸属性分析</strong>，<strong>基于人脸关键点的加工分析</strong>，<strong>人脸营销活动</strong>等。</p><blockquote><p>五官位置会标记具体坐标；72个关键点坐标也包含具体坐标，但不包含对应位置的详细位置描述。</p></blockquote><h2 id=\"2c8abf58\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL：<code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/face/</span>v1<span class=\"hljs-regexp\">/detect</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>是</td><td>string</td><td>base64编码后的图片数据，图片大小不超过2M。</td></tr><tr><td>max_face_num</td><td>否</td><td>uint32</td><td>最多处理人脸数目，默认值1</td></tr><tr><td>face_fields</td><td>否</td><td>string</td><td>包括age,beauty,expression,faceshape,gender,glasses,landmark,race,qualities信息，逗号分隔，默认只返回人脸框、概率和旋转角度。</td></tr></tbody></table><blockquote><p>说明：face_fields参数，默认只返回人脸框、概率和旋转角度，age等更多属性，请在此参数中添加。</p></blockquote><p><strong>请求示例代码</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/face/v1/detect?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"image\":\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/face/v1/detect?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"image\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * 人脸探测\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Detect</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸检测 url</span>\n        String detectUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/face/v1/detect\"</span>;\n        <span class=\"hljs-comment\">// 本地文件路径</span>\n        String filePath = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">byte</span>[] imgData = FileUtil.readFileByBytes(filePath);\n            String imgStr = Base64Util.encode(imgData);\n            System.out.println(<span class=\"hljs-string\">\"imgStr:\"</span> + imgStr);\n            <span class=\"hljs-comment\">// face_fields 自定之指定返回的人脸特征值</span>\n            String params =\n                    <span class=\"hljs-string\">\"max_face_num=5&amp;face_fields=age,beauty,expression,faceshape,gender,glasses,landmark,race,qualities&amp;\"</span>\n                            + URLEncoder.encode(<span class=\"hljs-string\">\"image\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>) + <span class=\"hljs-string\">\"=\"</span> + URLEncoder.encode(imgStr, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(detectUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸检测接口\n'''</span>\n\ndetectUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/face/v1/detect\"</span>\n<span class=\"hljs-comment\"># 参数image：图像base64编码，max_face_num：最多处理人脸数目，默认值1，face_fields：包括age,beauty,expression,faceshape,gender,glasses,landmark,race,qualities信息，逗号分隔，默认只返回人脸框、概率和旋转角度</span>\nparams = {<span class=\"hljs-string\">\"max_face_num\"</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"face_fields\"</span>: <span class=\"hljs-string\">\"age,beauty,expression,faceshape,gender,glasses,landmark,race,qualities\"</span>,\n          <span class=\"hljs-string\">\"image\"</span>: <span class=\"hljs-string\">\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\ndetectUrl = detectUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=detectUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"detect.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 人脸检测接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> face_detect_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/face/v1/detect\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> face_detect_result;\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    face_detect_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n<span class=\"hljs-comment\">/**\n * 调用人脸检测接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param image_base64 以string格式传递的base64编码的图像数据（注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">face_detect</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;image_base64, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span></span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = face_detect_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"image\"</span>, CURLFORM_COPYCONTENTS, image_base64.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = face_detect_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Detect</span>\n\t{\n\n\t\t<span class=\"hljs-comment\">// 人脸检测</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">detect</span>(<span class=\"hljs-params\"></span>) </span>{\n\t\t\t\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> strbaser64 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/demo-card-1.jpg\"</span>); <span class=\"hljs-comment\">// 图片的base64编码</span>\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/face/v1/detect?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"image=\"</span> + HttpUtility.UrlEncode(strbaser64);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"人脸检测:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"51927122\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>参数</th><th>类型</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>uint64</td><td>是</td><td>日志id</td></tr><tr><td>result_num</td><td>uint32</td><td>是</td><td>人脸数目</td></tr><tr><td>result</td><td>object[]</td><td>是</td><td>人脸属性对象的集合</td></tr><tr><td>+age</td><td>double</td><td>否</td><td>年龄。face_fields包含age时返回</td></tr><tr><td>+beauty</td><td>double</td><td>否</td><td>美丑打分，范围0-100，越大表示越美。face_fields包含beauty时返回</td></tr><tr><td>+cation</td><td>bject</td><td>是</td><td>人脸在图片中的位置</td></tr><tr><td>++left</td><td>uint32</td><td>是</td><td>人脸区域离左边界的距离</td></tr><tr><td>++top</td><td>uint32</td><td>是</td><td>人脸区域离上边界的距离</td></tr><tr><td>++width</td><td>uint32</td><td>是</td><td>人脸区域的宽度</td></tr><tr><td>++height</td><td>uint32</td><td>是</td><td>人脸区域的高度</td></tr><tr><td>+face_probability</td><td>double</td><td>是</td><td>人脸置信度，范围0-1</td></tr><tr><td>+rotation_angle</td><td>int32</td><td>是</td><td>人脸框相对于竖直方向的顺时针旋转角，[-180,180]</td></tr><tr><td>+yaw</td><td>double</td><td>是</td><td>三维旋转之左右旋转角[-90(左), 90(右)]</td></tr><tr><td>+pitch</td><td>double</td><td>是</td><td>三维旋转之俯仰角度[-90(上), 90(下)]</td></tr><tr><td>+roll</td><td>double</td><td>是</td><td>平面内旋转角[-180(逆时针), 180(顺时针)]</td></tr><tr><td>+expression</td><td>uint32</td><td>否</td><td>表情，0，不笑；1，微笑；2，大笑。face_fields包含expression时返回</td></tr><tr><td>+expression_probability</td><td>double</td><td>否</td><td>表情置信度，范围0~1。face_fields包含expression时返回</td></tr><tr><td>+faceshape</td><td>object[]</td><td>否</td><td>脸型置信度。face_fields包含faceshape时返回</td></tr><tr><td>++type</td><td>string</td><td>是</td><td>脸型：square/triangle/oval/heart/round</td></tr><tr><td>++probability</td><td>double</td><td>是</td><td>置信度：0~1</td></tr><tr><td>+gender</td><td>string</td><td>否</td><td>male、female。face_fields包含gender时返回</td></tr><tr><td>+gender_probability</td><td>double</td><td>否</td><td>性别置信度，范围0~1。face_fields包含gender时返回</td></tr><tr><td>+glasses</td><td>uint32</td><td>否</td><td>是否带眼镜，0-无眼镜，1-普通眼镜，2-墨镜。face_fields包含glasses时返回</td></tr><tr><td>+glasses_probability</td><td>double</td><td>否</td><td>眼镜置信度，范围0~1。face_fields包含glasses时返回</td></tr><tr><td>+landmark</td><td>object[]</td><td>否</td><td>4个关键点位置，左眼中心、右眼中心、鼻尖、嘴中心。face_fields包含landmark时返回</td></tr><tr><td>++x</td><td>uint32</td><td>否</td><td>x坐标</td></tr><tr><td>++y</td><td>uint32</td><td>否</td><td>y坐标</td></tr><tr><td>+landmark72</td><td>object[]</td><td>否</td><td>72个特征点位置，示例图 。face_fields包含landmark时返回</td></tr><tr><td>++x</td><td>uint32</td><td>否</td><td>x坐标</td></tr><tr><td>++y</td><td>uint32</td><td>否</td><td>y坐标</td></tr><tr><td>+race</td><td>string</td><td>否</td><td>yellow、white、black、arabs。face_fields包含race时返回</td></tr><tr><td>+race_probability</td><td>double</td><td>否</td><td>人种置信度，范围0~1。face_fields包含race时返回</td></tr><tr><td>+qualities</td><td>object</td><td>否</td><td>人脸质量信息。face_fields包含qualities时返回</td></tr><tr><td>++occlusion</td><td>object</td><td>是</td><td>人脸各部分遮挡的概率， [0, 1] （待上线）</td></tr><tr><td>+++left_eye</td><td>double</td><td>是</td><td>左眼</td></tr><tr><td>+++right_eye</td><td>double</td><td>是</td><td>右眼</td></tr><tr><td>+++nose</td><td>double</td><td>是</td><td>鼻子</td></tr><tr><td>+++mouth</td><td>double</td><td>是</td><td>嘴</td></tr><tr><td>+++left_cheek</td><td>double</td><td>是</td><td>左脸颊</td></tr><tr><td>+++right_cheek</td><td>double</td><td>是</td><td>右脸颊</td></tr><tr><td>+++chin</td><td>double</td><td>是</td><td>下巴</td></tr><tr><td>++blur</td><td>double</td><td>是</td><td>人脸模糊程度，[0, 1]。0表示清晰，1表示模糊（待上线）</td></tr><tr><td>++illumination</td><td>-</td><td>是</td><td>取值范围在[0,255],表示脸部区域的光照程度（待上线）</td></tr><tr><td>++completeness</td><td>-</td><td>是</td><td>人脸完整度，[0, 1]。0表示完整，1表示不完整（待上线）</td></tr><tr><td>++type</td><td>object</td><td>是</td><td>真实人脸/卡通人脸置信度</td></tr><tr><td>+++human</td><td>-</td><td>是</td><td>真实人脸置信度，[0, 1]</td></tr><tr><td>+++cartoon</td><td>-</td><td>是</td><td>卡通人脸置信度，[0, 1]</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"result_num\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"result\"</span>: [\n        {\n            <span class=\"hljs-attr\">\"location\"</span>: {\n                <span class=\"hljs-attr\">\"left\"</span>: <span class=\"hljs-number\">90</span>,\n                <span class=\"hljs-attr\">\"top\"</span>: <span class=\"hljs-number\">92</span>,\n                <span class=\"hljs-attr\">\"width\"</span>: <span class=\"hljs-number\">111</span>,\n                <span class=\"hljs-attr\">\"height\"</span>: <span class=\"hljs-number\">99</span>\n            },\n            <span class=\"hljs-attr\">\"face_probability\"</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">\"rotation_angle\"</span>: <span class=\"hljs-number\">6</span>,\n            <span class=\"hljs-attr\">\"yaw\"</span>: <span class=\"hljs-number\">11.61234664917</span>,\n            <span class=\"hljs-attr\">\"pitch\"</span>: <span class=\"hljs-number\">-0.30852827429771</span>,\n            <span class=\"hljs-attr\">\"roll\"</span>: <span class=\"hljs-number\">8.8044967651367</span>,\n            <span class=\"hljs-attr\">\"landmark\"</span>: [\n                {\n                    <span class=\"hljs-attr\">\"x\"</span>: <span class=\"hljs-number\">105</span>,\n                    <span class=\"hljs-attr\">\"y\"</span>: <span class=\"hljs-number\">110</span>\n                },\n              ...\n            ],\n            <span class=\"hljs-attr\">\"landmark72\"</span>: [\n                {\n                    <span class=\"hljs-attr\">\"x\"</span>: <span class=\"hljs-number\">88</span>,\n                    <span class=\"hljs-attr\">\"y\"</span>: <span class=\"hljs-number\">109</span>\n                },\n               ...\n            ],\n            <span class=\"hljs-attr\">\"gender\"</span>: <span class=\"hljs-string\">\"male\"</span>,\n            <span class=\"hljs-attr\">\"gender_probability\"</span>: <span class=\"hljs-number\">0.99358034133911</span>,\n            <span class=\"hljs-attr\">\"glasses\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">\"glasses_probability\"</span>: <span class=\"hljs-number\">0.99991309642792</span>,\n            <span class=\"hljs-attr\">\"race\"</span>: <span class=\"hljs-string\">\"yellow\"</span>,\n            <span class=\"hljs-attr\">\"race_probability\"</span>: <span class=\"hljs-number\">0.99960690736771</span>,\n            <span class=\"hljs-attr\">\"qualities\"</span>: {\n                <span class=\"hljs-attr\">\"occlusion\"</span>: {\n                    <span class=\"hljs-attr\">\"left_eye\"</span>: <span class=\"hljs-number\">0.000085282314103097</span>,\n                    <span class=\"hljs-attr\">\"right_eye\"</span>: <span class=\"hljs-number\">0.00001094374601962</span>,\n                    <span class=\"hljs-attr\">\"nose\"</span>: <span class=\"hljs-number\">3.2677664307812e-7</span>,\n                    <span class=\"hljs-attr\">\"mouth\"</span>: <span class=\"hljs-number\">2.6582130940866e-10</span>,\n                    <span class=\"hljs-attr\">\"left_cheek\"</span>: <span class=\"hljs-number\">8.752236624332e-8</span>,\n                    <span class=\"hljs-attr\">\"right_cheek\"</span>: <span class=\"hljs-number\">1.0212766454742e-7</span>,\n                    <span class=\"hljs-attr\">\"chin\"</span>: <span class=\"hljs-number\">4.2632994357028e-10</span>\n                },\n                <span class=\"hljs-attr\">\"blur\"</span>: <span class=\"hljs-number\">4.5613666312237e-41</span>,\n                <span class=\"hljs-attr\">\"illumination\"</span>: <span class=\"hljs-number\">0</span>,\n                <span class=\"hljs-attr\">\"completeness\"</span>: <span class=\"hljs-number\">0</span>,\n                <span class=\"hljs-attr\">\"type\"</span>: {\n                    <span class=\"hljs-attr\">\"human\"</span>: <span class=\"hljs-number\">0.98398965597153</span>,\n                    <span class=\"hljs-attr\">\"cartoon\"</span>: <span class=\"hljs-number\">0.016010366380215</span>\n                }\n            }\n        }\n    ],\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">2418894422</span>\n}</code>\n</pre><h1 id=\"836297b5\">人脸比对</h1><h2 id=\"2a33015f\">接口描述</h2><p>该请求用于比对多张图片中的人脸相似度并返回两两比对的得分，可用于判断两张脸是否是同一人的可能性大小。</p><p>典型应用场景：如<strong>人证合一验证</strong>，<strong>用户认证</strong>等，可与您现有的人脸库进行比对验证。</p><h2 id=\"84ce155b\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/match</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>images</td><td>是</td><td>string</td><td>base64编码后的图片数据，可单次传入多张，多张图片半角逗号分隔，总共最大10M</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/match?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"images\":\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/match?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"images\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * 人脸对比接口\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Match</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸对比url</span>\n        String matchUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/match\"</span>;\n        <span class=\"hljs-comment\">// 本地文件路径，可用多张图片</span>\n        String filePath1 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        String filePath2 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        String filePath3 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">byte</span>[] imgData1 = FileUtil.readFileByBytes(filePath1);\n            <span class=\"hljs-keyword\">byte</span>[] imgData2 = FileUtil.readFileByBytes(filePath2);\n            <span class=\"hljs-keyword\">byte</span>[] imgData3 = FileUtil.readFileByBytes(filePath3);\n            String imgStr1 = Base64Util.encode(imgData1);\n            String imgStr2 = Base64Util.encode(imgData2);\n            String imgStr3 = Base64Util.encode(imgData3);\n            String params = URLEncoder.encode(<span class=\"hljs-string\">\"images\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>) + <span class=\"hljs-string\">\"=\"</span>\n                    + URLEncoder.encode(imgStr1 + <span class=\"hljs-string\">\",\"</span> + imgStr2 + <span class=\"hljs-string\">\",\"</span> + imgStr3, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(matchUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸比对接口\n'''</span>\n\nmatchUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/match\"</span>\n<span class=\"hljs-comment\"># 参数images：图像base64编码,多张图片半角逗号分隔</span>\nparams = {\n    <span class=\"hljs-string\">\"images\"</span>: <span class=\"hljs-string\">\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK,%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK2\"</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\nmatchUrl = matchUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=matchUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"face_match.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 人脸匹配接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> face_match_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/match\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> face_match_result;\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    face_match_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用人脸匹配接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param images 多个base64编码的图像数据字符串 注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">match</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>&gt; &amp;images, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = face_match_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> image_plain = images[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; images.size(); i++) {\n            image_plain.append(<span class=\"hljs-string\">\",\"</span> + images[i]);\n        }\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"images\"</span>, CURLFORM_COPYCONTENTS, image_plain.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = face_match_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Match</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 人脸比对</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">match</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> base643 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/face/search3.jpg\"</span>);\n\t\t\t<span class=\"hljs-keyword\">string</span> base642 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/face/search2.jpg\"</span>);\n\t\t\t<span class=\"hljs-keyword\">string</span> base644 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/face/search4.jpg\"</span>);\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/match?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"images=\"</span> + HttpUtility.UrlEncode(base643 + <span class=\"hljs-string\">\",\"</span> + base642 + <span class=\"hljs-string\">\",\"</span> + base644);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"人脸比对:\"</span>);\n\t\t\tConsole.WriteLine(result); \n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t\t\t\n\t}\n}\n</code></pre></div></div><h2 id=\"482a80c3\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result_num</td><td>是</td><td>uint32</td><td>返回结果数目，即：result数组中元素个数</td></tr><tr><td>result</td><td>是</td><td>array(object)</td><td>结果数据，index和请求图片index对应。数组元素为每张图片的匹配得分数组，top n。 得分[0,100.0]</td></tr><tr><td>+index_i</td><td>是</td><td>uint32</td><td>比对图片1的index</td></tr><tr><td>+index_j</td><td>是</td><td>uint32</td><td>比对图片2的index</td></tr><tr><td>+score</td><td>是</td><td>double</td><td>比对得分</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">//请求为四张图片，第三张解析失败\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">73473737</span>,\n    <span class=\"hljs-string\">\"result_num\"</span>:<span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-string\">\"result\"</span>: [\n        {\n            <span class=\"hljs-string\">\"index_i\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-string\">\"index_j\"</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-string\">\"score\"</span>: <span class=\"hljs-number\">44.3</span>\n        },\n        {\n            <span class=\"hljs-string\">\"index_i\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-string\">\"index_j\"</span>: <span class=\"hljs-number\">3</span>,\n            <span class=\"hljs-string\">\"score\"</span>: <span class=\"hljs-number\">89.2</span>\n        },\n        {\n            <span class=\"hljs-string\">\"index_i\"</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-string\">\"index_j\"</span>: <span class=\"hljs-number\">3</span>,\n            <span class=\"hljs-string\">\"score\"</span>: <span class=\"hljs-number\">10.4</span>\n        }\n        ……\n    ]\n}</code>\n</pre><h1 id=\"e6e54909\">人脸识别</h1><h2 id=\"97e901d9\">接口描述</h2><p>用于计算指定组内用户，与上传图像中人脸的相似度。识别前提为您已经创建了一个<strong><a href=\"#%E4%BA%BA%E8%84%B8%E6%B3%A8%E5%86%8C\" target=\"_blank\">人脸库</a></strong>。</p><p>典型应用场景：如<strong>人脸闸机</strong>，<strong>考勤签到</strong>，<strong>安防监控</strong>等。</p><blockquote><p><strong>说明：</strong>人脸识别返回值不直接判断是否是同一人，只返回用户信息及相似度分值。</p><p><strong>说明：</strong>推荐可判断为同一人的相似度分值为<strong>80</strong>，您也可以根据业务需求选择更合适的阈值。</p></blockquote><h2 id=\"6c3d6adb\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/identify</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>group_id</td><td>是</td><td>string</td><td>用户组id（由数字、字母、下划线组成），长度限制128B</td></tr><tr><td>images</td><td>是</td><td>string</td><td>图像base64编码，可单次传入多张，多张图片半角逗号分隔，总共最大10M</td></tr><tr><td>user_top_num</td><td>否</td><td>uint32</td><td>返回用户top数，默认为1</td></tr><tr><td>face_top_num</td><td>否</td><td>uint32</td><td>单用户人脸匹配得分top数，默认为1</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/identify?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"group_id\":\"testuid\", \"images\":\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/identify?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"group_id\\\":\\\"testuid\\\",\\\"images\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * 人脸查找——识别\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Identify</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸查找——识别url （已用户照片，以图搜人）</span>\n        String identifyUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/identify\"</span>;\n        <span class=\"hljs-comment\">// 请求参数</span>\n        <span class=\"hljs-comment\">// 用户组</span>\n        String groupId = <span class=\"hljs-string\">\"test_group_2\"</span>;\n        <span class=\"hljs-comment\">// 返回用户top数，默认为1</span>\n        String userTopNum = <span class=\"hljs-string\">\"1\"</span>;\n        <span class=\"hljs-comment\">// 单用户人脸匹配得分top数，默认为1</span>\n        String faceTopNum = <span class=\"hljs-string\">\"1\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            String filePath1 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n            String filePath2 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n            <span class=\"hljs-keyword\">byte</span>[] imgData1 = FileUtil.readFileByBytes(filePath1);\n            <span class=\"hljs-keyword\">byte</span>[] imgData2 = FileUtil.readFileByBytes(filePath2);\n            String imgStr1 = Base64Util.encode(imgData1);\n            String imgStr2 = Base64Util.encode(imgData2);\n\n            String params = <span class=\"hljs-string\">\"group_id=\"</span> + groupId + <span class=\"hljs-string\">\"&amp;user_top_num=\"</span> + userTopNum + <span class=\"hljs-string\">\"&amp;face_top_num\"</span> + faceTopNum\n                    + <span class=\"hljs-string\">\"&amp;images=\"</span> + URLEncoder.encode(imgStr1 + <span class=\"hljs-string\">\",\"</span> + imgStr2, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(identifyUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸查找之识别接口\n'''</span>\n\nidentifyUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/identify\"</span>\n<span class=\"hljs-comment\"># 参数group_id：用户组id（由数字、字母、下划线组成）images：图像base64编码,多张图片半角逗号分隔</span>\nparams = {<span class=\"hljs-string\">\"group_id\"</span>: <span class=\"hljs-string\">\"gid\"</span>,\n          <span class=\"hljs-string\">\"images\"</span>: <span class=\"hljs-string\">\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\nidentifyUrl = identifyUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=identifyUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;sstream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"identify.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> identify_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/identify\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> identify_result;\n\n<span class=\"hljs-keyword\">inline</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-function\"><span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">int_to_string</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> integer)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> stream;\n    stream &lt;&lt; integer;\n    <span class=\"hljs-keyword\">return</span> stream.str();\n}\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    identify_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用人脸识别接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param group_id 用户组的id\n * @param images 多个base64编码的图像字符串（注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @param user_top_num 返回用户top数，默认为1\n * @param face_top_num 单用户人脸匹配top数，默认为1\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">identify</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;group_id, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>&gt; &amp;images,\n             <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token, <span class=\"hljs-keyword\">int</span> user_top_num, <span class=\"hljs-keyword\">int</span> face_top_num)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = identify_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> image_plain = images[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; images.size(); i++) {\n            image_plain.append(<span class=\"hljs-string\">\",\"</span> + images[i]);\n        }\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"group_id\"</span>, CURLFORM_COPYCONTENTS, group_id.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"images\"</span>, CURLFORM_COPYCONTENTS, image_plain.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"user_top_num\"</span>, CURLFORM_COPYCONTENTS,\n                     int_to_string(user_top_num).data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"face_top_num\"</span>, CURLFORM_COPYCONTENTS,\n                     int_to_string(face_top_num).data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = identify_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n\n\n\n\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Identify</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 人脸识别</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">identify</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> base645 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/face/search5.jpg\"</span>);\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/identify?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"images=\"</span> + HttpUtility.UrlEncode(base645);\n\t\t\tstr += <span class=\"hljs-string\">\"&amp;group_id=demo&amp;user_top_num=1&amp;face_top_num=1\"</span>;\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"人脸识别:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"569145f8\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result_num</td><td>是</td><td>uint32</td><td>返回结果数目，即：result数组中元素个数</td></tr><tr><td>result</td><td>是</td><td>array(double)</td><td>结果数组</td></tr><tr><td>+uid</td><td>是</td><td>string</td><td>匹配到的用户id</td></tr><tr><td>+user_info</td><td>是</td><td>string</td><td>注册时的用户信息</td></tr><tr><td>+scores</td><td>是</td><td>array(double)</td><td>结果数组，数组元素为匹配得分，top n。 得分[0,100.0]</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">73473737</span>,\n    <span class=\"hljs-attr\">\"result_num\"</span>:<span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">\"result\"</span>: [\n        {\n            <span class=\"hljs-attr\">\"uid\"</span>: <span class=\"hljs-string\">\"u333333\"</span>,\n            <span class=\"hljs-attr\">\"user_info\"</span>: <span class=\"hljs-string\">\"Test User\"</span>,\n            <span class=\"hljs-attr\">\"scores\"</span>: [\n                    <span class=\"hljs-number\">99.3</span>,\n                    <span class=\"hljs-number\">83.4</span>\n            ]\n        }\n    ]\n}</code>\n</pre><h1 id=\"80e483f1\">人脸认证</h1><h2 id=\"260b5630\">接口描述</h2><p>用于识别上传的图片是否为指定用户，即查找前需要先确定要查找的用户在人脸库中的id。</p><p>典型应用场景：如<strong>人脸登录</strong>，<strong>人脸签到</strong>等</p><blockquote><p><strong>说明：</strong>人脸认证与人脸识别的差别在于：人脸识别需要指定一个待查找的人脸库中的组；而人脸认证需要指定具体的用户id即可，不需要指定具体的人脸库中的组；实际应用中，人脸认证需要用户或系统先输入id，这增加了验证安全度，但也增加了复杂度，具体使用哪个接口需要视您的业务场景判断。</p></blockquote><h2 id=\"a4f5c1f2\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/verify</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>uid</td><td>是</td><td>string</td><td>用户id（由数字、字母、下划线组成），长度限制128B</td></tr><tr><td>images</td><td>是</td><td>string</td><td>图像base64编码，可单次传入多张，多张图片半角逗号分隔，总共最大10M</td></tr><tr><td>top_num</td><td>否</td><td>uint32</td><td>返回匹配得分top数，默认为1</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/verify?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"uid\":\"testuid\", \"images\":\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/verify?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"uid\\\":\\\"testuid\\\",\\\"images\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * 人脸查找——认证\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Verify</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸查找——认证url （已知用户ID，根据人脸图片来验证）</span>\n        String verifyUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/verify\"</span>;\n        <span class=\"hljs-comment\">// 请求参数</span>\n        <span class=\"hljs-comment\">// 用户ID</span>\n        String uid = <span class=\"hljs-string\">\"test_user_1\"</span>;\n        <span class=\"hljs-comment\">// 返回匹配得分top数，默认为1</span>\n        String topNum = <span class=\"hljs-string\">\"1\"</span>;\n        <span class=\"hljs-comment\">// 本地文件路径</span>\n        String filePath1 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        String filePath2 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">byte</span>[] imgData1 = FileUtil.readFileByBytes(filePath1);\n            <span class=\"hljs-keyword\">byte</span>[] imgData2 = FileUtil.readFileByBytes(filePath2);\n            String imgStr1 = Base64Util.encode(imgData1);\n            String imgStr2 = Base64Util.encode(imgData2);\n\n            String params = <span class=\"hljs-string\">\"uid=\"</span> + uid + <span class=\"hljs-string\">\"&amp;top_num=\"</span> + topNum + <span class=\"hljs-string\">\"&amp;\"</span> + URLEncoder.encode(<span class=\"hljs-string\">\"images\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>) + <span class=\"hljs-string\">\"=\"</span>\n                    + URLEncoder.encode(imgStr1 + <span class=\"hljs-string\">\",\"</span> + imgStr2, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(verifyUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸查找之认证接口\n'''</span>\n\nverifyUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/verify\"</span>\n<span class=\"hljs-comment\"># 参数uid：用户id（由数字、字母、下划线组成）images：图像base64编码,多张图片半角逗号分隔</span>\nparams = {<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testuid\"</span>,\n          <span class=\"hljs-string\">\"images\"</span>: <span class=\"hljs-string\">\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\nverifyUrl = verifyUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=verifyUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;sstream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"verify.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> verify_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/verify\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> verify_result;\n\n<span class=\"hljs-keyword\">inline</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-function\"><span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">int_to_string</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> integer)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> stream;\n    stream&lt;&lt;integer;\n    <span class=\"hljs-keyword\">return</span> stream.str();\n}\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    verify_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用人脸认证接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param uid 用户的id\n * @param images 多个base64编码的图像字符串（注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @param top_num 匹配得分top数，默认为1\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">verify</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;uid, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>&gt; &amp;images,\n           <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token, <span class=\"hljs-keyword\">int</span> top_num)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = verify_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> image_plain = images[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; images.size(); i++) {\n            image_plain.append(<span class=\"hljs-string\">\",\"</span> + images[i]);\n        }\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"uid\"</span>, CURLFORM_COPYCONTENTS, uid.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"images\"</span>, CURLFORM_COPYCONTENTS, image_plain.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"top_num\"</span>, CURLFORM_COPYCONTENTS, int_to_string(top_num).data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = verify_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n\n\n\n\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Verify</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 人脸认证</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">verify</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>\n\t\t\t<span class=\"hljs-keyword\">string</span> base645 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/face/search5.jpg\"</span>);\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/verify?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"images=\"</span> + HttpUtility.UrlEncode(base645);\n\t\t\tstr += <span class=\"hljs-string\">\"&amp;uid=songqingyun&amp;top_num=1\"</span>;\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"人脸认证:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"5ce77bda\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result_num</td><td>是</td><td>uint32</td><td>返回结果数目，即：result数组中元素个数</td></tr><tr><td>result</td><td>是</td><td>array(double)</td><td>结果数组，数组元素为匹配得分，top n。 得分范围[0,100.0]。得分超过80可认为认证成功</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"results\"</span>: [\n    <span class=\"hljs-number\">93.86580657959</span>,\n    <span class=\"hljs-number\">92.237548828125</span>\n  ],\n  <span class=\"hljs-attr\">\"result_num\"</span>: <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">1629483134</span>\n}</code>\n</pre><h1 id=\"f36e1715\">人脸注册</h1><h2 id=\"b8f51a4e\">接口描述</h2><p>用于从人脸库中新增用户，可以设定多个用户所在组，及组内用户的人脸图片，</p><p>典型应用场景：构建您的人脸库，如<strong>会员人脸注册</strong>，<strong>已有用户补全人脸信息</strong>等。</p><p>人脸库、用户组、用户、用户下的人脸<strong>层级关系</strong>如下所示：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-string\">|- 人脸库</span>\n   <span class=\"hljs-string\">|- 用户组一</span>\n      <span class=\"hljs-string\">|- 用户01</span>\n         <span class=\"hljs-string\">|- 人脸</span>\n      <span class=\"hljs-string\">|- 用户02</span>\n         <span class=\"hljs-string\">|- 人脸</span>\n         <span class=\"hljs-string\">|- 人脸</span>\n         ....\n       ....\n   <span class=\"hljs-string\">|- 用户组二</span>\n   <span class=\"hljs-string\">|- 用户组三</span>\n   <span class=\"hljs-string\">|- 用户组四</span>\n   ....</code>\n</pre><p><strong>说明：关于人脸库的设置限制</strong></p><ul><li>每个开发者账号只能创建一个人脸库；</li><li>每个人脸库下，可创建最多1000个用户组；</li><li>每个用户组下，可添加最多2000张人脸，最多1000个用户uid；</li><li>每个用户（uid）所能注册的最大人脸数量为5张；</li></ul><blockquote><p><strong>说明：</strong>人脸注册完毕后，生效时间最长为<strong>35s</strong>，之后便可以进行识别或认证操作。</p><p><strong>说明：</strong>注册的人脸，建议为用户正面人脸。</p></blockquote><h2 id=\"f816f0c6\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/faceset/u</span>ser<span class=\"hljs-regexp\">/add</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>uid</td><td>是</td><td>string</td><td>用户id（由数字、字母、下划线组成），长度限制128B</td></tr><tr><td>user_info</td><td>是</td><td>string</td><td>用户资料，长度限制256B</td></tr><tr><td>group_id</td><td>是</td><td>string</td><td>用户组id，标识一组用户（由数字、字母、下划线组成），长度限制128B</td></tr><tr><td>images</td><td>是</td><td>string</td><td>图像base64编码，可单次传入多张，多张图片半角逗号分隔，总共最大10M</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/add?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"uid\":\"testuid\", \"images\":\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/add?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"images\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * 人脸查找——注册\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Add</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸查找——注册 url</span>\n        String addUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/add\"</span>;\n        <span class=\"hljs-comment\">// 请求参数</span>\n        <span class=\"hljs-comment\">// 用户ID（用户自定义）</span>\n        String uid = <span class=\"hljs-string\">\"test_user_5\"</span>;\n        <span class=\"hljs-comment\">// 用户信息（用户自定义）</span>\n        String userInfo = <span class=\"hljs-string\">\"userInfo5\"</span>;\n        <span class=\"hljs-comment\">// 用户所属组（用户自定义）</span>\n        String groupId = <span class=\"hljs-string\">\"test_group_2\"</span>;\n        <span class=\"hljs-comment\">// 本地文件路径</span>\n        String filePath1 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        String filePath2 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">byte</span>[] imgData1 = FileUtil.readFileByBytes(filePath1);\n            <span class=\"hljs-keyword\">byte</span>[] imgData2 = FileUtil.readFileByBytes(filePath2);\n            String imgStr1 = Base64Util.encode(imgData1);\n            String imgStr2 = Base64Util.encode(imgData2);\n\n            String params = <span class=\"hljs-string\">\"uid=\"</span> + uid + <span class=\"hljs-string\">\"&amp;user_info=\"</span> + userInfo + <span class=\"hljs-string\">\"&amp;group_id=\"</span> + groupId + <span class=\"hljs-string\">\"&amp;\"</span>\n                    + URLEncoder.encode(<span class=\"hljs-string\">\"images\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>) + <span class=\"hljs-string\">\"=\"</span> + URLEncoder.encode(imgStr1 + <span class=\"hljs-string\">\",\"</span> + imgStr2, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(addUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸查找之注册接口\n'''</span>\n\naddUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/add\"</span>\n<span class=\"hljs-comment\"># 参数uid:用户id（由数字、字母、下划线组成），user_info:用户资料,group_id:用户组id,images:图像base64编码,多张图片半角逗号分隔</span>\nparams = {<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testuid\"</span>, <span class=\"hljs-string\">\"user_info\"</span>: <span class=\"hljs-string\">\"test_userinfo\"</span>, <span class=\"hljs-string\">\"group_id\"</span>: <span class=\"hljs-string\">\"test_groupid\"</span>,\n          <span class=\"hljs-string\">\"images\"</span>: <span class=\"hljs-string\">\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\naddUrl = addUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=addUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"add_user.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> add_user_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/add\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> add_user_result;\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    add_user_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用添加用户接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param uid 用户的user id\n * @param user_info 用户信息\n * @param group_id 用户组的id\n * @param images 多个base64编码的图像\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">add_user</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;uid, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;user_info,\n             <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;group_id, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>&gt; &amp;images, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = add_user_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> image_plain = images[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; images.size(); i++) {\n            image_plain.append(<span class=\"hljs-string\">\",\"</span> + images[i]);\n        }\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"uid\"</span>, CURLFORM_COPYCONTENTS, uid.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"user_info\"</span>, CURLFORM_COPYCONTENTS, user_info.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"group_id\"</span>, CURLFORM_COPYCONTENTS, group_id.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"images\"</span>, CURLFORM_COPYCONTENTS, image_plain.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = add_user_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Add</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 人脸注册</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">add</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> base641 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/face/search1.jpg\"</span>);\n\t\t\t<span class=\"hljs-keyword\">string</span> base642 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/face/search2.jpg\"</span>);\n\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/add?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"images=\"</span> + HttpUtility.UrlEncode(base641 + <span class=\"hljs-string\">\",\"</span> + base642);\n\t\t\tstr += <span class=\"hljs-string\">\"&amp;uid=songqingyun&amp;user_info={'k':'v','k2':'v2','k3':'v3'}&amp;group_id=demo\"</span>;\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"人脸注册:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"5b35d8e2\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 注册成功</span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">73473737</span>,\n}\n<span class=\"hljs-comment\">// 注册发生错误</span>\n{\n  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">216616</span>,\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">674786177</span>,\n  <span class=\"hljs-string\">\"error_msg\"</span>: <span class=\"hljs-string\">\"image exist\"</span>\n}</code>\n</pre><h1 id=\"bfd67a91\">人脸更新</h1><h2 id=\"9c96cf44\">接口描述</h2><p>用于对人脸库中指定用户，更新其下的人脸图像。</p><blockquote><p><strong>说明：</strong>新上传的人脸图像将覆盖原有所有图像。</p></blockquote><h2 id=\"e1a2aff9\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/faceset/u</span>ser<span class=\"hljs-regexp\">/update</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>uid</td><td>是</td><td>string</td><td>用户id（由数字、字母、下划线组成），长度限制128B</td></tr><tr><td>images</td><td>是</td><td>string</td><td>图像base64编码，可单次传入多张，多张图片半角逗号分隔，总共最大10M</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/update?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"uid\":\"testuid\", \"images\":\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/update?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"uid\\\":\\\"testuid\\\",\\\"images\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * 人脸查找——更新\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Update</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸查找——更新 url</span>\n        String updateUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/update\"</span>;\n        <span class=\"hljs-comment\">// 请求参数</span>\n        <span class=\"hljs-comment\">// 已经注册的用户ID</span>\n        String uid = <span class=\"hljs-string\">\"test_user_1\"</span>;\n        <span class=\"hljs-comment\">// 本地文件路径</span>\n        String filePath1 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        String filePath2 = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">byte</span>[] imgData1 = FileUtil.readFileByBytes(filePath1);\n            <span class=\"hljs-keyword\">byte</span>[] imgData2 = FileUtil.readFileByBytes(filePath2);\n\n            String imgStr1 = Base64Util.encode(imgData1);\n            String imgStr2 = Base64Util.encode(imgData2);\n\n            String params = <span class=\"hljs-string\">\"uid=\"</span> + uid + <span class=\"hljs-string\">\"&amp;\"</span> + URLEncoder.encode(<span class=\"hljs-string\">\"images\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>) + <span class=\"hljs-string\">\"=\"</span>\n                    + URLEncoder.encode(imgStr1 + <span class=\"hljs-string\">\",\"</span> + imgStr2, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(updateUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸查找之更新接口\n'''</span>\n\nupdateUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/update\"</span>\n<span class=\"hljs-comment\"># 参数uid:用户id（由数字、字母、下划线组成）,images:图像base64编码,多张图片半角逗号分隔</span>\nparams = {<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testuid\"</span>, <span class=\"hljs-string\">\"images\"</span>: <span class=\"hljs-string\">\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\nupdateUrl = updateUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=updateUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"update_user.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> update_user_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/update\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> update_user_result;\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    update_user_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用添加用户接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param uid 用户的id\n * @param images 多个base64编码的图像字符串（注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">update_user</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;uid, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>&gt; &amp;images,\n                <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = update_user_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> image_plain = images[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; images.size(); i++) {\n            image_plain.append(<span class=\"hljs-string\">\",\"</span> + images[i]);\n        }\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"uid\"</span>, CURLFORM_COPYCONTENTS, uid.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"images\"</span>, CURLFORM_COPYCONTENTS, image_plain.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = update_user_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n\n\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Update</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 人脸更新</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">update</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;;\n\t\t\t<span class=\"hljs-keyword\">string</span> base643 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/face/search3.jpg\"</span>);\n\t\t\t<span class=\"hljs-keyword\">string</span> base644 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/face/search4.jpg\"</span>);\n\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/update?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"images=\"</span> + HttpUtility.UrlEncode(base643 + <span class=\"hljs-string\">\",\"</span> + base644);\n\t\t\tstr += <span class=\"hljs-string\">\"&amp;uid=songqingyun\"</span>;\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"人脸更新:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"d3e33517\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 更新成功</span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">73473737</span>,\n}\n<span class=\"hljs-comment\">// 更新发生错误</span>\n{\n  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">216612</span>,\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">1137508902</span>,\n  <span class=\"hljs-string\">\"error_msg\"</span>: <span class=\"hljs-string\">\"user not exist\"</span>\n}</code>\n</pre><h1 id=\"ce765e87\">人脸删除</h1><h2 id=\"4e9470c1\">接口描述</h2><p>用于从人脸库中删除一个用户。</p><p><strong>人脸删除注意事项：</strong></p><ul><li>删除的内容，包括用户所有图像和身份信息；</li><li>如果一个uid存在于多个用户组内，将会同时将从各个组中把用户删除。</li></ul><h2 id=\"c90ba6fe\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/faceset/u</span>ser<span class=\"hljs-regexp\">/delete</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>uid</td><td>是</td><td>string</td><td>用户id（由数字、字母、下划线组成），长度限制128B</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/delete?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"uid\":\"testuid\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/delete?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"uid\\\":\\\"testuid\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-comment\">/**\n * 人脸查找——删除\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Delete</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸查找——删除 url</span>\n        String deleteUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/delete\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-comment\">// 请求参数</span>\n            <span class=\"hljs-comment\">// 用户ID</span>\n            String uid = <span class=\"hljs-string\">\"test_user_5\"</span>;\n            String params = <span class=\"hljs-string\">\"uid=\"</span> + uid;\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(deleteUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸查找之删除接口\n'''</span>\n\ndeleteUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/delete\"</span>\n<span class=\"hljs-comment\"># 参数uid：用户id（由数字、字母、下划线组成），长度限制128B</span>\nparams = {<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testuid\"</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\ndeleteUrl = deleteUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=deleteUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"delete_user.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> update_user_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/delete\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> delete_user_result;\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    delete_user_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用添加用户接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param uid 用户id\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">delete_user</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;uid, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = update_user_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"uid\"</span>, CURLFORM_COPYCONTENTS, uid.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = delete_user_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n\n\n\n\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">APIFace</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Delete</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 人脸删除</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">delete</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/delete?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"uid=songqingyun\"</span>;\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"人脸删除:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"03a7ea10\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 删除成功</span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">73473737</span>,\n}\n<span class=\"hljs-comment\">// 删除发生错误</span>\n{\n  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">216612</span>,\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">1382953199</span>,\n  <span class=\"hljs-string\">\"error_msg\"</span>: <span class=\"hljs-string\">\"user not exist\"</span>\n}</code>\n</pre><h1 id=\"cae36fb9\">用户信息查询</h1><h2 id=\"f87309b9\">接口描述</h2><p>用于查询人脸库中某用户的详细信息。</p><h2 id=\"54c7508f\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/faceset/u</span>ser<span class=\"hljs-regexp\">/get</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>uid</td><td>是</td><td>string</td><td>用户id（由数字、字母、下划线组成），长度限制128B</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/get?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"group_id\":\"gid\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/get?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"group_id\\\":\\\"gid\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-comment\">/**\n * 人脸查找——用户信息查询\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Get</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸查找——用户信息查询 url</span>\n        String getUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/get\"</span>;\n        <span class=\"hljs-comment\">// 请求参数</span>\n        <span class=\"hljs-comment\">// 用户ID</span>\n        String uid = <span class=\"hljs-string\">\"test_user_1\"</span>;\n        String params = <span class=\"hljs-string\">\"uid=\"</span> + uid;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(getUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸查找之用户信息查询接口\n'''</span>\n\nuserInfoUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/get\"</span>\nparams = {<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testuid\"</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\nuserInfoUrl = userInfoUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=userInfoUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"get_user.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> get_user_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/identify\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> get_user_result;\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    get_user_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用用户信息查询接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param uid 用户的user id\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">get_user</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;uid,\n             <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = get_user_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"uid\"</span>, CURLFORM_COPYCONTENTS, uid.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = get_user_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n\n\n\n\n\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Get</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 用户信息查询</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">get</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/user/get?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> str = <span class=\"hljs-string\">\"&amp;uid=songqingyun\"</span>;\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"用户信息查询:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"9cf4800a\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result</td><td>是</td><td>array(double)</td><td>结果数组</td></tr><tr><td>+uid</td><td>是</td><td>string</td><td>匹配到的用户id</td></tr><tr><td>+user_info</td><td>是</td><td>string</td><td>注册时的用户信息</td></tr><tr><td>+groups</td><td>是</td><td>array(string)</td><td>用户所属组列表</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"result\"</span>: {\n        <span class=\"hljs-attr\">\"uid\"</span>: <span class=\"hljs-string\">\"testuser2\"</span>,\n        <span class=\"hljs-attr\">\"user_info\"</span>: <span class=\"hljs-string\">\"registed user info ...\"</span>,\n        <span class=\"hljs-attr\">\"groups\"</span>: [\n            <span class=\"hljs-string\">\"grp1\"</span>,\n            <span class=\"hljs-string\">\"grp2\"</span>,\n            <span class=\"hljs-string\">\"grp3\"</span>\n        ]\n    },\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">2979357502</span>\n}</code>\n</pre><h1 id=\"5d43c9c9\">组列表查询</h1><h2 id=\"746ba739\">接口描述</h2><p>用于查询用户组的列表。</p><h2 id=\"64f45d06\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/faceset/g</span>roup<span class=\"hljs-regexp\">/getlist</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>start</td><td>否</td><td>uint32</td><td>默认值0，起始序号</td></tr><tr><td>end</td><td>否</td><td>uint32</td><td>返回数量，默认值100，最大值1000</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getlist?access_token=24. a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"start\":\"0\",\"num\":\"100\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getusers?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"group_id\\\":\\\"gid\\\",\\\"start\\\":\\\"0\\\",\\\"num\\\":\\\"100\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-comment\">/**\n * 人脸查找——组列表查询\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GetList</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸查找——组列表查询 url</span>\n        String getListUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getlist\"</span>;\n        <span class=\"hljs-comment\">// 请求参数</span>\n        <span class=\"hljs-comment\">// 起始编号</span>\n        String start = <span class=\"hljs-string\">\"0\"</span>;\n        <span class=\"hljs-comment\">// 结束编号</span>\n        String end = <span class=\"hljs-string\">\"100\"</span>;\n        String params = <span class=\"hljs-string\">\"start=\"</span> + start + <span class=\"hljs-string\">\"&amp;end=\"</span> + end;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(getListUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸查找之组列表查询接口\n'''</span>\n\ngetListUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getlist\"</span>\n<span class=\"hljs-comment\"># 参数start：默认值0，起始序号   end：返回数量，默认值100，最大值1000</span>\nparams = {<span class=\"hljs-string\">\"start\"</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">\"end\"</span>: <span class=\"hljs-number\">100</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\ngetListUrl = getListUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=getListUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;sstream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"get_group_list.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> get_group_list_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getlist\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> get_group_list_result;\n\n<span class=\"hljs-keyword\">inline</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-function\"><span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">int_to_string</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> integer)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> stream;\n    stream &lt;&lt; integer;\n    <span class=\"hljs-keyword\">return</span> stream.str();\n}\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    get_group_list_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用组列表查询接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @param start 起始序号，默认值0\n * @param end 返回数量，默认值100，最大值1000\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">get_group_list</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token, <span class=\"hljs-keyword\">int</span> start, <span class=\"hljs-keyword\">int</span> end)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = get_group_list_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"start\"</span>, CURLFORM_COPYCONTENTS, int_to_string(start).data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"end\"</span>, CURLFORM_COPYCONTENTS, int_to_string(end).data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = get_group_list_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GetList</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 组列表查询</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">getlist</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getlist?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> str = <span class=\"hljs-string\">\"&amp;start=0&amp;end=100\"</span>;\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"组列表查询:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"44ebfe6f\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result_num</td><td>是</td><td>uint32</td><td>返回个数</td></tr><tr><td>result</td><td>是</td><td>array(string)</td><td>group_id列表</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"result_num\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-attr\">\"result\"</span>: [\n        <span class=\"hljs-string\">\"grp1\"</span>,\n        <span class=\"hljs-string\">\"grp2\"</span>\n    ],\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">3314921889</span>\n}</code>\n</pre><h1 id=\"697ae6d2\">组内用户列表查询</h1><h2 id=\"2feecc72\">接口描述</h2><p>用于查询指定用户组中的用户列表。</p><h2 id=\"d3c3f4ff\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/faceset/g</span>roup<span class=\"hljs-regexp\">/getusers</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>group_id</td><td>是</td><td>string</td><td>用户组id</td></tr><tr><td>start</td><td>否</td><td>uint32</td><td>默认值0，起始序号</td></tr><tr><td>end</td><td>否</td><td>uint32</td><td>返回数量，默认值100，最大值1000</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getusers?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"group_id\":\"gid\",\"start\":\"0\",\"num\":\"100\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getusers?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"group_id\\\":\\\"gid\\\",\\\"start\\\":\\\"0\\\",\\\"num\\\":\\\"100\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-comment\">/**\n * 人脸查找——组内用户列表查询\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GetUsers</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸查找——组内用户列表查询 url</span>\n        String getUsersUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getusers\"</span>;\n        <span class=\"hljs-comment\">// 请求参数</span>\n        <span class=\"hljs-comment\">// 用户组ID</span>\n        String groupId = <span class=\"hljs-string\">\"test_group_2\"</span>;\n        <span class=\"hljs-comment\">// 起始编号</span>\n        String start = <span class=\"hljs-string\">\"0\"</span>;\n        <span class=\"hljs-comment\">// 结束编号</span>\n        String end = <span class=\"hljs-string\">\"100\"</span>;\n        String params = <span class=\"hljs-string\">\"group_id=\"</span> + groupId + <span class=\"hljs-string\">\"&amp;start=\"</span> + start + <span class=\"hljs-string\">\"&amp;end=\"</span> + end;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(getUsersUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸查找之组内用户列表查询接口\n'''</span>\n\ngetUsersUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getusers\"</span>\n<span class=\"hljs-comment\"># 参数group_id：用户组id   start:默认值0，起始序号   end:返回数量，默认值100，最大值1000</span>\nparams = dict(group_id=<span class=\"hljs-string\">\"gid\"</span>, start=<span class=\"hljs-number\">0</span>, end=<span class=\"hljs-number\">100</span>)\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\ngetUsersUrl = getUsersUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=getUsersUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;sstream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"get_group_user.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> get_group_user_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getusers\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> get_group_user_result;\n\n<span class=\"hljs-keyword\">inline</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-function\"><span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">int_to_string</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> integer)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> stream;\n    stream &lt;&lt; integer;\n    <span class=\"hljs-keyword\">return</span> stream.str();\n}\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    get_group_user_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用组内用户列表查询接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param group_id 用户组的id\n * @param images 多个base64编码的图像字符串（注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @param user_top_num 返回用户top数，默认为1\n * @param face_top_num 单用户人脸匹配top数，默认为1\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">get_group_user</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;group_id, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token, <span class=\"hljs-keyword\">int</span> start,\n                   <span class=\"hljs-keyword\">int</span> end)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = get_group_user_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"group_id\"</span>, CURLFORM_COPYCONTENTS, group_id.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"start\"</span>, CURLFORM_COPYCONTENTS, int_to_string(start).data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"end\"</span>, CURLFORM_COPYCONTENTS, int_to_string(end).data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = get_group_user_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GetUser</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 组内用户列表查询</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">getusers</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getusers?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> str = <span class=\"hljs-string\">\"group_id=demo&amp;start=0&amp;end=100\"</span>;\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"组内用户列表查询:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"3dc6197b\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr><tr><td>result_num</td><td>是</td><td>uint32</td><td>返回个数</td></tr><tr><td>result</td><td>是</td><td>array(object)</td><td>user列表</td></tr><tr><td>+uid</td><td>是</td><td>string</td><td>用户id</td></tr><tr><td>+user_info</td><td>是</td><td>string</td><td>用户信息</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">3314921889</span>,\n    <span class=\"hljs-attr\">\"result_num\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-attr\">\"result\"</span>: [\n        {\n            <span class=\"hljs-attr\">\"uid\"</span>: <span class=\"hljs-string\">\"uid1\"</span>,\n            <span class=\"hljs-attr\">\"user_info\"</span>: <span class=\"hljs-string\">\"user info 1\"</span>\n        },\n        {\n            <span class=\"hljs-attr\">\"uid\"</span>: <span class=\"hljs-string\">\"uid2\"</span>,\n            <span class=\"hljs-attr\">\"user_info\"</span>: <span class=\"hljs-string\">\"user info 2\"</span>\n        }\n    ]\n}</code>\n</pre><h1 id=\"9dbb9590\">组内添加用户</h1><h2 id=\"26b19b3b\">接口描述</h2><p>用于将已经存在于人脸库中的用户添加到一个新的组。</p><h2 id=\"0ea963eb\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/faceset/g</span>roup<span class=\"hljs-regexp\">/adduser</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>group_id</td><td>是</td><td>string</td><td>用户组id</td></tr><tr><td>uid</td><td>是</td><td>string</td><td>用户id</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/adduser?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"group_id\":\"gid\",\"uid\":\"test_uid\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getusers?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"group_id\\\":\\\"gid\\\",\\\"uid\\\":\\\"test_uid\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-comment\">/**\n * 人脸查找——组内添加用户\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AddUser</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸查找——组内添加用户 url</span>\n        String addUserUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/adduser\"</span>;\n        <span class=\"hljs-comment\">// 请求参数</span>\n        <span class=\"hljs-comment\">// 用户组</span>\n        String groupId = <span class=\"hljs-string\">\"test_group_2\"</span>;\n        <span class=\"hljs-comment\">// 用户ID</span>\n        String uid = <span class=\"hljs-string\">\"test_user_1\"</span>;\n        String params = <span class=\"hljs-string\">\"group_id=\"</span> + groupId + <span class=\"hljs-string\">\"&amp;uid=\"</span> + uid;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(addUserUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸查找之组内添加用户接口\n'''</span>\n\naddUsersUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/adduser\"</span>\n<span class=\"hljs-comment\"># 参数group_id：用户组id  uid：用户id</span>\nparams = dict(group_id=<span class=\"hljs-string\">\"gid\"</span>, uid=<span class=\"hljs-string\">\"test_uid\"</span>)\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\naddUsersUrl = addUsersUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=addUsersUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"group_add_user.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> group_add_user_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/adduser\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> group_add_user_result;\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    group_add_user_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用组内添加用户接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param group_id 用户组的id\n * @param uid 用户id\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">group_add_user</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;group_id, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;uid, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = group_add_user_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"group_id\"</span>, CURLFORM_COPYCONTENTS, group_id.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"uid\"</span>, CURLFORM_COPYCONTENTS, uid.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = group_add_user_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AddUser</span>\n\t{\n\t\t<span class=\"hljs-comment\">//组内添加用户</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">adduser</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/adduser?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> str = <span class=\"hljs-string\">\"group_id=demo&amp;uid=songqingyun2\"</span>;\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"组内添加用户:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"eb8293af\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 正确返回值 </span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">3314921889</span>,\n}\n<span class=\"hljs-comment\">// 发生错误时返回值 </span>\n{\n  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">216100</span>,\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">3111284097</span>,\n  <span class=\"hljs-string\">\"error_msg\"</span>: <span class=\"hljs-string\">\"already add\"</span>\n}</code>\n</pre><h1 id=\"360918a0\">组内删除用户</h1><h2 id=\"958d8768\">接口描述</h2><p>用于将用户从某个组中删除，但不会删除用户在其它组的信息。</p><blockquote><p><strong>说明：</strong>当用户仅属于单个分组时，本接口将返回错误，请使用<strong>人脸删除接口</strong></p></blockquote><h2 id=\"3ba5b11e\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/faceverify/</span>v1<span class=\"hljs-regexp\">/faceset/g</span>roup<span class=\"hljs-regexp\">/deleteuser</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>group_id</td><td>是</td><td>string</td><td>用户组id</td></tr><tr><td>uid</td><td>是</td><td>string</td><td>用户id</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/deleteuser?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"group_id\":\"gid\",\"uid\":\"test_uid\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span>\n\n</code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/deleteuser?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"group_id\\\":\\\"gid\\\",\\\"uid\\\":\\\"test_uid\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-comment\">/**\n * 人脸查找——组内删除用户\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DeleteUser</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸查找——组内删除用户 url</span>\n        String deleteUserUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/deleteuser\"</span>;\n        <span class=\"hljs-comment\">// 请求参数</span>\n        <span class=\"hljs-comment\">// 用户所在组</span>\n        String groupId = <span class=\"hljs-string\">\"test_group_2\"</span>;\n        <span class=\"hljs-comment\">// 用户ID</span>\n        String uid = <span class=\"hljs-string\">\"test_user_1\"</span>;\n        String params = <span class=\"hljs-string\">\"group_id=\"</span> + groupId + <span class=\"hljs-string\">\"&amp;uid=\"</span> + uid;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(deleteUserUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n人脸查找之组内删除用户接口\n'''</span>\n\ndeleteUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/deleteuser\"</span>\nparams = dict(group_id=<span class=\"hljs-string\">\"gid\"</span>, uid=<span class=\"hljs-string\">\"test_uid\"</span>)\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\ndeleteUrl = deleteUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=deleteUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"group_delete_user.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// 接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> group_delete_user_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/deleteuser\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> group_delete_user_result;\n\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    group_delete_user_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n\n<span class=\"hljs-comment\">/**\n * 调用组内删除用户接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param group_id 用户组的id\n * @param uid 用户id\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">group_delete_user</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;group_id, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;uid, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = group_delete_user_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"group_id\"</span>, CURLFORM_COPYCONTENTS, group_id.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"uid\"</span>, CURLFORM_COPYCONTENTS, uid.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = group_delete_user_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DeleteUser</span>\n\t{\n\t\t<span class=\"hljs-comment\">//组内删除用户</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">deleteuser</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/deleteuser?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> str = <span class=\"hljs-string\">\"group_id=demo&amp;uid=songqingyun2\"</span>;\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"组内删除用户:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"3f4c95ec\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>是</td><td>uint64</td><td>请求标识码，随机数，唯一</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-comment\">// 正确返回值 </span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">3314921889</span>,\n}\n<span class=\"hljs-comment\">// 发生错误时返回值 </span>\n{\n  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">216619</span>,\n  <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">815967402</span>,\n  <span class=\"hljs-string\">\"error_msg\"</span>: <span class=\"hljs-string\">\"user must be in one group at least\"</span>\n}</code>\n</pre><h1 id=\"0644b86e\">错误码</h1><p>若请求错误，服务器将返回的JSON文本包含以下参数：</p><ul><li><p><strong>error_code：</strong>错误码。</p></li><li><p><strong>error_msg：</strong>错误描述信息，帮助理解和解决发生的错误。</p></li></ul><p>例如Access Token失效返回：</p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"error_code\"</span>: <span class=\"hljs-number\">110</span>,\n  <span class=\"hljs-attr\">\"error_msg\"</span>: <span class=\"hljs-string\">\"Access token invalid or no longer valid\"</span>\n}</code>\n</pre><p>需要重新获取新的Access Token再次请求即可。</p><table><thead><tr><th>错误码</th><th>错误信息</th><th>描述</th></tr></thead><tbody><tr><td>4</td><td>Open api request limit reached</td><td>集群超限额</td></tr><tr><td>17</td><td>Open api daily request limit reached</td><td>每天流量超限额</td></tr><tr><td>18</td><td>Open api qps request limit reached</td><td>QPS超限额</td></tr><tr><td>19</td><td>Open api total request limit reached</td><td>请求总量超限额</td></tr><tr><td>100</td><td>Invalid parameter</td><td>无效参数</td></tr><tr><td>110</td><td>Access token invalid or no longer valid</td><td>Access Token失效</td></tr><tr><td>111</td><td>Access token expired</td><td>Access token过期</td></tr><tr><td>216015</td><td>module closed</td><td>模块关闭</td></tr><tr><td>216100</td><td>invalid param</td><td>非法参数</td></tr><tr><td>216101</td><td>not enough param</td><td>参数数量不够</td></tr><tr><td>216102</td><td>service not support</td><td>业务不支持</td></tr><tr><td>216103</td><td>param too long</td><td>参数太长</td></tr><tr><td>216110</td><td>appid not exist</td><td>APP ID不存在</td></tr><tr><td>216111</td><td>invalid userid</td><td>非法用户ID</td></tr><tr><td>216200</td><td>empty image</td><td>空的图片</td></tr><tr><td>216201</td><td>image format error</td><td>图片格式错误</td></tr><tr><td>216202</td><td>image size error</td><td>图片大小错误</td></tr><tr><td>216300</td><td>db error</td><td>DB错误</td></tr><tr><td>216400</td><td>backend error</td><td>后端系统错误</td></tr><tr><td>216401</td><td>internal error</td><td>内部错误</td></tr><tr><td>216402</td><td>face not found</td><td>没有找到人脸</td></tr><tr><td>216500</td><td>unknown error</td><td>未知错误</td></tr><tr><td>216611</td><td>user not exist</td><td>用户不存在</td></tr><tr><td>216613</td><td>user not found</td><td>用户查找不到</td></tr><tr><td>216614</td><td>not enough images</td><td>图片信息不完整</td></tr><tr><td>216615</td><td>fail to process images</td><td>处理图片信息失败</td></tr><tr><td>216616</td><td>image existed</td><td>图片已存在</td></tr><tr><td>216617</td><td>fail to add user</td><td>添加用户失败</td></tr><tr><td>216618</td><td>no user in group</td><td>群组里没有用户</td></tr><tr><td>216630</td><td>recognize error</td><td>识别错误</td></tr></tbody></table>",
  "headings": [
    {
      "level": 1,
      "text": "简介",
      "id": "0015607b"
    },
    {
      "level": 2,
      "text": "接口能力",
      "id": "b9b18659"
    },
    {
      "level": 2,
      "text": "请求格式",
      "id": "facc7c00"
    },
    {
      "level": 2,
      "text": "返回格式",
      "id": "7559fc4b"
    },
    {
      "level": 2,
      "text": "请求限制",
      "id": "58f0c02c"
    },
    {
      "level": 1,
      "text": "调用方式",
      "id": "195ca677"
    },
    {
      "level": 2,
      "text": "调用方式一",
      "id": "5ecc8e57"
    },
    {
      "level": 2,
      "text": "调用方式二",
      "id": "d589e0c5"
    },
    {
      "level": 1,
      "text": "人脸检测",
      "id": "cbad2ddc"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "1719adcc"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "2c8abf58"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "51927122"
    },
    {
      "level": 1,
      "text": "人脸比对",
      "id": "836297b5"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "2a33015f"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "84ce155b"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "482a80c3"
    },
    {
      "level": 1,
      "text": "人脸识别",
      "id": "e6e54909"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "97e901d9"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "6c3d6adb"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "569145f8"
    },
    {
      "level": 1,
      "text": "人脸认证",
      "id": "80e483f1"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "260b5630"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "a4f5c1f2"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "5ce77bda"
    },
    {
      "level": 1,
      "text": "人脸注册",
      "id": "f36e1715"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "b8f51a4e"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "f816f0c6"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "5b35d8e2"
    },
    {
      "level": 1,
      "text": "人脸更新",
      "id": "bfd67a91"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "9c96cf44"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "e1a2aff9"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "d3e33517"
    },
    {
      "level": 1,
      "text": "人脸删除",
      "id": "ce765e87"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "4e9470c1"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "c90ba6fe"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "03a7ea10"
    },
    {
      "level": 1,
      "text": "用户信息查询",
      "id": "cae36fb9"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "f87309b9"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "54c7508f"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "9cf4800a"
    },
    {
      "level": 1,
      "text": "组列表查询",
      "id": "5d43c9c9"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "746ba739"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "64f45d06"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "44ebfe6f"
    },
    {
      "level": 1,
      "text": "组内用户列表查询",
      "id": "697ae6d2"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "2feecc72"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "d3c3f4ff"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "3dc6197b"
    },
    {
      "level": 1,
      "text": "组内添加用户",
      "id": "9dbb9590"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "26b19b3b"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "0ea963eb"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "eb8293af"
    },
    {
      "level": 1,
      "text": "组内删除用户",
      "id": "360918a0"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "958d8768"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "3ba5b11e"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "3f4c95ec"
    },
    {
      "level": 1,
      "text": "错误码",
      "id": "0644b86e"
    }
  ]
}
