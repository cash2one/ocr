{
  "html": "<h1 id=\"2a8d26ce\">简介</h1><p>本文档主要针对API开发者，调用AI服务相关的API接口有两种调用方式，两种不同的调用方式采用相同的接口URL，区别在于请求方式和鉴权方法不一样，请求参数和返回结果一致。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title ${titleClass}\" data-index=\"0\">C++</div><div class=\"code-block-title ${titleClass}\" data-index=\"1\">java</div><div class=\"code-block-title ${titleClass}\" data-index=\"2\">python</div><div class=\"code-block-title ${titleClass}\" data-index=\"3\">PHP</div><div class=\"code-block-title ${titleClass}\" data-index=\"4\">C#</div></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/property_tree/ptree.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/property_tree/json_parser.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/date_time.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"antiporn.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">// 黄反接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> antiporn_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/antiporn/v1/detect\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> antiporn_result;\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    antiporn_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n<span class=\"hljs-comment\">/**\n * 调用黄反接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param image_base64 以string格式传递的base64编码的图像数据（注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">antiporn_detect</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;image_base64, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = antiporn_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"image\"</span>, CURLFORM_COPYCONTENTS, image_base64.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = antiporn_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n</code></pre></div><div data-lan=\"java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.face;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * 人脸探测\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Detect</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 重要提示代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://github.com/Baidu-AIP/Demo/blob/master/java/com/baidu/ai/aip/utils/FileUtil.java\n     * https://github.com/Baidu-AIP/Demo/blob/master/java/com/baidu/ai/aip/utils/Base64Util.java\n     * https://github.com/Baidu-AIP/Demo/blob/master/java/com/baidu/ai/aip/utils/HttpUtil.java\n     * 下载\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 人脸检测 url</span>\n        String detectUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/face/v1/detect\"</span>;\n        <span class=\"hljs-comment\">// 本地文件路径</span>\n        String filePath = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">byte</span>[] imgData = FileUtil.readFileByBytes(filePath);\n            String imgStr = Base64Util.encode(imgData);\n            System.out.println(<span class=\"hljs-string\">\"imgStr:\"</span> + imgStr);\n            <span class=\"hljs-comment\">// face_fields 自定之指定返回的人脸特征值</span>\n            String params =\n                    <span class=\"hljs-string\">\"max_face_num=5&amp;face_fields=age,beauty,expression,faceshape,gender,glasses,landmark,race,qualities&amp;\"</span>\n                            + URLEncoder.encode(<span class=\"hljs-string\">\"image\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>) + <span class=\"hljs-string\">\"=\"</span> + URLEncoder.encode(imgStr, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(detectUrl, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n}\n</code></pre></div><div data-lan=\"python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n\n<span class=\"hljs-keyword\">from</span> token <span class=\"hljs-keyword\">import</span> access_token\n\n<span class=\"hljs-string\">'''\n黄反识别接口\n'''</span>\n\ndetectUrl = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/antiporn/v1/detect\"</span>\n<span class=\"hljs-comment\"># 参数image：图像base64编码</span>\nparams = {<span class=\"hljs-string\">\"image\"</span>: <span class=\"hljs-string\">\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"</span>}\nparams = urllib.urlencode(params)\naccess_token = access_token.AuthService()\ndetectUrl = detectUrl + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token\nrequest = urllib2.Request(url=detectUrl, data=params)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nresponse = urllib2.urlopen(request)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> content:\n    <span class=\"hljs-keyword\">print</span> content\n</code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/faceverify/v1/faceset/group/getusers?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"group_id\\\":\\\"gid\\\",\\\"start\\\":\\\"0\\\",\\\"num\\\":\\\"100\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.Net.Http;\n<span class=\"hljs-keyword\">using</span> System.Web.Script.Serialization;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">baiduaip</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Nlp</span>\n\t{\n\n\t\t<span class=\"hljs-comment\">//分词接口</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">wordseg</span>(<span class=\"hljs-params\"></span>) </span>{ \n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordseg\"</span>;\n\t\t\tList&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt; paraList = <span class=\"hljs-keyword\">new</span> List&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"access_token\"</span>, AccessToken.TOKEN));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"query\"</span>, <span class=\"hljs-string\">\"百度是一家高科技公司\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"lang_id\"</span>, <span class=\"hljs-string\">\"1\"</span>));<span class=\"hljs-comment\">// 输入字符串的语言对应的id，简体中文设置为1（目前不支持其他语言）</span>\n\t\t\tHttpClient client = <span class=\"hljs-keyword\">new</span> HttpClient();\n\t\t\tHttpResponseMessage response = client.PostAsync(host, <span class=\"hljs-keyword\">new</span> FormUrlEncodedContent(paraList)).Result;\n\t\t\t<span class=\"hljs-keyword\">string</span> result = response.Content.ReadAsStringAsync().Result;\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\n\t\t<span class=\"hljs-comment\">//词性标注接口</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">wordpos</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordpos\"</span>;\n\t\t\tList&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt; paraList = <span class=\"hljs-keyword\">new</span> List&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"access_token\"</span>, AccessToken.TOKEN));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"query\"</span>, <span class=\"hljs-string\">\"你好百度\"</span>));\n\t\t\tHttpClient client = <span class=\"hljs-keyword\">new</span> HttpClient();\n\t\t\tHttpResponseMessage response = client.PostAsync(host, <span class=\"hljs-keyword\">new</span> FormUrlEncodedContent(paraList)).Result;\n\t\t\t<span class=\"hljs-keyword\">string</span> result = response.Content.ReadAsStringAsync().Result;\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\n\t\t<span class=\"hljs-comment\">//词向量表示接口</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">wordembedding</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/wordembedding\"</span>;\n\t\t\tList&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt; paraList = <span class=\"hljs-keyword\">new</span> List&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"access_token\"</span>, AccessToken.TOKEN));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"query1\"</span>, <span class=\"hljs-string\">\"百度\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"query2\"</span>, <span class=\"hljs-string\">\"谷歌\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"tid\"</span>, <span class=\"hljs-string\">\"1\"</span>));\n\n\t\t\tHttpClient client = <span class=\"hljs-keyword\">new</span> HttpClient();\n\t\t\tHttpResponseMessage response = client.PostAsync(host, <span class=\"hljs-keyword\">new</span> FormUrlEncodedContent(paraList)).Result;\n\t\t\t<span class=\"hljs-keyword\">string</span> result = response.Content.ReadAsStringAsync().Result;\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\n\t\t<span class=\"hljs-comment\">//中文DNN语言模型</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">dnnlmcn</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/dnnlm_cn\"</span>;\n\t\t\tList&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt; paraList = <span class=\"hljs-keyword\">new</span> List&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"access_token\"</span>, AccessToken.TOKEN));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"input_sequence\"</span>, <span class=\"hljs-string\">\"百度是个搜索公司\"</span>));\n\t\t\tHttpClient client = <span class=\"hljs-keyword\">new</span> HttpClient();\n\t\t\tHttpResponseMessage response = client.PostAsync(host, <span class=\"hljs-keyword\">new</span> FormUrlEncodedContent(paraList)).Result;\n\t\t\t<span class=\"hljs-keyword\">string</span> result = response.Content.ReadAsStringAsync().Result;\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\n\t\t<span class=\"hljs-comment\">//短文本相似度接口</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">simnet</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/simnet?access_token=\"</span> + AccessToken.TOKEN;\n\t\t\tList&lt;Dictionary&lt;<span class=\"hljs-keyword\">string</span>,<span class=\"hljs-keyword\">string</span>&gt;&gt; qslots = <span class=\"hljs-keyword\">new</span> List&lt;Dictionary&lt;<span class=\"hljs-keyword\">string</span>,<span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt; qslotsp = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;();\n\t\t\tqslotsp.Add(<span class=\"hljs-string\">\"terms_sequence\"</span>,<span class=\"hljs-string\">\"你好世界\"</span>);\n\t\t\tqslotsp.Add(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-string\">\"0\"</span>);\n\t\t\tqslotsp.Add(<span class=\"hljs-string\">\"items\"</span>, <span class=\"hljs-string\">\"[]\"</span>);\n\t\t\tqslots.Add(qslotsp);\n\n\t\t\tList&lt;Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt; tslots = <span class=\"hljs-keyword\">new</span> List&lt;Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt; tslotsp = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;();\n\t\t\ttslotsp.Add(<span class=\"hljs-string\">\"terms_sequence\"</span>, <span class=\"hljs-string\">\"你好百度\"</span>);\n\t\t\ttslotsp.Add(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-string\">\"0\"</span>);\n\t\t\ttslotsp.Add(<span class=\"hljs-string\">\"items\"</span>, <span class=\"hljs-string\">\"[]\"</span>);\n\t\t\ttslots.Add(tslotsp);\n\n\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt; input = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt;();\n\t\t\tinput.Add(<span class=\"hljs-string\">\"qslots\"</span>, qslots);\n\t\t\tinput.Add(<span class=\"hljs-string\">\"tslotsp\"</span>, tslotsp);\n\t\t\tinput.Add(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-string\">\"0\"</span>);\n\n\t\t\tDictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt; param = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">object</span>&gt;();\n\t\t\tparam.Add(<span class=\"hljs-string\">\"input\"</span>, input);\n\n\t\t\tJavaScriptSerializer json = <span class=\"hljs-keyword\">new</span> JavaScriptSerializer();\n\t\t\t<span class=\"hljs-keyword\">string</span> paramstr = json.Serialize(param);\n\t\t\tHttpClient client = <span class=\"hljs-keyword\">new</span> HttpClient();\n\t\t\tHttpResponseMessage response = client.PostAsync(host, <span class=\"hljs-keyword\">new</span> StringContent(paramstr)).Result;\n\t\t\t<span class=\"hljs-keyword\">string</span> result = response.Content.ReadAsStringAsync().Result;\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\n\t\t<span class=\"hljs-comment\">//评论观点抽取接口</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">commenttag</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rpc/2.0/nlp/v1/comment_tag\"</span>;\n\t\t\tList&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt; paraList = <span class=\"hljs-keyword\">new</span> List&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"access_token\"</span>, AccessToken.TOKEN));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"comment\"</span>, <span class=\"hljs-string\">\"个人觉得福克斯好，外观漂亮年轻，动力和操控性都不错\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"entity\"</span>, <span class=\"hljs-string\">\"NULL\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"type\"</span>, <span class=\"hljs-string\">\"10\"</span>));\n\t\t\tHttpClient client = <span class=\"hljs-keyword\">new</span> HttpClient();\n\t\t\tHttpResponseMessage response = client.PostAsync(host, <span class=\"hljs-keyword\">new</span> FormUrlEncodedContent(paraList)).Result;\n\t\t\t<span class=\"hljs-keyword\">string</span> result = response.Content.ReadAsStringAsync().Result;\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\n\t}\n}\n</code></pre></div></div><p><strong>请求消息体格式</strong></p><p>API服务要求使用POST方式调用，Content-Type为application/x-www-form-urlencoded，然后通过urlencode格式化请求体。</p><p><strong>请求返回格式</strong></p><p>API服务均采用JSON格式的消息体作为响应返回的格式。</p><p><strong>服务限制</strong></p><p>OCR服务对图片格式、图片大小有限制，格式支持jpg、png，长宽都要小于2048px。</p><h1 id=\"8f627763\">调用方式一</h1><h2 id=\"b878161a\">请求URL数据格式</h2><p>向API服务地址使用POST发送请求，必须在URL中带上参数：</p><p><strong>access_token:</strong> 必须参数，参考“<a href=\"http://ai.baidu.com/docs#Beginner-Auth\" target=\"_blank\">Access Token获取</a>”。</p><p>POST中参数按照API接口说明调用即可。</p><p>例如文字识别API，使用HTTPS POST发送：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-symbol\">https:</span>//aip.baidubce.com/<span class=\"hljs-built_in\">rest</span>/<span class=\"hljs-number\">2.0</span>/ocr/v1/general?access_token=<span class=\"hljs-number\">24.</span>f9ba9c5241b67688bb4adbed8bc91dec<span class=\"hljs-meta\">.2592000</span><span class=\"hljs-meta\">.1485570332</span><span class=\"hljs-meta\">.282335</span>-<span class=\"hljs-number\">8574074</span></code>\n</pre><blockquote><p><strong>说明：</strong>方式一鉴权使用的Access_token必须通过API Key和Secret Key获取。</p></blockquote><h1 id=\"9f91389a\">调用方式二</h1><h2 id=\"40c85d4d\">请求头域内容</h2><p>OCR的API服务需要在请求的HTTP头域中包含以下信息：</p><ul><li>host（必填）</li><li>x-bce-date （必填）</li><li>x-bce-request-id（选填）</li><li>authorization（必填）</li><li>content-type（选填）</li><li>content-length（选填）</li></ul><p>作为示例，以下是一个标准的请求头域内容:</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/rest/2.0/ocr/v1/general?</span> HTTP/1.1\n<span class=\"hljs-attribute\">accept-encoding</span>: gzip, deflate\n<span class=\"hljs-attribute\">x-bce-date</span>: 2015-03-24T13:02:00Z\n<span class=\"hljs-attribute\">connection</span>: keep-alive\n<span class=\"hljs-attribute\">accept</span>: */*\n<span class=\"hljs-attribute\">host</span>: aip.baidubce.com\n<span class=\"hljs-attribute\">x-bce-request-id</span>: 73c4e74c-3101-4a00-bf44-fe246959c05e\n<span class=\"hljs-attribute\">content-type</span>: application/x-www-form-urlencoded\n<span class=\"hljs-attribute\">authorization</span>: bce-auth-v1/46bd9968a6194b4bbdf0341f2286ccce/2015-03-24T13:02:00Z/1800/host;x-bce-date/994014d96b0eb26578e039fa053a4f9003425da4bfedf33f4790882fb4c54903</code>\n</pre><blockquote><p><strong>说明：</strong>方式二鉴权使用的<a href=\"https://cloud.baidu.com/doc/Reference/AuthenticationMechanism.html\" target=\"_blank\">API认证机制</a>authorization必须通过百度云的<a href=\"https://cloud.baidu.com/doc/Reference/GetAKSK.html\" target=\"_blank\">AK/SK</a>生成。</p></blockquote><h1 id=\"10827d6d\">错误信息格式</h1><p>若请求错误，服务器将返回的JSON文本包含以下参数：</p><ul><li><p><strong>error_code：</strong>错误码；关于错误码的详细信息请参考“<a href=\"#%E9%80%9A%E7%94%A8%E9%94%99%E8%AF%AF%E7%A0%81\" target=\"_blank\">通用错误码</a>和<a href=\"#%E4%B8%9A%E5%8A%A1%E7%9B%B8%E5%85%B3%E9%94%99%E8%AF%AF%E7%A0%81\" target=\"_blank\">业务相关错误码</a>”。</p></li><li><p><strong>error_msg：</strong>错误描述信息，帮助理解和解决发生的错误。</p></li></ul><p>例如Access Token失效返回：</p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"error_code\"</span>: <span class=\"hljs-number\">110</span>,\n  <span class=\"hljs-attr\">\"error_msg\"</span>: <span class=\"hljs-string\">\"Access token invalid or no longer valid\"</span>\n}</code>\n</pre><p>需要重新获取新的Access Token再次请求即可。</p><p><strong>Access Token错误码</strong></p><table><thead><tr><th>error_CODE</th><th>error_MSG</th><th>解释</th></tr></thead><tbody><tr><td>100</td><td>Invalid parameter</td><td>无效参数</td></tr><tr><td>110</td><td>Access token invalid or no longer valid</td><td>Access Token过期失效</td></tr></tbody></table><h2 id=\"ab493048\">通用错误码</h2><table><thead><tr><th>错误码</th><th>错误信息</th><th>描述</th></tr></thead><tbody><tr><td>216015</td><td>module closed</td><td>模块关闭</td></tr><tr><td>216100</td><td>invalid param</td><td>非法参数</td></tr><tr><td>216101</td><td>not enough param</td><td>参数数量不够</td></tr><tr><td>216102</td><td>service not support</td><td>业务不支持</td></tr><tr><td>216103</td><td>param too long</td><td>参数太长</td></tr><tr><td>216110</td><td>appid not exist</td><td>APP ID不存在</td></tr><tr><td>216111</td><td>invalid userid</td><td>非法用户ID</td></tr><tr><td>216200</td><td>empty image</td><td>空的图片</td></tr><tr><td>216201</td><td>image format error</td><td>图片格式错误</td></tr><tr><td>216202</td><td>image size error</td><td>图片大小错误</td></tr><tr><td>216300</td><td>db error</td><td>DB错误</td></tr><tr><td>216400</td><td>backend error</td><td>后端系统错误</td></tr><tr><td>216401</td><td>internal error</td><td>内部错误</td></tr><tr><td>216500</td><td>unknown error</td><td>未知错误</td></tr><tr><td>216632</td><td>ocr</td><td>unknown error</td></tr><tr><td>216633</td><td>recognize idcard error</td><td>识别身份证错误</td></tr><tr><td>216634</td><td>detect error</td><td>检测错误</td></tr><tr><td>216635</td><td>get mask error</td><td>获取mask图片错误</td></tr></tbody></table><h2 id=\"e3508cbc\">业务相关错误码</h2><table><thead><tr><th>错误码</th><th>错误信息</th><th>描述</th></tr></thead><tbody><tr><td>216600</td><td>id number format error</td><td>身份证的ID格式错误</td></tr><tr><td>216601</td><td>id number and name not match</td><td>身份证的ID和名字不匹配</td></tr><tr><td>216611</td><td>user not exist</td><td>用户不存在</td></tr><tr><td>216613</td><td>user not found</td><td>用户查找不到</td></tr><tr><td>216614</td><td>not enough images</td><td>图片信息不完整</td></tr><tr><td>216615</td><td>fail to process images</td><td>处理图片信息失败</td></tr><tr><td>216616</td><td>image existed</td><td>图片已存在</td></tr><tr><td>216617</td><td>fail to add user</td><td>添加用户失败</td></tr><tr><td>216618</td><td>no user in group</td><td>群组里没有用户</td></tr><tr><td>216630</td><td>recognize error</td><td>识别错误</td></tr><tr><td>216631</td><td>recognize bank card error</td><td>识别银行卡错误</td></tr></tbody></table><h1 id=\"5e5e0011\">识别接口</h1><h2 id=\"e1bd77f3\">通用文字识别</h2><p><strong>接口描述</strong></p><p>用户向服务请求识别某张图中的所有文字。</p><p><strong>调用方式一请求示例</strong></p><ul><li><p>HTTP 方法： POST</p></li><li><p>请求URL：<pre>\n<code class=\"hljs\" lang=\"\">https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/ocr/</span>v1<span class=\"hljs-regexp\">/general</span></code>\n</pre></p></li><li><p>URL参数：<br></p></li></ul><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#Beginner-Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><ul><li>Header如下：</li></ul><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><ul><li>Body中数据示例：</li></ul><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>image</td><td>图像base64编码</td></tr></tbody></table><p><strong>调用方式二请求示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/rest/2.0/ocr/v1/general</span> HTTP/1.1\n\n<span class=\"http\"><span class=\"hljs-attribute\">x-bce-date</span>: 2016-10-18T02: 20: 01Z,\n<span class=\"hljs-attribute\">host</span>: aip.baidubce.com,\n<span class=\"hljs-attribute\">accept</span>: */*,\n<span class=\"hljs-attribute\">authorization</span>: bce-auth-v1/fbf9f7889585498d8ba8a68da26cbb2e/2016-10-18T02: 20: 01Z/1800/host/6c7cb35358b5c870666d14588af648e8c941a8b2300becd97831803198ee7a6d\n\n<span class=\"mel\"><span class=\"hljs-keyword\">image</span>=%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK</span></span></code>\n</pre><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr><tr><td>recognize_granularity</td><td>false</td><td>string</td><td>big、small</td><td>是否定位单字符位置，big：不定位单字符位置，默认值；small：定位单字符位置</td></tr><tr><td>mask</td><td>false</td><td>string</td><td>-</td><td>表示mask区域的黑白灰度图片，白色代表选中, base64编码</td></tr><tr><td>language_type</td><td>false</td><td>string</td><td>CHN_ENG、ENG、POR、FRE、GER、ITA、SPA、RUS、JAP</td><td>识别语言类型，默认为CHN_ENG。可选值包括：<br>- CHN_ENG：中英文混合；<br>- ENG：英文；<br>- POR：葡萄牙语；<br>- FRE：法语；<br>- GER：德语；<br>- ITA：意大利语；<br>- SPA：西班牙语；<br>- RUS：俄语；<br>- JAP：日语</td></tr><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>detect_language</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否检测语言，默认不检测。当前支持（中文、英语、日语、韩语）</td></tr><tr><td>classify_dimension</td><td>FALSE</td><td>string</td><td>lottery</td><td>分类维度（根据OCR结果进行分类），逗号分隔，当前只支持lottery。<br>lottery：彩票分类，设置detect_direction有助于提升精度</td></tr><tr><td>vertexes_location</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否返回文字外接多边形顶点位置，不支持单字位置。默认为false</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">HTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\nx-bce-request-<span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">73</span>c4e74c<span class=\"hljs-number\">-3101</span><span class=\"hljs-number\">-4</span>a00-bf44-fe246959c05e\nCache-<span class=\"hljs-string\">Control:</span> no-cache\n<span class=\"hljs-string\">Server:</span> BWS\n<span class=\"hljs-string\">Date:</span> Tue, <span class=\"hljs-number\">18</span> Oct <span class=\"hljs-number\">2016</span> <span class=\"hljs-number\">02</span>:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">01</span> GMT\nContent-<span class=\"hljs-string\">Type:</span> application/json;charset=UTF<span class=\"hljs-number\">-8</span>\n{\n<span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">3523983603</span>,\n<span class=\"hljs-string\">\"direction\"</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-comment\">//detect_direction=true时存在</span>\n<span class=\"hljs-string\">\"words_result_num\"</span>: <span class=\"hljs-number\">2</span>,\n<span class=\"hljs-string\">\"words_result\"</span>: [\n    {\n        <span class=\"hljs-string\">\"location\"</span>: {\n            <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">35</span>,\n            <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">53</span>,\n            <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">193</span>,\n            <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">109</span>\n        },\n        <span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"感动\"</span>,\n        <span class=\"hljs-string\">\"chars\"</span>: [    <span class=\"hljs-comment\">//recognize_granularity=small时存在</span>\n            {\n                <span class=\"hljs-string\">\"location\"</span>: {\n                    <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">56</span>,\n                    <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">65</span>,\n                    <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">69</span>,\n                    <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">88</span>\n                },\n                <span class=\"hljs-string\">\"char\"</span>: <span class=\"hljs-string\">\"感\"</span>\n            },\n            {\n                <span class=\"hljs-string\">\"location\"</span>: {\n                    <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">140</span>,\n                    <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">65</span>,\n                    <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">70</span>,\n                    <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">88</span>\n                },\n                <span class=\"hljs-string\">\"char\"</span>: <span class=\"hljs-string\">\"动\"</span>\n            }\n        ]\n    }\n    ...\n]\n}</code>\n</pre><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>定位和识别结果数组</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>+vertexes_location</td><td>否</td><td>array()</td><td>当前为四个顶点: 左上，右上，右下，左下。当vertexes_location=true时存在</td></tr><tr><td>++x</td><td>是</td><td>uint32</td><td>水平坐标（坐标0点为左上角）</td></tr><tr><td>++y</td><td>是</td><td>uint32</td><td>垂直坐标（坐标0点为左上角）</td></tr><tr><td>+location</td><td>是</td><td>array()</td><td>位置数组（坐标0点为左上角）</td></tr><tr><td>++left</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td>++top</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td>++width</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的宽度</td></tr><tr><td>++height</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的高度</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr><tr><td>+chars</td><td>否</td><td>array()</td><td>单字符结果，recognize_granularity=small时存在</td></tr><tr><td>++location</td><td>是</td><td>array()</td><td>位置数组（坐标0点为左上角）</td></tr><tr><td>+++left</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td>+++top</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td>+++width</td><td>是</td><td>uint32</td><td>表示定位定位位置的长方形的宽度</td></tr><tr><td>+++height</td><td>是</td><td>uint32</td><td>表示位置的长方形的高度</td></tr><tr><td>++char</td><td>是</td><td>string</td><td>单字符识别结果</td></tr></tbody></table><h2 id=\"7e4792c7\">身份证识别</h2><p><strong>接口描述</strong></p><p>用户向服务请求识别身份证，身份证识别包括正面和背面。</p><p><strong>调用方式一请求示例</strong></p><ul><li><p>HTTP 方法： POST</p></li><li><p>请求URL：<pre>\n<code class=\"hljs\" lang=\"\">https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/ocr/</span>v1<span class=\"hljs-regexp\">/idcard</span></code>\n</pre></p></li><li><p>URL参数：<br></p></li></ul><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#Beginner-Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><ul><li>Header如下：</li></ul><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><ul><li>Body中数据如下：</li></ul><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>image</td><td>图像base64编码</td></tr><tr><td>id_card_side</td><td>范围：front/back。front：身份证正面，back：身份证背面</td></tr></tbody></table><p><strong>调用方式二请求示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/api/v1/ocr/idcard</span> HTTP/1.1\n<span class=\"hljs-attribute\">x-bce-date</span>: 2016-10-18T02: 20: 01Z,\n<span class=\"hljs-attribute\">host</span>: aip.baidubce.com,\n<span class=\"hljs-attribute\">accept</span>: */*,\n<span class=\"hljs-attribute\">authorization</span>: bce-auth-v1/fbf9f7889585498d8ba8a68da26cbb2e/2016-10-18T02: 20: 01Z/1800/host/6c7cb35358b5c870666d14588af648e8c941a8b2300becd97831803198ee7a6d\n\n<span class=\"mel\">id_card_side=front&amp;<span class=\"hljs-keyword\">image</span>=%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK...</span></code>\n</pre><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>id_card_side</td><td>true</td><td>string</td><td>front、back</td><td>front：身份证正面；back：身份证背面</td></tr><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">HTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\nx-bce-request-<span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">73</span>c4e74c<span class=\"hljs-number\">-3101</span><span class=\"hljs-number\">-4</span>a00-bf44-fe246959c05e\nCache-<span class=\"hljs-string\">Control:</span> no-cache\n<span class=\"hljs-string\">Server:</span> BWS\n<span class=\"hljs-string\">Date:</span> Tue, <span class=\"hljs-number\">18</span> Oct <span class=\"hljs-number\">2016</span> <span class=\"hljs-number\">02</span>:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">01</span> GMT\nContent-<span class=\"hljs-string\">Type:</span> application/json;charset=UTF<span class=\"hljs-number\">-8</span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">7037721</span>,\n    <span class=\"hljs-string\">\"direction\"</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-comment\">//detect_direction=true时存在</span>\n    <span class=\"hljs-string\">\"words_result_num\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-string\">\"words_result\"</span>: {\n        <span class=\"hljs-string\">\"住址\"</span>: {\n            <span class=\"hljs-string\">\"location\"</span>: {\n                <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">227</span>,\n                <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">235</span>,\n                <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">229</span>,\n                <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">51</span>\n            },\n            <span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"湖北省天门市渔薪镇杨咀村一组2号\"</span>,\n        }\n        ...\n    }\n}</code>\n</pre><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>定位和识别结果数组</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>+location</td><td>是</td><td>array()</td><td>位置数组（坐标0点为左上角）</td></tr><tr><td>++left</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td>++top</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td>++width</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的宽度</td></tr><tr><td>++height</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的高度</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr></tbody></table><h2 id=\"70b78383\">银行卡识别</h2><p><strong>接口描述</strong></p><p>识别银行卡并返回卡号。</p><p><strong>调用方式一请求示例</strong></p><ul><li><p>HTTP 方法: POST</p></li><li><p>请求URL:<pre>\n<code class=\"hljs\" lang=\"\">https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/ocr/</span>v1<span class=\"hljs-regexp\">/bankcard</span></code>\n</pre></p></li><li><p>URL参数：<br></p></li></ul><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#Beginner-Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><ul><li>Header如下：</li></ul><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><ul><li>Body中数据如下：</li></ul><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>image</td><td>图像base64编码</td></tr></tbody></table><p><strong>调用方式二请求示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/api/v1/ocr/bankcard</span> HTTP/1.1\n<span class=\"hljs-attribute\">x-bce-date</span>: 2016-10-18T02: 20: 01Z,\n<span class=\"hljs-attribute\">host</span>: aip.baidubce.com,\n<span class=\"hljs-attribute\">accept</span>: */*,\n<span class=\"hljs-attribute\">authorization</span>: bce-auth-v1/fbf9f7889585498d8ba8a68da26cbb2e/2016-10-18T02: 20: 01Z/1800/host/6c7cb35358b5c870666d14588af648e8c941a8b2300becd97831803198ee7a6d\n\n<span class=\"mel\"><span class=\"hljs-keyword\">image</span>=%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK</span></code>\n</pre><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>类型</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>string</td><td>true</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">1447188951</span>,\n    <span class=\"hljs-attr\">\"result\"</span>: {\n        <span class=\"hljs-attr\">\"bank_card_number\"</span>: <span class=\"hljs-string\">\"622500000000000\"</span>,\n        <span class=\"hljs-attr\">\"bank_name\"</span>: <span class=\"hljs-string\">\"招商银行\"</span>,\n        <span class=\"hljs-attr\">\"bank_card_type\"</span>: <span class=\"hljs-number\">1</span>\n    }\n}</code>\n</pre><p><strong>返回参数</strong></p><table><thead><tr><th>参数</th><th>类型</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>uint64</td><td>是</td><td>请求标识码，随机数，唯一。</td></tr><tr><td>result</td><td>object</td><td>是</td><td>返回结果</td></tr><tr><td>+bank_card_number</td><td>string</td><td>是</td><td>银行卡卡号</td></tr><tr><td>+bank_name</td><td>string</td><td>是</td><td>银行名，不能识别时为空</td></tr><tr><td>+bank_card_type</td><td>uint32</td><td>是</td><td>银行卡类型，0:不能识别; 1: 借记卡; 2: 信用卡</td></tr></tbody></table><p>​</p>",
  "headings": [
    {
      "level": 1,
      "text": "简介",
      "id": "2a8d26ce"
    },
    {
      "level": 1,
      "text": "调用方式一",
      "id": "8f627763"
    },
    {
      "level": 2,
      "text": "请求URL数据格式",
      "id": "b878161a"
    },
    {
      "level": 1,
      "text": "调用方式二",
      "id": "9f91389a"
    },
    {
      "level": 2,
      "text": "请求头域内容",
      "id": "40c85d4d"
    },
    {
      "level": 1,
      "text": "错误信息格式",
      "id": "10827d6d"
    },
    {
      "level": 2,
      "text": "通用错误码",
      "id": "ab493048"
    },
    {
      "level": 2,
      "text": "业务相关错误码",
      "id": "e3508cbc"
    },
    {
      "level": 1,
      "text": "识别接口",
      "id": "5e5e0011"
    },
    {
      "level": 2,
      "text": "通用文字识别",
      "id": "e1bd77f3"
    },
    {
      "level": 2,
      "text": "身份证识别",
      "id": "7e4792c7"
    },
    {
      "level": 2,
      "text": "银行卡识别",
      "id": "70b78383"
    }
  ]
}
