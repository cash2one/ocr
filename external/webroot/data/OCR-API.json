{
  "html": "<h1 id=\"2a8d26ce\">简介</h1><p>Hi，您好，欢迎使用百度OCR文字识别API服务。</p><p>本文档主要针对API开发者，描述百度OCR文字识别接口服务的相关技术内容。如果您对文档内容有任何疑问，可以通过以下几种方式联系我们：</p><ul><li>在百度云控制台内<strong>提交工单</strong>，咨询问题类型请选择<strong>人工智能服务</strong>；</li><li>加入<strong>开发者QQ群</strong>：224994340；</li></ul><h2 id=\"6af3bd00\">接口能力</h2><table><thead><tr><th style=\"text-align:left\">接口名称</th><th style=\"text-align:left\">接口能力简要描述</th></tr></thead><tbody><tr><td style=\"text-align:left\">通用文字识别（含位置版）</td><td style=\"text-align:left\">识别图片中的文字信息（包含文字区域的坐标信息）</td></tr><tr><td style=\"text-align:left\">通用文字识别（不含位置版）</td><td style=\"text-align:left\">识别图片中的文字信息（不含文字区域的坐标信息）</td></tr><tr><td style=\"text-align:left\">身份证识别</td><td style=\"text-align:left\">识别身份证正反面的文字信息</td></tr><tr><td style=\"text-align:left\">银行卡识别</td><td style=\"text-align:left\">识别银行卡的卡号及发卡行信息</td></tr></tbody></table><h2 id=\"5724729b\">请求格式</h2><p>POST方式调用</p><p><strong>注意：</strong>Content-Type为<code><span class=\"hljs-built_in\">application</span>/x-www-form-urlencoded</code>，然后通过<code><span class=\"hljs-attribute\">urlencode</span></code>格式化请求体。</p><h2 id=\"cabd4c0f\">返回格式</h2><p>JSON格式</p><h2 id=\"aed409bb\">请求限制</h2><p>请求图片需经过<code><span class=\"hljs-built_in\">base64</span>编码</code>：图片的base64编码指将一副图片数据编码成一串字符串，使用该字符串代替图像地址。您可以首先得到图片的二进制，然后用Base64格式编码即可。</p><p><strong>注意：</strong>图片的base64编码是不包含图片头的，如<code>（<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>:image/jpg;base64,）</span></code></p><p><strong>请求格式支持：</strong>PNG、JPG、JPEG、BMP，<strong>不支持GIF图片</strong></p><table><thead><tr><th style=\"text-align:left\">接口名称</th><th style=\"text-align:left\">图片编码后大小限额</th></tr></thead><tbody><tr><td style=\"text-align:left\">通用文字识别（含位置版）</td><td style=\"text-align:left\">base64编码后大小不超过4M，最短边至少15px，最长边最大4096px</td></tr><tr><td style=\"text-align:left\">通用文字识别（不含位置版）</td><td style=\"text-align:left\">base64编码后大小不超过4M，最短边至少15px，最长边最大4096px</td></tr><tr><td style=\"text-align:left\">身份证识别</td><td style=\"text-align:left\">base64编码后大小不超过4M，最短边至少15px，最长边最大4096px</td></tr><tr><td style=\"text-align:left\">银行卡识别</td><td style=\"text-align:left\">base64编码后大小不超过4M，最短边至少15px，最长边最大4096px</td></tr></tbody></table><h1 id=\"0410defd\">调用方式</h1><p>调用AI服务相关的API接口有两种调用方式，两种不同的调用方式采用相同的接口URL。</p><p>区别在于<strong>请求方式</strong>和<strong>鉴权方法</strong>不一样，请求参数和返回结果一致。</p><h2 id=\"8f627763\">调用方式一</h2><p><strong>请求URL数据格式</strong></p><p>向API服务地址使用POST发送请求，必须在URL中带上参数：</p><p><strong>access_token:</strong> 必须参数，参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”。</p><blockquote><p>注意：<code>access_token</code>的有效期为30天，需要每30天进行定期更换；</p></blockquote><p>POST中参数按照API接口说明调用即可。</p><p>例如人脸识别API，使用HTTPS POST发送：</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-symbol\">https:</span>//aip.baidubce.com/<span class=\"hljs-built_in\">rest</span>/<span class=\"hljs-number\">2.0</span>/ocr/v1/general?access_token=<span class=\"hljs-number\">24.</span>f9ba9c5241b67688bb4adbed8bc91dec<span class=\"hljs-meta\">.2592000</span><span class=\"hljs-meta\">.1485570332</span><span class=\"hljs-meta\">.282335</span>-<span class=\"hljs-number\">8574074</span></code>\n</pre><p><strong>获取access_token示例代码</strong></p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=A0nyraL7kGXrDhfDf33UyGvX&amp;client_secret=4IGLoGQqeq8svpocetiBgzTLDlkVfhG1'</span>\n</code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/oauth/2.0/token'</span>;\n    $post_data[<span class=\"hljs-string\">'grant_type'</span>]       = <span class=\"hljs-string\">'client_credentials'</span>;\n    $post_data[<span class=\"hljs-string\">'client_id'</span>]      = <span class=\"hljs-string\">'A0nyraL7kGXrDhfDf33UyGvX'</span>;\n    $post_data[<span class=\"hljs-string\">'client_secret'</span>] = <span class=\"hljs-string\">'4IGLoGQqeq8svpocetiBgzTLDlkVfhG1'</span>;\n    $o = <span class=\"hljs-string\">\"\"</span>;\n    <span class=\"hljs-keyword\">foreach</span> ( $post_data <span class=\"hljs-keyword\">as</span> $k =&gt; $v ) \n    {\n    \t$o.= <span class=\"hljs-string\">\"$k=\"</span> . urlencode( $v ). <span class=\"hljs-string\">\"&amp;\"</span> ;\n    }\n    $post_data = substr($o,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">-1</span>);\n    \n    $res = request_post($url, $post_data);\n\n    var_dump($res);\n\n<span class=\"hljs-meta\">?&gt;</span></code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.auth;\n\n<span class=\"hljs-keyword\">import</span> org.json.JSONObject;\n\n<span class=\"hljs-keyword\">import</span> java.io.BufferedReader;\n<span class=\"hljs-keyword\">import</span> java.io.InputStreamReader;\n<span class=\"hljs-keyword\">import</span> java.net.HttpURLConnection;\n<span class=\"hljs-keyword\">import</span> java.net.URL;\n<span class=\"hljs-keyword\">import</span> java.util.List;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n\n<span class=\"hljs-comment\">/**\n * 获取token类\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AuthService</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 获取权限token\n     *\n     * <span class=\"hljs-doctag\">@return</span> 返回示例：\n     * {\n     * \"access_token\": \"24.460da4889caad24cccdb1fea17221975.2592000.1491995545.282335-9261443\",\n     * \"session_key\": \"9mzdDxLPLXYfhlmFRBSGI8jOy19HNzFT6cle3RWf2m9HL8LdLxyVhEETkPS8gQtLbhw1TP/ly3+l59n4wknbmwPk6NC1\",\n     * \"scope\": \"public vis-faceverify_faceverify vis-ocr_ocr vis-faceattribute_faceattribute vis-ocr_bankcard nlp_wordseg nlp_simnet nlp_wordemb nlp_comtag nlp_wordpos nlp_dnnlm_cn vis-antiporn_antiporn_v2 brain_ocr_scope wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian wangrantest_test wangrantest_test1 bnstest_test1 bnstest_test2 ApsMisTest_Test权限 vis-classify_flower\",\n     * \"refresh_token\": \"25.bf1ec1814779878486cb9ba68f7defe5.315360000.1804763545.282335-9261443\",\n     * \"session_secret\": \"b292e183bb394fb8d8065e7f8b137757\",\n     * \"expires_in\": 2592000\n     * }\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">getAuth</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-comment\">// 获取token地址</span>\n        String authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token?\"</span>;\n        <span class=\"hljs-comment\">// 官网获取的 API Key 更新为你注册的</span>\n        String clientId = <span class=\"hljs-string\">\"nElok3H1CINAdEsTuzwyxO9U\"</span>;\n        <span class=\"hljs-comment\">// 官网获取的 Secret Key 更新为你注册的</span>\n        String clientSecret = <span class=\"hljs-string\">\"kg1vwhls4LO5h91YZkfG58qpRWgFHFCl\"</span>;\n        String getAccessTokenUrl = authHost\n                <span class=\"hljs-comment\">// 1. grant_type为固定参数</span>\n                + <span class=\"hljs-string\">\"grant_type=client_credentials\"</span>\n                <span class=\"hljs-comment\">// 2. 官网获取的 API Key</span>\n                + <span class=\"hljs-string\">\"&amp;client_id=\"</span> + clientId\n                <span class=\"hljs-comment\">// 3. 官网获取的 Secret Key</span>\n                + <span class=\"hljs-string\">\"&amp;client_secret=\"</span> + clientSecret;\n        <span class=\"hljs-keyword\">try</span> {\n            URL realUrl = <span class=\"hljs-keyword\">new</span> URL(getAccessTokenUrl);\n            <span class=\"hljs-comment\">// 打开和URL之间的连接</span>\n            HttpURLConnection connection = (HttpURLConnection) realUrl.openConnection();\n            connection.setRequestMethod(<span class=\"hljs-string\">\"GET\"</span>);\n            connection.connect();\n            <span class=\"hljs-comment\">// 获取所有响应头字段</span>\n            Map&lt;String, List&lt;String&gt;&gt; map = connection.getHeaderFields();\n            <span class=\"hljs-comment\">// 遍历所有的响应头字段</span>\n            <span class=\"hljs-keyword\">for</span> (String key : map.keySet()) {\n                System.out.println(key + <span class=\"hljs-string\">\"---&gt;\"</span> + map.get(key));\n            }\n            <span class=\"hljs-comment\">// 定义 BufferedReader输入流来读取URL的响应</span>\n            BufferedReader in = <span class=\"hljs-keyword\">new</span> BufferedReader(<span class=\"hljs-keyword\">new</span> InputStreamReader(connection.getInputStream()));\n            String result = <span class=\"hljs-string\">\"\"</span>;\n            String line;\n            <span class=\"hljs-keyword\">while</span> ((line = in.readLine()) != <span class=\"hljs-keyword\">null</span>) {\n                result += line;\n            }\n            <span class=\"hljs-comment\">/**\n             * 返回结果示例\n             */</span>\n            System.out.println(<span class=\"hljs-string\">\"result:\"</span> + result);\n            JSONObject jsonObject = <span class=\"hljs-keyword\">new</span> JSONObject(result);\n            String access_token = jsonObject.getString(<span class=\"hljs-string\">\"access_token\"</span>);\n            <span class=\"hljs-keyword\">return</span> access_token;\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            System.out.printf(<span class=\"hljs-string\">\"获取token失败！\"</span>);\n            e.printStackTrace();\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># encoding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib\n<span class=\"hljs-keyword\">import</span> urllib2\n<span class=\"hljs-keyword\">import</span> json\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">AuthService</span><span class=\"hljs-params\">()</span>:</span>\n    <span class=\"hljs-comment\"># 获取token地址</span>\n    authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token?\"</span>\n    <span class=\"hljs-comment\"># 官网获取的 API Key</span>\n    clientId = <span class=\"hljs-string\">\"\"</span>\n    <span class=\"hljs-comment\"># 官网获取的 Secret Key</span>\n    clientSecret = <span class=\"hljs-string\">\"\"</span>\n    getAccessTokenUrl = authHost + <span class=\"hljs-string\">\"grant_type=client_credentials\"</span> + <span class=\"hljs-string\">\"&amp;client_id=\"</span> + clientId + <span class=\"hljs-string\">\"&amp;client_secret=\"</span> + clientSecret\n    request = urllib2.Request(getAccessTokenUrl)\n    response_data = urllib2.urlopen(request)\n    params = json.loads(response_data.read())\n    <span class=\"hljs-keyword\">return</span> params[<span class=\"hljs-string\">\"access_token\"</span>]\n\n\nAuthService()\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\">#include &lt;iostream&gt;\n#include &lt;curl/curl.h&gt;\n#include &lt;json/json.h&gt;\n#include \"access_token.h\"\n// libcurl库下载链接：https://curl.haxx.se/download.html\n// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/\n// 获取access_token所需要的url\nconst std::string access_token_url = \"https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials\";\n// 回调函数获取到的access_token存放变量\nstatic std::string access_token_result;\n/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在result中\n * @param 参数定义见libcurl库文档\n * @return 返回值定义见libcurl库文档\n */\nstatic size_t callback(void *ptr, size_t size, size_t nmemb, void *stream) {\n    // 获取到的body存放在ptr中，先将其转换为string格式\n    std::string s((char *) ptr, size * nmemb);\n    // 开始获取json中的access token项目\n    Json::Reader reader;\n    Json::Value root;\n    // 使用boost库解析json\n    reader.parse(s,root);\n    access_token_result = root[\"access_token\"].asString();\n    return size * nmemb;\n}\n\n/**\n * 用以获取access_token的函数，使用时需要先在百度云控制台申请相应功能的应用，获得对应的API Key和Secret Key\n * @param access_token 获取得到的access token，调用函数时需传入该参数\n * @param AK 应用的API key\n * @param SK 应用的Secret key\n * @return 返回0代表获取access token成功，其他返回值代表获取失败\n */\nint get_access_token(std::string &amp;access_token, const std::string &amp;AK, const std::string &amp;SK) {\n    CURL *curl;\n    CURLcode result_code;\n    int success;\n    curl = curl_easy_init();\n    if (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL,\n                         (access_token_url + \"&amp;client_id=\" + AK + \"&amp;client_secret=\" + SK).data());\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        if (result_code != CURLE_OK) {\n            fprintf(stderr, \"curl_easy_perform() failed: %s\\n\",\n                    curl_easy_strerror(result_code));\n            success = 1;\n            return success;\n        }\n        access_token = access_token_result;\n        curl_easy_cleanup(curl);\n        success = 0;\n    } else {\n        fprintf(stderr, \"curl_easy_init() failed.\");\n        success = 1;\n    }\n    return success;\n}\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.Net.Http;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AccessToken</span>\n\n\t{\n\t\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String TOKEN = <span class=\"hljs-string\">\"######\"</span>; <span class=\"hljs-comment\">// 调用getAccessToken()获取的 access_token建议根据expires_in 时间 设置缓存</span>\n\n\t\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String clientId = <span class=\"hljs-string\">\"####\"</span>; <span class=\"hljs-comment\">// 百度云中开通对应服务应用的 API Key 建议开通应用的时候多选服务</span>\n\t\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String clientSecret = <span class=\"hljs-string\">\"#####\"</span>;   <span class=\"hljs-comment\">// 百度云中开通对应服务应用的 Secret Key</span>\n\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">getAccessToken</span>(<span class=\"hljs-params\"></span>) </span>{\n\t\t\tString authHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/oauth/2.0/token\"</span>;\n\t\t\tHttpClient client = <span class=\"hljs-keyword\">new</span> HttpClient();\n\t\t\tList&lt;KeyValuePair&lt;String, String&gt;&gt; paraList = <span class=\"hljs-keyword\">new</span> List&lt;KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;&gt;();\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"grant_type\"</span>, <span class=\"hljs-string\">\"client_credentials\"</span>));\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"client_id\"</span>, clientId));\n\n\t\t\tparaList.Add(<span class=\"hljs-keyword\">new</span> KeyValuePair&lt;<span class=\"hljs-keyword\">string</span>, <span class=\"hljs-keyword\">string</span>&gt;(<span class=\"hljs-string\">\"client_secret\"</span>, clientSecret));\n\n\t\t\tHttpResponseMessage response = client.PostAsync(authHost, <span class=\"hljs-keyword\">new</span> FormUrlEncodedContent(paraList)).Result;\n\t\t\tString result = response.Content.ReadAsStringAsync().Result;\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-comment\">// </span>\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><blockquote><p><strong>说明：</strong>方式一鉴权使用的Access_token必须通过API Key和Secret Key获取。</p></blockquote><h2 id=\"9f91389a\">调用方式二</h2><p><strong>请求头域内容</strong></p><p>在请求的HTTP头域中包含以下信息：</p><ul><li>host（必填）</li><li>x-bce-date （必填）</li><li>x-bce-request-id（选填）</li><li>authorization（必填）</li><li>content-type（必填）</li><li>content-length（选填）</li></ul><p>作为示例，以下是一个标准的人脸识别的请求头域内容:</p><pre>\n<code class=\"hljs\" lang=\"\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/rest/2.0/face/v1/detect</span> HTTP/1.1\n<span class=\"hljs-attribute\">accept-encoding</span>: gzip, deflate\n<span class=\"hljs-attribute\">x-bce-date</span>: 2015-03-24T13:02:00Z\n<span class=\"hljs-attribute\">connection</span>: keep-alive\n<span class=\"hljs-attribute\">accept</span>: */*\n<span class=\"hljs-attribute\">host</span>: aip.baidubce.com\n<span class=\"hljs-attribute\">x-bce-request-id</span>: 73c4e74c-3101-4a00-bf44-fe246959c05e\n<span class=\"hljs-attribute\">content-type</span>: application/x-www-form-urlencoded\n<span class=\"hljs-attribute\">authorization</span>: bce-auth-v1/46bd9968a6194b4bbdf0341f2286ccce/2015-03-24T13:02:00Z/1800/host;x-bce-date/994014d96b0eb26578e039fa053a4f9003425da4bfedf33f4790882fb4c54903</code>\n</pre><blockquote><p><strong>说明：</strong>方式二鉴权使用的<a href=\"https://cloud.baidu.com/doc/Reference/AuthenticationMechanism.html\" target=\"_blank\">API认证机制</a>authorization必须通过百度云的<a href=\"https://cloud.baidu.com/doc/Reference/GetAKSK.html\" target=\"_blank\">AK/SK</a>生成。</p></blockquote><h1 id=\"e1bd77f3\">通用文字识别</h1><h2 id=\"ade83bae\">接口描述</h2><p>用户向服务请求识别某张图中的所有文字。</p><h2 id=\"c985f3cd\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP 方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/ocr/</span>v1<span class=\"hljs-regexp\">/general_basic</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr><tr><td>mask</td><td>false</td><td>string</td><td>-</td><td>表示mask区域的黑白灰度图片，白色代表选中, base64编码</td></tr><tr><td>language_type</td><td>false</td><td>string</td><td>CHN_ENG、ENG、POR、FRE、GER、ITA、SPA、RUS、JAP</td><td>识别语言类型，默认为CHN_ENG。可选值包括：<br>- CHN_ENG：中英文混合；<br>- ENG：英文；<br>- POR：葡萄牙语；<br>- FRE：法语；<br>- GER：德语；<br>- ITA：意大利语；<br>- SPA：西班牙语；<br>- RUS：俄语；<br>- JAP：日语</td></tr><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>detect_language</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否检测语言，默认不检测。当前支持（中文、英语、日语、韩语）</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p>请参考通用文字识别（含位置信息版）的代码内容，并更换请求地址。</p><h2 id=\"d279b050\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>识别结果数组</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">HTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\nx-bce-request-<span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">73</span>c4e74c<span class=\"hljs-number\">-3101</span><span class=\"hljs-number\">-4</span>a00-bf44-fe246959c05e\nCache-<span class=\"hljs-string\">Control:</span> no-cache\n<span class=\"hljs-string\">Server:</span> BWS\n<span class=\"hljs-string\">Date:</span> Tue, <span class=\"hljs-number\">18</span> Oct <span class=\"hljs-number\">2016</span> <span class=\"hljs-number\">02</span>:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">01</span> GMT\nContent-<span class=\"hljs-string\">Type:</span> application/json;charset=UTF<span class=\"hljs-number\">-8</span>\n{\n<span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">2471272194</span>, \n<span class=\"hljs-string\">\"words_result_num\"</span>: <span class=\"hljs-number\">2</span>,\n<span class=\"hljs-string\">\"words_result\"</span>: \n    [\n        {<span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\" TSINGTAO\"</span>}, \n        {<span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"青島睥酒\"</span>}\n    ]\n}</code>\n</pre><h1 id=\"0d9adafa\">通用文字识别（含位置信息版）</h1><h2 id=\"5e72a5e7\">接口描述</h2><p>用户向服务请求识别某张图中的所有文字，并返回文字在图中的位置信息。</p><p><strong>请求示例</strong></p><p>HTTP 方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/ocr/</span>v1<span class=\"hljs-regexp\">/general</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr><tr><td>recognize_granularity</td><td>false</td><td>string</td><td>big、small</td><td>是否定位单字符位置，big：不定位单字符位置，默认值；small：定位单字符位置</td></tr><tr><td>mask</td><td>false</td><td>string</td><td>-</td><td>表示mask区域的黑白灰度图片，白色代表选中, base64编码</td></tr><tr><td>language_type</td><td>false</td><td>string</td><td>CHN_ENG、ENG、POR、FRE、GER、ITA、SPA、RUS、JAP</td><td>识别语言类型，默认为CHN_ENG。可选值包括：<br>- CHN_ENG：中英文混合；<br>- ENG：英文；<br>- POR：葡萄牙语；<br>- FRE：法语；<br>- GER：德语；<br>- ITA：意大利语；<br>- SPA：西班牙语；<br>- RUS：俄语；<br>- JAP：日语</td></tr><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>detect_language</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否检测语言，默认不检测。当前支持（中文、英语、日语、韩语）</td></tr><tr><td>vertexes_location</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否返回文字外接多边形顶点位置，不支持单字位置。默认为false</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">curl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/ocr/v1/general?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"image\":\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/ocr/v1/general?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"image\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.ocr;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * OCR 通用识别\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">General</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 通用识别url</span>\n        String otherHost = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/ocr/v1/general\"</span>;\n        <span class=\"hljs-comment\">// 本地图片路径</span>\n        String filePath = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">byte</span>[] imgData = FileUtil.readFileByBytes(filePath);\n            String imgStr = Base64Util.encode(imgData);\n            String params = URLEncoder.encode(<span class=\"hljs-string\">\"image\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>) + <span class=\"hljs-string\">\"=\"</span> + URLEncoder.encode(imgStr, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(otherHost, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># coding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib, urllib2, sys\n<span class=\"hljs-keyword\">import</span> ssl\n\nurl = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/ocr/v1/general?access_token=24.3757e04e2ae5f1d55092ee1df2dfda02.2592000.1492941733.282335-9424624'</span>\nbodys = {}\nbodys[\n    <span class=\"hljs-string\">''</span>] = <span class=\"hljs-string\">\"{\\\"image\\\":\\\"/9j/4AAQSkZJRgABAQEASABIAAD\\\"}\"</span>\npost_data = bodys[<span class=\"hljs-string\">''</span>]\nrequest = urllib2.Request(url, post_data)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nctx = ssl.create_default_context()\nctx.check_hostname = <span class=\"hljs-keyword\">False</span>\nctx.verify_mode = ssl.CERT_NONE\nresponse = urllib2.urlopen(request, context=ctx)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> (content):\n    print(content)\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"general.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">// 通用ocr的接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> general_ocr_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/ocr/v1/general\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> general_ocr_result;\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    general_ocr_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n<span class=\"hljs-comment\">/**\n * 调用通用的ocr接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param image_base64 以string格式传递的base64编码的图像数据（注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">general_ocr</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;image_base64, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span> </span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = general_ocr_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        <span class=\"hljs-comment\">// 使用libcurl post数据：设定待post的url等</span>\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-comment\">// 将需要post的image数据以表单的形式post</span>\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"image\"</span>, CURLFORM_COPYCONTENTS, image_base64.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl,CURLOPT_WRITEFUNCTION,callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-comment\">// http post不成功时错误处理</span>\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = general_ocr_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">General</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 通用文字识别</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">general</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> strbaser64 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/ocr/general.jpeg\"</span>); <span class=\"hljs-comment\">// 图片的base64编码</span>\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/ocr/v1/general?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"image=\"</span> + HttpUtility.UrlEncode(strbaser64);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"通用文字识别:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"5b9a933c\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>定位和识别结果数组</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>+vertexes_location</td><td>否</td><td>array()</td><td>当前为四个顶点: 左上，右上，右下，左下。当vertexes_location=true时存在</td></tr><tr><td>++x</td><td>是</td><td>uint32</td><td>水平坐标（坐标0点为左上角）</td></tr><tr><td>++y</td><td>是</td><td>uint32</td><td>垂直坐标（坐标0点为左上角）</td></tr><tr><td>+location</td><td>是</td><td>array()</td><td>位置数组（坐标0点为左上角）</td></tr><tr><td>++left</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td>++top</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td>++width</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的宽度</td></tr><tr><td>++height</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的高度</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr><tr><td>+chars</td><td>否</td><td>array()</td><td>单字符结果，recognize_granularity=small时存在</td></tr><tr><td>++location</td><td>是</td><td>array()</td><td>位置数组（坐标0点为左上角）</td></tr><tr><td>+++left</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td>+++top</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td>+++width</td><td>是</td><td>uint32</td><td>表示定位定位位置的长方形的宽度</td></tr><tr><td>+++height</td><td>是</td><td>uint32</td><td>表示位置的长方形的高度</td></tr><tr><td>++char</td><td>是</td><td>string</td><td>单字符识别结果</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">HTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\nx-bce-request-<span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">73</span>c4e74c<span class=\"hljs-number\">-3101</span><span class=\"hljs-number\">-4</span>a00-bf44-fe246959c05e\nCache-<span class=\"hljs-string\">Control:</span> no-cache\n<span class=\"hljs-string\">Server:</span> BWS\n<span class=\"hljs-string\">Date:</span> Tue, <span class=\"hljs-number\">18</span> Oct <span class=\"hljs-number\">2016</span> <span class=\"hljs-number\">02</span>:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">01</span> GMT\nContent-<span class=\"hljs-string\">Type:</span> application/json;charset=UTF<span class=\"hljs-number\">-8</span>\n{\n<span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">3523983603</span>,\n<span class=\"hljs-string\">\"direction\"</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-comment\">//detect_direction=true时存在</span>\n<span class=\"hljs-string\">\"words_result_num\"</span>: <span class=\"hljs-number\">2</span>,\n<span class=\"hljs-string\">\"words_result\"</span>: [\n    {\n        <span class=\"hljs-string\">\"location\"</span>: {\n            <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">35</span>,\n            <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">53</span>,\n            <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">193</span>,\n            <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">109</span>\n        },\n        <span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"感动\"</span>,\n        <span class=\"hljs-string\">\"chars\"</span>: [    <span class=\"hljs-comment\">//recognize_granularity=small时存在</span>\n            {\n                <span class=\"hljs-string\">\"location\"</span>: {\n                    <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">56</span>,\n                    <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">65</span>,\n                    <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">69</span>,\n                    <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">88</span>\n                },\n                <span class=\"hljs-string\">\"char\"</span>: <span class=\"hljs-string\">\"感\"</span>\n            },\n            {\n                <span class=\"hljs-string\">\"location\"</span>: {\n                    <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">140</span>,\n                    <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">65</span>,\n                    <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">70</span>,\n                    <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">88</span>\n                },\n                <span class=\"hljs-string\">\"char\"</span>: <span class=\"hljs-string\">\"动\"</span>\n            }\n        ]\n    }\n    ...\n]\n}</code>\n</pre><h1 id=\"fb210211\">通用文字识别（含生僻字版）</h1><h2 id=\"33079fbf\">接口描述</h2><p>某些场景中，图片中的中文不光有常用字，还包含了生僻字，这时用户需要对该图进行文字识别，应使用通用文字识别（含生僻字版）。</p><h2 id=\"02a82c72\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP 方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/ocr/</span>v1<span class=\"hljs-regexp\">/general_enhanced</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr><tr><td>mask</td><td>false</td><td>string</td><td>-</td><td>表示mask区域的黑白灰度图片，白色代表选中, base64编码</td></tr><tr><td>language_type</td><td>false</td><td>string</td><td>CHN_ENG、ENG、POR、FRE、GER、ITA、SPA、RUS、JAP</td><td>识别语言类型，默认为CHN_ENG。可选值包括：<br>- CHN_ENG：中英文混合；<br>- ENG：英文；<br>- POR：葡萄牙语；<br>- FRE：法语；<br>- GER：德语；<br>- ITA：意大利语；<br>- SPA：西班牙语；<br>- RUS：俄语；<br>- JAP：日语</td></tr><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>detect_language</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否检测语言，默认不检测。当前支持（中文、英语、日语、韩语）</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p>请参考通用文字识别（含位置信息版）的代码内容，并更换请求地址。</p><h2 id=\"1dc962a7\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>识别结果数组</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">HTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\nx-bce-request-<span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">73</span>c4e74c<span class=\"hljs-number\">-3101</span><span class=\"hljs-number\">-4</span>a00-bf44-fe246959c05e\nCache-<span class=\"hljs-string\">Control:</span> no-cache\n<span class=\"hljs-string\">Server:</span> BWS\n<span class=\"hljs-string\">Date:</span> Tue, <span class=\"hljs-number\">18</span> Oct <span class=\"hljs-number\">2016</span> <span class=\"hljs-number\">02</span>:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">01</span> GMT\nContent-<span class=\"hljs-string\">Type:</span> application/json;charset=UTF<span class=\"hljs-number\">-8</span>\n{\n<span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">2471272194</span>, \n<span class=\"hljs-string\">\"words_result_num\"</span>: <span class=\"hljs-number\">2</span>,\n<span class=\"hljs-string\">\"words_result\"</span>: \n    [\n        {<span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\" TSINGTAO\"</span>}, \n        {<span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"青島睥酒\"</span>}\n    ]\n}</code>\n</pre><h1 id=\"6c337940\">网络图片文字识别</h1><h2 id=\"2d787ee8\">接口描述</h2><p>用户向服务请求识别一些网络上背景复杂，特殊字体的文字。</p><h2 id=\"5cee1b15\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP 方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/ocr/</span>v1<span class=\"hljs-regexp\">/webimage</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr><tr><td>mask</td><td>false</td><td>string</td><td>-</td><td>表示mask区域的黑白灰度图片，白色代表选中, base64编码</td></tr><tr><td>language_type</td><td>false</td><td>string</td><td>CHN_ENG、ENG、POR、FRE、GER、ITA、SPA、RUS、JAP</td><td>识别语言类型，默认为CHN_ENG。可选值包括：<br>- CHN_ENG：中英文混合；<br>- ENG：英文；<br>- POR：葡萄牙语；<br>- FRE：法语；<br>- GER：德语；<br>- ITA：意大利语；<br>- SPA：西班牙语；<br>- RUS：俄语；<br>- JAP：日语</td></tr><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>detect_language</td><td>FALSE</td><td>string</td><td>true、false</td><td>是否检测语言，默认不检测。当前支持（中文、英语、日语、韩语）</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p>请参考通用文字识别（含位置信息版）的代码内容，并更换请求地址。</p><h2 id=\"9fee3cfe\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>识别结果数组</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">HTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\nx-bce-request-<span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">73</span>c4e74c<span class=\"hljs-number\">-3101</span><span class=\"hljs-number\">-4</span>a00-bf44-fe246959c05e\nCache-<span class=\"hljs-string\">Control:</span> no-cache\n<span class=\"hljs-string\">Server:</span> BWS\n<span class=\"hljs-string\">Date:</span> Tue, <span class=\"hljs-number\">18</span> Oct <span class=\"hljs-number\">2016</span> <span class=\"hljs-number\">02</span>:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">01</span> GMT\nContent-<span class=\"hljs-string\">Type:</span> application/json;charset=UTF<span class=\"hljs-number\">-8</span>\n{\n<span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">2471272194</span>, \n<span class=\"hljs-string\">\"words_result_num\"</span>: <span class=\"hljs-number\">2</span>,\n<span class=\"hljs-string\">\"words_result\"</span>: \n    [\n        {<span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\" TSINGTAO\"</span>}, \n        {<span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"青島睥酒\"</span>}\n    ]\n}</code>\n</pre><h1 id=\"7e4792c7\">身份证识别</h1><h2 id=\"263bbcb4\">接口描述</h2><p>用户向服务请求识别身份证，身份证识别包括正面和背面。</p><h2 id=\"330bed37\">请求说明</h2><p><strong>请求示例</strong></p><p>HTTP 方法：<code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL： <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/ocr/</span>v1<span class=\"hljs-regexp\">/idcard</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>是否必选</th><th>类型</th><th>可选值范围</th><th>说明</th></tr></thead><tbody><tr><td>detect_direction</td><td>false</td><td>boolean</td><td>true、false</td><td>是否检测图像朝向，默认不检测，即：false。朝向是指输入图像是正常方向、逆时针旋转90/180/270度。可选值包括:<br>- true：检测朝向；<br>- false：不检测朝向。</td></tr><tr><td>id_card_side</td><td>true</td><td>string</td><td>front、back</td><td>front：身份证正面；back：身份证背面</td></tr><tr><td>image</td><td>true</td><td>string</td><td>-</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">身份证识别\ncurl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/ocr/v1/idcard?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"id_card_side\":\"front\",\"image\":\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/ocr/v1/idcard?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"id_card_side\\\":\\\"front\\\",\\\"image\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.ocr;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * 身份证识别\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Idcard</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * https://ai.baidu.com/file/BA73D199EED14D8AA5FC5A4BF4BDDA34\n     * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\n     * https://ai.baidu.com/file/88C6E86FB5D141889391693FC84504B1\n     * 下载\n     */</span>\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 身份证识别url</span>\n        String idcardIdentificate = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/ocr/v1/idcard\"</span>;\n        <span class=\"hljs-comment\">// 本地图片路径</span>\n        String filePath = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">byte</span>[] imgData = FileUtil.readFileByBytes(filePath);\n            String imgStr = Base64Util.encode(imgData);\n            <span class=\"hljs-comment\">// 识别身份证正面id_card_side=front;识别身份证背面id_card_side=back;</span>\n            String params = <span class=\"hljs-string\">\"id_card_side=front&amp;\"</span> + URLEncoder.encode(<span class=\"hljs-string\">\"image\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>) + <span class=\"hljs-string\">\"=\"</span>\n                    + URLEncoder.encode(imgStr, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(idcardIdentificate, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># coding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib, urllib2, sys\n<span class=\"hljs-keyword\">import</span> ssl\n\nurl = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/ocr/v1/idcard?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>\nbodys = {}\nbodys[<span class=\"hljs-string\">''</span>] = <span class=\"hljs-string\">\"{\\\"id_card_side\\\":\\\"front\\\",\\\"image\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>\npost_data = bodys[<span class=\"hljs-string\">''</span>]\nrequest = urllib2.Request(url, post_data)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nctx = ssl.create_default_context()\nctx.check_hostname = <span class=\"hljs-keyword\">False</span>\nctx.verify_mode = ssl.CERT_NONE\nresponse = urllib2.urlopen(request, context=ctx)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> (content):\n    print(content)\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/property_tree/ptree.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/property_tree/json_parser.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/date_time.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"idcard.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">// 身份证识别接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> idcard_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/ocr/v1/idcard\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> idcard_result;\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在ptr中，先将其转换为string格式</span>\n    idcard_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n<span class=\"hljs-comment\">/**\n * 调用身份证ocr接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param image_base64 以string格式传递的base64编码的图像数据（注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @param id_card_side 卡的正面或背面\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">idcard_recognize</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;image_base64,<span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> id_card_side)</span></span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = idcard_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"image\"</span>, CURLFORM_COPYCONTENTS, image_base64.data(),\n                     CURLFORM_END);\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"id_card_side\"</span>, CURLFORM_COPYCONTENTS, id_card_side.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = idcard_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Idcard</span>\n\t{\n\t\t<span class=\"hljs-comment\">// 身份证识别</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">idcard</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> strbaser64 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/ocr/idcard.jpeg\"</span>); <span class=\"hljs-comment\">// 图片的base64编码</span>\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/ocr/v1/idcard?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"id_card_side=front&amp;image=\"</span> + HttpUtility.UrlEncode(strbaser64);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"身份证识别:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"88959804\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>字段</th><th>是否必选</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>否</td><td>int32</td><td>图像方向，当detect_direction=true时存在。<br>- -1:未定义，<br>- 0:正向，<br>- 1: 逆时针90度，<br>- 2:逆时针180度，<br>- 3:逆时针270度</td></tr><tr><td>log_id</td><td>是</td><td>uint64</td><td>唯一的log id，用于问题定位</td></tr><tr><td>words_result</td><td>是</td><td>array()</td><td>定位和识别结果数组</td></tr><tr><td>words_result_num</td><td>是</td><td>uint32</td><td>识别结果数，表示words_result的元素个数</td></tr><tr><td>+location</td><td>是</td><td>array()</td><td>位置数组（坐标0点为左上角）</td></tr><tr><td>++left</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的水平坐标</td></tr><tr><td>++top</td><td>是</td><td>uint32</td><td>表示定位位置的长方形左上顶点的垂直坐标</td></tr><tr><td>++width</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的宽度</td></tr><tr><td>++height</td><td>是</td><td>uint32</td><td>表示定位位置的长方形的高度</td></tr><tr><td>+words</td><td>否</td><td>string</td><td>识别结果字符串</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">HTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\nx-bce-request-<span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">73</span>c4e74c<span class=\"hljs-number\">-3101</span><span class=\"hljs-number\">-4</span>a00-bf44-fe246959c05e\nCache-<span class=\"hljs-string\">Control:</span> no-cache\n<span class=\"hljs-string\">Server:</span> BWS\n<span class=\"hljs-string\">Date:</span> Tue, <span class=\"hljs-number\">18</span> Oct <span class=\"hljs-number\">2016</span> <span class=\"hljs-number\">02</span>:<span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">01</span> GMT\nContent-<span class=\"hljs-string\">Type:</span> application/json;charset=UTF<span class=\"hljs-number\">-8</span>\n{\n    <span class=\"hljs-string\">\"log_id\"</span>: <span class=\"hljs-number\">7037721</span>,\n    <span class=\"hljs-string\">\"direction\"</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-comment\">//detect_direction=true时存在</span>\n    <span class=\"hljs-string\">\"words_result_num\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-string\">\"words_result\"</span>: {\n        <span class=\"hljs-string\">\"住址\"</span>: {\n            <span class=\"hljs-string\">\"location\"</span>: {\n                <span class=\"hljs-string\">\"left\"</span>: <span class=\"hljs-number\">227</span>,\n                <span class=\"hljs-string\">\"top\"</span>: <span class=\"hljs-number\">235</span>,\n                <span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">229</span>,\n                <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">51</span>\n            },\n            <span class=\"hljs-string\">\"words\"</span>: <span class=\"hljs-string\">\"湖北省天门市渔薪镇杨咀村一组2号\"</span>,\n        }\n        ...\n    }\n}</code>\n</pre><h1 id=\"70b78383\">银行卡识别</h1><h2 id=\"81e6760a\">接口描述</h2><p>识别银行卡并返回卡号和发卡行。</p><p><strong>请求示例</strong></p><p>HTTP 方法: <code><span class=\"hljs-attribute\">POST</span></code></p><p>请求URL: <code>https:<span class=\"hljs-regexp\">//</span>aip.baidubce.com<span class=\"hljs-regexp\">/rest/</span><span class=\"hljs-number\">2.0</span><span class=\"hljs-regexp\">/ocr/</span>v1<span class=\"hljs-regexp\">/bankcard</span></code></p><p>URL参数：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>access_token</td><td>通过API Key和Secret Key获取的access_token,参考“<a href=\"http://ai.baidu.com/docs#/Auth\" target=\"_blank\">Access Token获取</a>”</td></tr></tbody></table><p>Header如下：</p><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>Content-Type</td><td>application/x-www-form-urlencoded</td></tr></tbody></table><p>Body中放置请求参数，参数详情如下：</p><p><strong>请求参数</strong></p><table><thead><tr><th>参数</th><th>类型</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>string</td><td>是</td><td>图像数据，base64编码，要求base64编码后大小不超过4M，最短边至少15px，最长边最大4096px,支持jpg/png/bmp格式</td></tr></tbody></table><p><strong>请求代码示例</strong></p><p><strong>提示一：</strong>使用示例代码前，请记得替换其中的示例Token、图片地址或Base64信息。</p><p><strong>提示二：</strong>部分语言依赖的类或库，请在代码注释中查看下载地址。</p><div class=\"code-block\"><div class=\"code-block-tab-container\"><div class=\"code-block-title block-active\" data-index=\"0\">bash</div><div class=\"code-block-title\" data-index=\"1\">PHP</div><div class=\"code-block-title\" data-index=\"2\">Java</div><div class=\"code-block-title\" data-index=\"3\">Python</div><div class=\"code-block-title\" data-index=\"4\">C++</div><div class=\"code-block-title\" data-index=\"5\">C#</div></div><div data-lan=\"bash\"><pre><code class=\"hljs\">银行卡识别\ncurl -i -k <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/ocr/v1/bankcard?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span> --data <span class=\"hljs-string\">'{\"image\":\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\"}'</span> -H <span class=\"hljs-string\">'Content-Type:application/x-www-form-urlencoded'</span></code></pre></div><div data-lan=\"PHP\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">request_post</span><span class=\"hljs-params\">($url = <span class=\"hljs-string\">''</span>, $param = <span class=\"hljs-string\">''</span>)</span> </span>{\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>($url) || <span class=\"hljs-keyword\">empty</span>($param)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n        }\n        \n        $postUrl = $url;\n        $curlPost = $param;\n        $curl = curl_init();<span class=\"hljs-comment\">//初始化curl</span>\n        curl_setopt($curl, CURLOPT_URL,$postUrl);<span class=\"hljs-comment\">//抓取指定网页</span>\n        curl_setopt($curl, CURLOPT_HEADER, <span class=\"hljs-number\">0</span>);<span class=\"hljs-comment\">//设置header</span>\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//要求结果为字符串且输出到屏幕上</span>\n        curl_setopt($curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//post提交方式</span>\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);\n        $data = curl_exec($curl);<span class=\"hljs-comment\">//运行curl</span>\n        curl_close($curl);\n        \n        <span class=\"hljs-keyword\">return</span> $data;\n    }\n\n\t$url = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/ocr/v1/bankcard?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>;\n    $bodys = <span class=\"hljs-string\">\"{\\\"image\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}\"</span>;\n    \n    $res = request_post($url, $bodys);\n\n    var_dump($res);\n</code></pre></div><div data-lan=\"Java\"><pre><code class=\"hljs\"><span class=\"hljs-comment\">/*\n * Copyright (C) 2017 Baidu, Inc. All Rights Reserved.\n */</span>\n<span class=\"hljs-keyword\">package</span> com.baidu.ai.aip.ocr;\n\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.Base64Util;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.FileUtil;\n<span class=\"hljs-keyword\">import</span> com.baidu.ai.aip.utils.HttpUtil;\n\n<span class=\"hljs-keyword\">import</span> java.net.URLEncoder;\n\n<span class=\"hljs-comment\">/**\n * 银行卡识别\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Bankcard</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 重要提示代码中所需工具类\n     * FileUtil,Base64Util,HttpUtil请从\n     * http://ai.baidu.com/download/demo/java/utils/FileUtil.java\n     * http://ai.baidu.com/download/demo/java/utils/Base64Util.java\n     * http://ai.baidu.com/download/demo/java/utils/HttpUtil.java\n     * 下载\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-comment\">// 银行卡识别url</span>\n        String bankcardIdentificate = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/ocr/v1/bankcard\"</span>;\n        <span class=\"hljs-comment\">// 本地图片路径</span>\n        String filePath = <span class=\"hljs-string\">\"#####本地文件路径#####\"</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">byte</span>[] imgData = FileUtil.readFileByBytes(filePath);\n            String imgStr = Base64Util.encode(imgData);\n            String params = URLEncoder.encode(<span class=\"hljs-string\">\"image\"</span>, <span class=\"hljs-string\">\"UTF-8\"</span>) + <span class=\"hljs-string\">\"=\"</span> + URLEncoder.encode(imgStr, <span class=\"hljs-string\">\"UTF-8\"</span>);\n            <span class=\"hljs-comment\">/**\n             * 线上环境access_token有过期时间， 客户端可自行缓存，过期后重新获取。\n             */</span>\n            String accessToken = <span class=\"hljs-string\">\"#####调用鉴权接口获取的token#####\"</span>;\n            String result = HttpUtil.post(bankcardIdentificate, accessToken, params);\n            System.out.println(result);\n        } <span class=\"hljs-keyword\">catch</span> (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre></div><div data-lan=\"Python\"><pre><code class=\"hljs\"><span class=\"hljs-comment\"># coding:utf-8</span>\n<span class=\"hljs-keyword\">import</span> urllib, urllib2, sys\n<span class=\"hljs-keyword\">import</span> ssl\n\nurl = <span class=\"hljs-string\">'https://aip.baidubce.com/rest/2.0/ocr/v1/bankcard?access_token=24.a1ff1c9e242129e0e88e506dfc223454.2592000.1492586050.282335-9395294'</span>\nbodys = {}\nbodys[<span class=\"hljs-string\">''</span>] = <span class=\"hljs-string\">\"{\\\"image\\\":\\\"%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F4QDKRXhpZgAATU0AK\\\"}w\"</span>\npost_data = bodys[<span class=\"hljs-string\">''</span>]\nrequest = urllib2.Request(url, post_data)\nrequest.add_header(<span class=\"hljs-string\">'Content-Type'</span>, <span class=\"hljs-string\">'application/x-www-form-urlencoded'</span>)\nctx = ssl.create_default_context()\nctx.check_hostname = <span class=\"hljs-keyword\">False</span>\nctx.verify_mode = ssl.CERT_NONE\nresponse = urllib2.urlopen(request, context=ctx)\ncontent = response.read()\n<span class=\"hljs-keyword\">if</span> (content):\n    print(content)\n</code></pre></div><div data-lan=\"C++\"><pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;curl/curl.h&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/property_tree/ptree.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/property_tree/json_parser.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;boost/date_time.hpp&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"bankcard.h\"</span></span>\n<span class=\"hljs-comment\">// libcurl库下载链接：https://curl.haxx.se/download.html</span>\n<span class=\"hljs-comment\">// jsoncpp库下载链接：https://github.com/open-source-parsers/jsoncpp/</span>\n<span class=\"hljs-comment\">// 银行卡ocr接口url</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> bank_card_url = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/ocr/v1/bankcard\"</span>;\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> bank_card_result;\n<span class=\"hljs-comment\">/**\n * curl发送http请求调用的回调函数，回调函数中对返回的json格式的body进行了解析，解析结果储存在全局的静态变量bank_card_result当中\n * @param 参数定义见libcurl文档\n * @return 返回值定义见libcurl文档\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> size_t <span class=\"hljs-title\">callback</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *ptr, <span class=\"hljs-keyword\">size_t</span> size, <span class=\"hljs-keyword\">size_t</span> nmemb, <span class=\"hljs-keyword\">void</span> *stream)</span> </span>{\n    <span class=\"hljs-comment\">// 获取到的body存放在参数ptr中，先将其转换为string格式</span>\n    bank_card_result = <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>((<span class=\"hljs-keyword\">char</span> *) ptr, size * nmemb);\n    <span class=\"hljs-keyword\">return</span> size * nmemb;\n}\n<span class=\"hljs-comment\">/**\n * 调用银行卡ocr接口，返回json格式的结果，具体格式解析见百度大脑文档\n * @param json_result 以string格式返回的json格式的结果\n * @param image_base64 以string格式传递的base64编码的图像数据（注：base64数据不包含格式信息（即不包含data:image/jpeg;base64））\n * @param access_token 以string格式传入的access token数据，access token获取方式见access_token获取相关文档及代码\n * @return 调用成功返回0，发生错误返回其他错误码\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">bank_card_recognize</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;json_result, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;image_base64,\n                                   <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> &amp;access_token)</span></span>{\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> url = bank_card_url + <span class=\"hljs-string\">\"?access_token=\"</span> + access_token;\n    CURL *curl = <span class=\"hljs-literal\">NULL</span>;\n    CURLcode result_code;\n    <span class=\"hljs-keyword\">int</span> is_success;\n    curl = curl_easy_init();\n    <span class=\"hljs-keyword\">if</span> (curl) {\n        <span class=\"hljs-comment\">// 使用libcurl post数据：设定待post的url，将image以表单的形式填入body</span>\n        curl_easy_setopt(curl, CURLOPT_URL, url.data());\n        curl_easy_setopt(curl, CURLOPT_POST, <span class=\"hljs-number\">1</span>);\n        curl_httppost *post = <span class=\"hljs-literal\">NULL</span>;\n        curl_httppost *last = <span class=\"hljs-literal\">NULL</span>;\n        curl_formadd(&amp;post, &amp;last, CURLFORM_COPYNAME, <span class=\"hljs-string\">\"image\"</span>, CURLFORM_COPYCONTENTS, image_base64.data(),\n                     CURLFORM_END);\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, post);\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, callback);\n        result_code = curl_easy_perform(curl);\n        <span class=\"hljs-keyword\">if</span> (result_code != CURLE_OK) {\n            <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_perform() failed: %s\\n\"</span>,\n                    curl_easy_strerror(result_code));\n            is_success = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">return</span> is_success;\n        }\n        json_result = bank_card_result;\n        curl_easy_cleanup(curl);\n        is_success = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">fprintf</span>(<span class=\"hljs-built_in\">stderr</span>, <span class=\"hljs-string\">\"curl_easy_init() failed.\"</span>);\n        is_success = <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">return</span> is_success;\n}\n</code></pre></div><div data-lan=\"C#\"><pre><code class=\"hljs\">﻿<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.IO;\n<span class=\"hljs-keyword\">using</span> System.Net;\n<span class=\"hljs-keyword\">using</span> System.Text;\n<span class=\"hljs-keyword\">using</span> System.Web;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">com.baidu.ai</span>\n{\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BankCard</span>\n\t{\n\t\t<span class=\"hljs-comment\">//银行卡识别</span>\n\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">string</span> <span class=\"hljs-title\">bankCard</span>(<span class=\"hljs-params\"></span>)\n\t\t</span>{\n\t\t\t<span class=\"hljs-keyword\">string</span> token = <span class=\"hljs-string\">\"########\"</span>;\n\t\t\t<span class=\"hljs-keyword\">string</span> strbaser64 = FileUtils.getFileBase64(<span class=\"hljs-string\">\"/work/ai/images/ocr/bankcard.jpeg\"</span>); <span class=\"hljs-comment\">// 图片的base64编码</span>\n\t\t\t<span class=\"hljs-keyword\">string</span> host = <span class=\"hljs-string\">\"https://aip.baidubce.com/rest/2.0/ocr/v1/bankcard?access_token=\"</span> + token;\n\t\t\tEncoding encoding = Encoding.Default;\n\t\t\tHttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);\n\t\t\trequest.Method = <span class=\"hljs-string\">\"post\"</span>;\n\t\t\trequest.ContentType = <span class=\"hljs-string\">\"application/x-www-form-urlencoded\"</span>;\n\t\t\trequest.KeepAlive = <span class=\"hljs-literal\">true</span>;\n\t\t\tString str = <span class=\"hljs-string\">\"image=\"</span> + HttpUtility.UrlEncode(strbaser64);\n\t\t\t<span class=\"hljs-keyword\">byte</span>[] buffer = encoding.GetBytes(str);\n\t\t\trequest.ContentLength = buffer.Length;\n\t\t\trequest.GetRequestStream().Write(buffer, <span class=\"hljs-number\">0</span>, buffer.Length);\n\t\t\tHttpWebResponse response = (HttpWebResponse)request.GetResponse();\n\t\t\tStreamReader reader = <span class=\"hljs-keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.Default);\n\t\t\t<span class=\"hljs-keyword\">string</span> result = reader.ReadToEnd();\n\t\t\tConsole.WriteLine(<span class=\"hljs-string\">\"银行卡识别:\"</span>);\n\t\t\tConsole.WriteLine(result);\n\t\t\t<span class=\"hljs-keyword\">return</span> result;\n\t\t}\n\t}\n}\n</code></pre></div></div><h2 id=\"e8edaa3f\">返回说明</h2><p><strong>返回参数</strong></p><table><thead><tr><th>参数</th><th>类型</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>log_id</td><td>uint64</td><td>是</td><td>请求标识码，随机数，唯一。</td></tr><tr><td>result</td><td>object</td><td>是</td><td>返回结果</td></tr><tr><td>+bank_card_number</td><td>string</td><td>是</td><td>银行卡卡号</td></tr><tr><td>+bank_name</td><td>string</td><td>是</td><td>银行名，不能识别时为空</td></tr><tr><td>+bank_card_type</td><td>uint32</td><td>是</td><td>银行卡类型，0:不能识别; 1: 借记卡; 2: 信用卡</td></tr></tbody></table><p><strong>返回示例</strong></p><pre>\n<code class=\"hljs\" lang=\"\">{\n    <span class=\"hljs-attr\">\"log_id\"</span>: <span class=\"hljs-number\">1447188951</span>,\n    <span class=\"hljs-attr\">\"result\"</span>: {\n        <span class=\"hljs-attr\">\"bank_card_number\"</span>: <span class=\"hljs-string\">\"622500000000000\"</span>,\n        <span class=\"hljs-attr\">\"bank_name\"</span>: <span class=\"hljs-string\">\"招商银行\"</span>,\n        <span class=\"hljs-attr\">\"bank_card_type\"</span>: <span class=\"hljs-number\">1</span>\n    }\n}</code>\n</pre><h1 id=\"58fd45dd\">错误码</h1><p>若请求错误，服务器将返回的JSON文本包含以下参数：</p><ul><li><p><strong>error_code：</strong>错误码。</p></li><li><p><strong>error_msg：</strong>错误描述信息，帮助理解和解决发生的错误。</p></li></ul><p>例如Access Token失效返回：</p><pre>\n<code class=\"hljs\" lang=\"\">{\n  <span class=\"hljs-attr\">\"error_code\"</span>: <span class=\"hljs-number\">110</span>,\n  <span class=\"hljs-attr\">\"error_msg\"</span>: <span class=\"hljs-string\">\"Access token invalid or no longer valid\"</span>\n}</code>\n</pre><p>需要重新获取新的Access Token再次请求即可。</p><table><thead><tr><th>错误码</th><th>错误信息</th><th>描述</th></tr></thead><tbody><tr><td>4</td><td>Open api request limit reached</td><td>集群超限额</td></tr><tr><td>17</td><td>Open api daily request limit reached</td><td>每天流量超限额</td></tr><tr><td>18</td><td>Open api qps request limit reached</td><td>QPS超限额</td></tr><tr><td>19</td><td>Open api total request limit reached</td><td>请求总量超限额</td></tr><tr><td>100</td><td>Invalid parameter</td><td>无效参数</td></tr><tr><td>110</td><td>Access token invalid or no longer valid</td><td>Access Token失效</td></tr><tr><td>111</td><td>Access token expired</td><td>Access token过期</td></tr><tr><td>216015</td><td>module closed</td><td>模块关闭</td></tr><tr><td>216100</td><td>invalid param</td><td>非法参数</td></tr><tr><td>216101</td><td>not enough param</td><td>参数数量不够</td></tr><tr><td>216102</td><td>service not support</td><td>业务不支持</td></tr><tr><td>216103</td><td>param too long</td><td>参数太长</td></tr><tr><td>216110</td><td>appid not exist</td><td>APP ID不存在</td></tr><tr><td>216111</td><td>invalid userid</td><td>非法用户ID</td></tr><tr><td>216200</td><td>empty image</td><td>空的图片</td></tr><tr><td>216201</td><td>image format error</td><td>图片格式错误</td></tr><tr><td>216202</td><td>image size error</td><td>图片大小错误</td></tr><tr><td>216300</td><td>db error</td><td>DB错误</td></tr><tr><td>216400</td><td>backend error</td><td>后端系统错误</td></tr><tr><td>216401</td><td>internal error</td><td>内部错误</td></tr><tr><td>216500</td><td>unknown error</td><td>未知错误</td></tr><tr><td>216600</td><td>id number format error</td><td>身份证的ID格式错误</td></tr><tr><td>216601</td><td>id number and name not match</td><td>身份证的ID和名字不匹配</td></tr><tr><td>216630</td><td>recognize error</td><td>识别错误</td></tr><tr><td>216631</td><td>recognize bank card error</td><td>识别银行卡错误</td></tr><tr><td>216632</td><td>ocr unknown error</td><td>ocr未知错误</td></tr><tr><td>216633</td><td>recognize idcard error</td><td>识别身份证错误</td></tr><tr><td>216634</td><td>detect error</td><td>检测错误</td></tr><tr><td>216635</td><td>get mask error</td><td>获取mask图片错误</td></tr><tr><td>282000</td><td>logic internal error</td><td>业务逻辑层内部错误</td></tr><tr><td>282001</td><td>logic backend error</td><td>业务逻辑层后端服务错误</td></tr><tr><td>282002</td><td>input encoding error</td><td>请求参数编码错误</td></tr><tr><td>282100</td><td>image transcode error</td><td>图片压缩转码错误</td></tr></tbody></table>",
  "headings": [
    {
      "level": 1,
      "text": "简介",
      "id": "2a8d26ce"
    },
    {
      "level": 2,
      "text": "接口能力",
      "id": "6af3bd00"
    },
    {
      "level": 2,
      "text": "请求格式",
      "id": "5724729b"
    },
    {
      "level": 2,
      "text": "返回格式",
      "id": "cabd4c0f"
    },
    {
      "level": 2,
      "text": "请求限制",
      "id": "aed409bb"
    },
    {
      "level": 1,
      "text": "调用方式",
      "id": "0410defd"
    },
    {
      "level": 2,
      "text": "调用方式一",
      "id": "8f627763"
    },
    {
      "level": 2,
      "text": "调用方式二",
      "id": "9f91389a"
    },
    {
      "level": 1,
      "text": "通用文字识别",
      "id": "e1bd77f3"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "ade83bae"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "c985f3cd"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "d279b050"
    },
    {
      "level": 1,
      "text": "通用文字识别（含位置信息版）",
      "id": "0d9adafa"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "5e72a5e7"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "5b9a933c"
    },
    {
      "level": 1,
      "text": "通用文字识别（含生僻字版）",
      "id": "fb210211"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "33079fbf"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "02a82c72"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "1dc962a7"
    },
    {
      "level": 1,
      "text": "网络图片文字识别",
      "id": "6c337940"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "2d787ee8"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "5cee1b15"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "9fee3cfe"
    },
    {
      "level": 1,
      "text": "身份证识别",
      "id": "7e4792c7"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "263bbcb4"
    },
    {
      "level": 2,
      "text": "请求说明",
      "id": "330bed37"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "88959804"
    },
    {
      "level": 1,
      "text": "银行卡识别",
      "id": "70b78383"
    },
    {
      "level": 2,
      "text": "接口描述",
      "id": "81e6760a"
    },
    {
      "level": 2,
      "text": "返回说明",
      "id": "e8edaa3f"
    },
    {
      "level": 1,
      "text": "错误码",
      "id": "58fd45dd"
    }
  ]
}
